{"version":3,"sources":["views/apps/chat/store/actions/index.js","views/apps/chat/Chat.js","views/apps/chat/SidebarLeft.js","views/apps/chat/UserProfileSidebar.js","views/apps/chat/index.js","../node_modules/reactstrap/es/Label.js","../node_modules/reactstrap/es/Form.js","../node_modules/reactstrap/es/CardText.js"],"names":["getChatContacts","dispatch","axios","get","then","res","type","data","selectChat","id","ChatLog","props","handleUser","handleUserSidebarRight","handleSidebar","store","userSidebarLeft","userProfile","selectedUser","chatArea","useRef","useDispatch","msg","setMsg","useState","useEffect","Object","keys","length","ReactDOM","findDOMNode","current","scrollTop","Number","MAX_SAFE_INTEGER","handleSendMsg","e","obj","preventDefault","message","post","contact","ChatWrapper","chat","PerfectScrollbar","_jsxs","className","children","classnames","_jsx","MessageSquare","onClick","handleStartConversation","window","innerWidth","Menu","size","Avatar","imgHeight","imgWidth","img","avatar","status","handleAvatarClick","fullName","PhoneCall","Video","Search","UncontrolledDropdown","DropdownToggle","color","MoreVertical","DropdownMenu","right","DropdownItem","href","ref","options","wheelPropagation","formattedChatData","chatLog","formattedChatLog","chatMessageSenderId","senderId","undefined","msgGroup","messages","forEach","index","push","time","map","item","Form","onSubmit","InputGroup","InputGroupAddon","addonType","InputGroupText","Mic","Input","value","onChange","target","placeholder","Label","for","Image","hidden","Button","Send","SidebarLeft","sidebar","handleUserSidebarLeft","chats","contacts","about","setAbout","query","setQuery","active","setActive","setStatus","filteredChat","setFilteredChat","filteredContacts","setFilteredContacts","handleUserClick","show","X","role","rows","defaultValue","CustomInput","label","checked","CheckSquare","name","defaultChecked","Bell","User","Trash","searchFilterFunction","toLowerCase","includes","filteredChatsArr","filter","filteredContactssArr","renderChats","formatDateToMonthShort","lastMessage","Date","CardText","unseenMsgs","Badge","pill","renderContacts","UserProfileSidebar","user","userSidebarRight","Mail","Clock","Tag","Star","Slash","AppChat","useSelector","state","setUser","setSidebar","setUserSidebarRight","setUserSidebarLeft","Fragment","Sidebar","handleOverlayClick","Chat","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","order","offset","propTypes","node","check","tag","tagPropType","cssModule","object","xs","sm","md","lg","xl","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","htmlFor","attributes","_objectWithoutPropertiesLoose","colClasses","i","columnProp","colClass","isObject","_classNames","colSizeInterfix","mapToCssModules","classNames","classes","React","createElement","_extends","inline","innerRef","func","_Component","_this","call","this","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","render","_this$props","Component"],"mappings":"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","file":"static/js/303.9bd40a21.chunk.js","sourcesContent":["import axios from 'axios'\n\n// ** Get User Profile\nexport const getUserProfile = () => {\n  return dispatch => {\n    return axios.get('/apps/chat/users/profile-user').then(res => {\n      return dispatch({\n        type: 'GET_USER_PROFILE',\n        userProfile: res.data\n      })\n    })\n  }\n}\n\n// ** Get Chats & Contacts\nexport const getChatContacts = () => {\n  return dispatch => {\n    axios.get('/apps/chat/chats-and-contacts').then(res => {\n      dispatch({\n        type: 'GET_CHAT_CONTACTS',\n        data: res.data\n      })\n    })\n  }\n}\n\n// ** Select Chat\nexport const selectChat = id => {\n  return dispatch => {\n    axios.get('/apps/chat/get-chat', { id }).then(res => {\n      dispatch({ type: 'SELECT_CHAT', data: res.data })\n      dispatch(getChatContacts())\n    })\n  }\n}\n\n// ** Send Msg\nexport const sendMsg = obj => {\n  return dispatch => {\n    axios.post('/apps/chat/send-msg', { obj }).then(res => {\n      dispatch({ type: 'SEND_MSG', data: res.data })\n      dispatch(selectChat(obj.contact.id))\n    })\n  }\n}\n","// ** React Imports\nimport { useState, useEffect, useRef } from 'react'\nimport ReactDOM from 'react-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { useDispatch } from 'react-redux'\nimport { sendMsg } from './store/actions'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { MessageSquare, Menu, PhoneCall, Video, Search, MoreVertical, Mic, Image, Send } from 'react-feather'\nimport {\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Form,\n  Label,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  InputGroupText,\n  Button\n} from 'reactstrap'\n\nconst ChatLog = props => {\n  // ** Props & Store\n  const { handleUser, handleUserSidebarRight, handleSidebar, store, userSidebarLeft } = props\n  const { userProfile, selectedUser } = store\n\n  // ** Refs & Dispatch\n  const chatArea = useRef(null)\n  const dispatch = useDispatch()\n\n  // ** State\n  const [msg, setMsg] = useState('')\n\n  // ** Scroll to chat bottom\n  const scrollToBottom = () => {\n    const chatContainer = ReactDOM.findDOMNode(chatArea.current)\n    chatContainer.scrollTop = Number.MAX_SAFE_INTEGER\n  }\n\n  // ** If user chat is not empty scrollToBottom\n  useEffect(() => {\n    const selectedUserLen = Object.keys(selectedUser).length\n\n    if (selectedUserLen) {\n      scrollToBottom()\n    }\n  }, [selectedUser])\n\n  // ** Formats chat data based on sender\n  const formattedChatData = () => {\n    let chatLog = []\n    if (selectedUser.chat) {\n      chatLog = selectedUser.chat.chat\n    }\n\n    const formattedChatLog = []\n    let chatMessageSenderId = chatLog[0] ? chatLog[0].senderId : undefined\n    let msgGroup = {\n      senderId: chatMessageSenderId,\n      messages: []\n    }\n    chatLog.forEach((msg, index) => {\n      if (chatMessageSenderId === msg.senderId) {\n        msgGroup.messages.push({\n          msg: msg.message,\n          time: msg.time\n        })\n      } else {\n        chatMessageSenderId = msg.senderId\n        formattedChatLog.push(msgGroup)\n        msgGroup = {\n          senderId: msg.senderId,\n          messages: [\n            {\n              msg: msg.message,\n              time: msg.time\n            }\n          ]\n        }\n      }\n      if (index === chatLog.length - 1) formattedChatLog.push(msgGroup)\n    })\n    return formattedChatLog\n  }\n\n  // ** Renders user chat\n  const renderChats = () => {\n    return formattedChatData().map((item, index) => {\n      return (\n        <div\n          key={index}\n          className={classnames('chat', {\n            'chat-left': item.senderId !== 11\n          })}\n        >\n          <div className='chat-avatar'>\n            <Avatar\n              className='box-shadow-1 cursor-pointer'\n              img={item.senderId === 11 ? userProfile.avatar : selectedUser.contact.avatar}\n            />\n          </div>\n\n          <div className='chat-body'>\n            {item.messages.map(chat => (\n              <div key={chat.msg} className='chat-content'>\n                <p>{chat.msg}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      )\n    })\n  }\n\n  // ** Opens right sidebar & handles its data\n  const handleAvatarClick = obj => {\n    handleUserSidebarRight()\n    handleUser(obj)\n  }\n\n  // ** On mobile screen open left sidebar on Start Conversation Click\n  const handleStartConversation = () => {\n    if (!Object.keys(selectedUser).length && !userSidebarLeft && window.innerWidth <= 1200) {\n      handleSidebar()\n    }\n  }\n\n  // ** Sends New Msg\n  const handleSendMsg = e => {\n    e.preventDefault()\n    if (msg.length) {\n      dispatch(sendMsg({ ...selectedUser, message: msg }))\n      setMsg('')\n    }\n  }\n\n  // ** ChatWrapper tag based on chat's length\n  const ChatWrapper = Object.keys(selectedUser).length && selectedUser.chat ? PerfectScrollbar : 'div'\n\n  return (\n    <div className='chat-app-window'>\n      <div className={classnames('start-chat-area', { 'd-none': Object.keys(selectedUser).length })}>\n        <div className='start-chat-icon mb-1'>\n          <MessageSquare />\n        </div>\n        <h4 className='sidebar-toggle start-chat-text' onClick={handleStartConversation}>\n          Start Conversation\n        </h4>\n      </div>\n      {Object.keys(selectedUser).length ? (\n        <div className={classnames('active-chat', { 'd-none': selectedUser === null })}>\n          <div className='chat-navbar'>\n            <header className='chat-header'>\n              <div className='d-flex align-items-center'>\n                <div className='sidebar-toggle d-block d-lg-none mr-1' onClick={handleSidebar}>\n                  <Menu size={21} />\n                </div>\n                <Avatar\n                  imgHeight='36'\n                  imgWidth='36'\n                  img={selectedUser.contact.avatar}\n                  status={selectedUser.contact.status}\n                  className='avatar-border user-profile-toggle m-0 mr-1'\n                  onClick={() => handleAvatarClick(selectedUser.contact)}\n                />\n                <h6 className='mb-0'>{selectedUser.contact.fullName}</h6>\n              </div>\n              <div className='d-flex align-items-center'>\n                <PhoneCall size={18} className='cursor-pointer d-sm-block d-none mr-1' />\n                <Video size={18} className='cursor-pointer d-sm-block d-none mr-1' />\n                <Search size={18} className='cursor-pointer d-sm-block d-none' />\n                <UncontrolledDropdown>\n                  <DropdownToggle className='btn-icon' color='transparent' size='sm'>\n                    <MoreVertical size='18' />\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\n                      View Contact\n                    </DropdownItem>\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\n                      Mute Notifications\n                    </DropdownItem>\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\n                      Block Contact\n                    </DropdownItem>\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\n                      Clear Chat\n                    </DropdownItem>\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\n                      Report\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </div>\n            </header>\n          </div>\n\n          <ChatWrapper ref={chatArea} className='user-chats' options={{ wheelPropagation: false }}>\n            {selectedUser.chat ? <div className='chats'>{renderChats()}</div> : null}\n          </ChatWrapper>\n\n          <Form className='chat-app-form' onSubmit={e => handleSendMsg(e)}>\n            <InputGroup className='input-group-merge mr-1 form-send-message'>\n              <InputGroupAddon addonType='prepend'>\n                <InputGroupText>\n                  <Mic className='cursor-pointer' size={14} />\n                </InputGroupText>\n              </InputGroupAddon>\n              <Input\n                value={msg}\n                onChange={e => setMsg(e.target.value)}\n                placeholder='Type your message or use speech to text'\n              />\n              <InputGroupAddon addonType='append'>\n                <InputGroupText>\n                  <Label className='attachment-icon mb-0' for='attach-doc'>\n                    <Image className='cursor-pointer text-secondary' size={14} />\n                    <input type='file' id='attach-doc' hidden />\n                  </Label>\n                </InputGroupText>\n              </InputGroupAddon>\n            </InputGroup>\n            <Button className='send' color='primary'>\n              <Send size={14} className='d-lg-none' />\n              <span className='d-none d-lg-block'>Send</span>\n            </Button>\n          </Form>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default ChatLog\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { useDispatch } from 'react-redux'\nimport { selectChat } from './store/actions'\n\n// ** Utils\nimport { formatDateToMonthShort } from '@utils'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { X, Search, CheckSquare, Bell, User, Trash } from 'react-feather'\nimport { CardText, InputGroup, InputGroupAddon, Input, InputGroupText, Badge, CustomInput, Button } from 'reactstrap'\n\nconst SidebarLeft = props => {\n  // ** Props & Store\n  const { store, sidebar, handleSidebar, userSidebarLeft, handleUserSidebarLeft } = props\n  const { chats, contacts, userProfile } = store\n\n  // ** Dispatch\n  const dispatch = useDispatch()\n\n  // ** State\n  const [about, setAbout] = useState('')\n  const [query, setQuery] = useState('')\n  const [active, setActive] = useState({})\n  const [status, setStatus] = useState('online')\n  const [filteredChat, setFilteredChat] = useState([])\n  const [filteredContacts, setFilteredContacts] = useState([])\n\n  // ** Handles User Chat Click\n  const handleUserClick = (type, id) => {\n    dispatch(selectChat(id))\n    setActive({ type, id })\n    if (sidebar === true) {\n      handleSidebar()\n    }\n  }\n\n  // ** Renders Chat\n  const renderChats = () => {\n    if (chats && chats.length) {\n      if (query.length && !filteredChat.length) {\n        return (\n          <li className='no-results show'>\n            <h6 className='mb-0'>No Chats Found</h6>\n          </li>\n        )\n      } else {\n        const arrToMap = query.length && filteredChat.length ? filteredChat : chats\n\n        return arrToMap.map(item => {\n          const time = formatDateToMonthShort(item.chat.lastMessage ? item.chat.lastMessage.time : new Date())\n\n          return (\n            <li\n              className={classnames({\n                active: active.type === 'chat' && active.id === item.id\n              })}\n              key={item.id}\n              onClick={() => handleUserClick('chat', item.id)}\n            >\n              <Avatar img={item.avatar} imgHeight='42' imgWidth='42' status={item.status} />\n              <div className='chat-info flex-grow-1'>\n                <h5 className='mb-0'>{item.fullName}</h5>\n                <CardText className='text-truncate'>\n                  {item.chat.lastMessage ? item.chat.lastMessage.message : chats[chats.length - 1].message}\n                </CardText>\n              </div>\n              <div className='chat-meta text-nowrap'>\n                <small className='float-right mb-25 chat-time ml-25'>{time}</small>\n                {item.chat.unseenMsgs >= 1 ? (\n                  <Badge className='float-right' color='danger' pill>\n                    {item.chat.unseenMsgs}\n                  </Badge>\n                ) : null}\n              </div>\n            </li>\n          )\n        })\n      }\n    } else {\n      return null\n    }\n  }\n\n  // ** Renders Contact\n  const renderContacts = () => {\n    if (contacts && contacts.length) {\n      if (query.length && !filteredContacts.length) {\n        return (\n          <li className='no-results show'>\n            <h6 className='mb-0'>No Chats Found</h6>\n          </li>\n        )\n      } else {\n        const arrToMap = query.length && filteredContacts.length ? filteredContacts : contacts\n        return arrToMap.map(item => {\n          return (\n            <li\n              className={classnames({\n                active: active.type === 'contact' && active.id === item.id\n              })}\n              key={item.fullName}\n              onClick={() => handleUserClick('contact', item.id)}\n            >\n              <Avatar img={item.avatar} imgHeight='42' imgWidth='42' />\n              <div className='chat-info flex-grow-1'>\n                <h5 className='mb-0'>{item.fullName}</h5>\n                <CardText className='text-truncate'>{item.about}</CardText>\n              </div>\n            </li>\n          )\n        })\n      }\n    } else {\n      return null\n    }\n  }\n\n  // ** Handles Filter\n  const handleFilter = e => {\n    setQuery(e.target.value)\n    const searchFilterFunction = contact => contact.fullName.toLowerCase().includes(e.target.value.toLowerCase())\n    const filteredChatsArr = chats.filter(searchFilterFunction)\n    const filteredContactssArr = contacts.filter(searchFilterFunction)\n    setFilteredChat([...filteredChatsArr])\n    setFilteredContacts([...filteredContactssArr])\n  }\n\n  return store ? (\n    <div className='sidebar-left'>\n      <div className='sidebar'>\n        <div\n          className={classnames('chat-profile-sidebar', {\n            show: userSidebarLeft\n          })}\n        >\n          <header className='chat-profile-header'>\n            <div className='close-icon' onClick={handleUserSidebarLeft}>\n              <X size={14} />\n            </div>\n            <div className='header-profile-sidebar'>\n              <Avatar className='box-shadow-1 avatar-border' img={userProfile.avatar} status={status} size='xl' />\n              <h4 className='chat-user-name'>{userProfile.fullName}</h4>\n              <span className='user-post'>{userProfile.role}</span>\n            </div>\n          </header>\n          <PerfectScrollbar className='profile-sidebar-area' options={{ wheelPropagation: false }}>\n            <h6 className='section-label mb-1'>About</h6>\n            <div className='about-user'>\n              <Input\n                rows='5'\n                defaultValue={userProfile.about}\n                type='textarea'\n                onChange={e => setAbout(e.target.value)}\n                className={classnames('char-textarea', {\n                  'text-danger': about && about.length > 120\n                })}\n              />\n              <small className='counter-value float-right'>\n                <span className='char-count'>{userProfile.about ? userProfile.about.length : 0}</span>/ 120\n              </small>\n            </div>\n            <h6 className='section-label mb-1 mt-3'>Status</h6>\n            <ul className='list-unstyled user-status'>\n              <li className='pb-1'>\n                <CustomInput\n                  type='radio'\n                  className='custom-control-primary'\n                  id='online'\n                  label='Online'\n                  onChange={e => setStatus('online')}\n                  checked={status === 'online'}\n                />\n              </li>\n              <li className='pb-1'>\n                <CustomInput\n                  type='radio'\n                  className='custom-control-danger'\n                  id='busy'\n                  label='Do Not Disturb'\n                  onChange={e => setStatus('busy')}\n                  checked={status === 'busy'}\n                />\n              </li>\n              <li className='pb-1'>\n                <CustomInput\n                  type='radio'\n                  className='custom-control-warning'\n                  id='away'\n                  label='Away'\n                  onChange={e => setStatus('away')}\n                  checked={status === 'away'}\n                />\n              </li>\n              <li className='pb-1'>\n                <CustomInput\n                  type='radio'\n                  className='custom-control-secondary'\n                  id='offline'\n                  label='Offline'\n                  onChange={e => setStatus('offline')}\n                  checked={status === 'offline'}\n                />\n              </li>\n            </ul>\n            <h6 className='section-label mb-1 mt-2'>Settings</h6>\n            <ul className='list-unstyled'>\n              <li className='d-flex justify-content-between align-items-center mb-1'>\n                <div className='d-flex align-items-center'>\n                  <CheckSquare className='mr-75' size='18' />\n                  <span className='align-middle'>Two-step Verification</span>\n                </div>\n                <CustomInput type='switch' id='verification' name='verification' label='' defaultChecked />\n              </li>\n              <li className='d-flex justify-content-between align-items-center mb-1'>\n                <div className='d-flex align-items-center'>\n                  <Bell className='mr-75' size='18' />\n                  <span className='align-middle'>Notification</span>\n                </div>\n                <CustomInput type='switch' id='notifications' name='notifications' label='' />\n              </li>\n              <li className='d-flex align-items-center cursor-pointer mb-1'>\n                <User className='mr-75' size='18' />\n                <span className='align-middle'>Invite Friends</span>\n              </li>\n              <li className='d-flex align-items-center cursor-pointer'>\n                <Trash className='mr-75' size='18' />\n                <span className='align-middle'>Delete Account</span>\n              </li>\n            </ul>\n            <div className='mt-3'>\n              <Button color='primary'>Logout</Button>\n            </div>\n          </PerfectScrollbar>\n        </div>\n        <div\n          className={classnames('sidebar-content', {\n            show: sidebar === true\n          })}\n        >\n          <div className='sidebar-close-icon' onClick={handleSidebar}>\n            <X size={14} />\n          </div>\n          <div className='chat-fixed-search'>\n            <div className='d-flex align-items-center w-100'>\n              <div className='sidebar-profile-toggle' onClick={handleUserSidebarLeft}>\n                {Object.keys(userProfile).length ? (\n                  <Avatar\n                    className='avatar-border'\n                    img={userProfile.avatar}\n                    status={status}\n                    imgHeight='42'\n                    imgWidth='42'\n                  />\n                ) : null}\n              </div>\n              <InputGroup className='input-group-merge ml-1 w-100'>\n                <InputGroupAddon addonType='prepend'>\n                  <InputGroupText className='round'>\n                    <Search className='text-muted' size={14} />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  value={query}\n                  className='round'\n                  placeholder='Search or start a new chat'\n                  onChange={handleFilter}\n                />\n              </InputGroup>\n            </div>\n          </div>\n          <PerfectScrollbar className='chat-user-list-wrapper list-group' options={{ wheelPropagation: false }}>\n            <h4 className='chat-list-title'>Chats</h4>\n            <ul className='chat-users-list chat-list media-list'>{renderChats()}</ul>\n            <h4 className='chat-list-title'>Contacts</h4>\n            <ul className='chat-users-list contact-list media-list'>{renderContacts()}</ul>\n          </PerfectScrollbar>\n        </div>\n      </div>\n    </div>\n  ) : null\n}\n\nexport default SidebarLeft\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { X, Mail, PhoneCall, Clock, Tag, Star, Image, Trash, Slash } from 'react-feather'\n\nconst UserProfileSidebar = props => {\n  // ** Props\n  const { user, handleUserSidebarRight, userSidebarRight } = props\n\n  return (\n    <div className={classnames('user-profile-sidebar', { show: userSidebarRight === true })}>\n      <header className='user-profile-header'>\n        <span className='close-icon' onClick={handleUserSidebarRight}>\n          <X size={14} />\n        </span>\n        <div className='header-profile-sidebar'>\n          <Avatar\n            className='box-shadow-1 avatar-border'\n            size='xl'\n            status={user.status}\n            img={user.avatar}\n            imgHeight='70'\n            imgWidth='70'\n          />\n          <h4 className='chat-user-name'>{user.fullName}</h4>\n          <span className='user-post'>{user.role}</span>\n        </div>\n      </header>\n      <PerfectScrollbar className='user-profile-sidebar-area' options={{ wheelPropagation: false }}>\n        <h6 className='section-label mb-1'>About</h6>\n        <p>{user.about}</p>\n        <div className='personal-info'>\n          <h6 className='section-label mb-1 mt-3'>Personal Information</h6>\n          <ul className='list-unstyled'>\n            <li className='mb-1'>\n              <Mail className='mr-50' size={17} />\n              <span className='align-middle'>lucifer@email.com</span>\n            </li>\n            <li className='mb-1'>\n              <PhoneCall className='mr-50' size={17} />\n              <span className='align-middle'> +1(123) 456 - 7890</span>\n            </li>\n            <li>\n              <Clock className='mr-50' size={17} />\n              <span className='align-middle'> Mon - Fri 10AM - 8PM</span>\n            </li>\n          </ul>\n        </div>\n        <div className='more-options'>\n          <h6 className='section-label mb-1 mt-3'>Options</h6>\n          <ul className='list-unstyled'>\n            <li className='cursor-pointer mb-1'>\n              <Tag className='mr-50' size={17} />\n              <span className='align-middle'> Add Tag</span>\n            </li>\n            <li className='cursor-pointer mb-1'>\n              <Star className='mr-50' size={17} />\n              <span className='align-middle'> Important Contact</span>\n            </li>\n            <li className='cursor-pointer mb-1'>\n              <Image className='mr-50' size={17} />\n              <span className='align-middle'> Shared Media</span>\n            </li>\n            <li className='cursor-pointer mb-1'>\n              <Trash className='mr-50' size={17} />\n              <span className='align-middle'> Delete Contact</span>\n            </li>\n            <li className='cursor-pointer'>\n              <Slash className='mr-50' size={17} />\n              <span className='align-middle'>Block Contact</span>\n            </li>\n          </ul>\n        </div>\n      </PerfectScrollbar>\n    </div>\n  )\n}\n\nexport default UserProfileSidebar\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Chat App Component Imports\nimport Chat from './Chat'\nimport Sidebar from './SidebarLeft'\nimport UserProfileSidebar from './UserProfileSidebar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUserProfile, getChatContacts } from './store/actions'\n\nimport '@styles/base/pages/app-chat.scss'\nimport '@styles/base/pages/app-chat-list.scss'\n\nconst AppChat = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.chat)\n\n  // ** States\n  const [user, setUser] = useState({})\n  const [sidebar, setSidebar] = useState(false)\n  const [userSidebarRight, setUserSidebarRight] = useState(false)\n  const [userSidebarLeft, setUserSidebarLeft] = useState(false)\n\n  // ** Sidebar & overlay toggle functions\n  const handleSidebar = () => setSidebar(!sidebar)\n  const handleUserSidebarLeft = () => setUserSidebarLeft(!userSidebarLeft)\n  const handleUserSidebarRight = () => setUserSidebarRight(!userSidebarRight)\n  const handleOverlayClick = () => {\n    setSidebar(false)\n    setUserSidebarRight(false)\n    setUserSidebarLeft(false)\n  }\n\n  // ** Set user function for Right Sidebar\n  const handleUser = obj => setUser(obj)\n\n  // ** Get data on Mount\n  useEffect(() => {\n    dispatch(getChatContacts())\n    dispatch(getUserProfile())\n  }, [dispatch])\n\n  return (\n    <Fragment>\n      <Sidebar\n        store={store}\n        sidebar={sidebar}\n        handleSidebar={handleSidebar}\n        userSidebarLeft={userSidebarLeft}\n        handleUserSidebarLeft={handleUserSidebarLeft}\n      />\n      <div className='content-right'>\n        <div className='content-wrapper'>\n          <div className='content-body'>\n            <div\n              className={classnames('body-content-overlay', {\n                show: userSidebarRight === true || sidebar === true || userSidebarLeft === true\n              })}\n              onClick={handleOverlayClick}\n            ></div>\n            <Chat\n              store={store}\n              handleUser={handleUser}\n              handleSidebar={handleSidebar}\n              userSidebarLeft={userSidebarLeft}\n              handleUserSidebarRight={handleUserSidebarRight}\n            />\n            <UserProfileSidebar\n              user={user}\n              userSidebarRight={userSidebarRight}\n              handleUserSidebarRight={handleUserSidebarRight}\n            />\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default AppChat\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.propTypes = propTypes;\nCardText.defaultProps = defaultProps;\nexport default CardText;"],"sourceRoot":""}