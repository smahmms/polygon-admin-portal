{"version":3,"sources":["assets/images/slider/01.jpg","assets/images/slider/05.jpg","views/components/carousel/CarouselBasic.js","assets/images/slider/08.jpg","views/components/carousel/CarouselCaptions.js","views/components/carousel/CarouselUncontrolled.js","views/components/carousel/CarouselInterval.js","views/components/carousel/CarouselKeyboard.js","views/components/carousel/CarouselPause.js","views/components/carousel/CarouselSourceCode.js","views/components/carousel/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["images","src","sliderImage2","id","sliderImage3","sliderImage1","CarouselBasic","activeIndex","setActiveIndex","useState","animating","setAnimating","onExiting","onExited","next","nextIndex","length","previous","slides","map","item","_jsx","CarouselItem","children","className","alt","_jsxs","Carousel","keyboard","CarouselIndicators","items","onClickHandler","newIndex","CarouselControl","direction","directionText","header","caption","CarouselCaptions","CarouselCaption","captionText","captionHeader","key","altText","CarouselUncontrolled","UncontrolledCarousel","CarouselInterval","interval","CarouselKeyboard","CarouselPause","pause","carouselBasic","carouselCaptions","carouselUncontrolled","carouselInterval","carouselKeyboard","carouselPause","useEffect","Prism","highlightAll","Fragment","BreadCrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","Alert","color","Info","size","md","Card","title","code","CardText","props","breadCrumbParent2","breadCrumbParent3","Breadcrumb","BreadcrumbItem","tag","Link","to","active","CardSnippet","noBody","iconCode","isOpen","setIsOpen","IconCode","Code","Wrapper","CardBody","CardHeader","CardTitle","onClick","toggle","Collapse"],"mappings":"iHAAe,QAA0B,8B,oCCA1B,QAA0B,8B,6JCMzC,MAAMA,EAAS,CACb,CACEC,IAAKC,UACLC,GAAI,GAEN,CACEF,IAAKG,UACLD,GAAI,GAEN,CACEF,IAAKI,IACLF,GAAI,IAkDOG,MA9COA,KACpB,MAAOC,EAAaC,GAAkBC,mBAAS,IACxCC,EAAWC,GAAgBF,mBAAS,GAErCG,EAAYA,KAChBD,GAAa,EAAK,EAGdE,EAAWA,KACfF,GAAa,EAAM,EAGfG,EAAOA,KACX,GAAIJ,EAAW,OACf,MAAMK,EAAYR,IAAgBP,EAAOgB,OAAS,EAAI,EAAIT,EAAc,EACxEC,EAAeO,EAAU,EAGrBE,EAAWA,KACf,GAAIP,EAAW,OACf,MAAMK,EAA4B,IAAhBR,EAAoBP,EAAOgB,OAAS,EAAIT,EAAc,EACxEC,EAAeO,EAAU,EAQrBG,EAASlB,EAAOmB,KAAIC,GAEtBC,cAACC,IAAY,CAACV,UAAWA,EAAWC,SAAUA,EAASU,SACrDF,cAAA,OAAKpB,IAAKmB,EAAKnB,IAAKuB,UAAU,YAAYC,IAAKL,EAAKjB,MADOiB,EAAKjB,MAKtE,OACEuB,eAACC,IAAQ,CAACpB,YAAaA,EAAaO,KAAMA,EAAMG,SAAUA,EAAUW,UAAU,EAAML,SAAA,CAClFF,cAACQ,IAAkB,CAACC,MAAO9B,EAAQO,YAAaA,EAAawB,eAd/CC,IACZtB,GACJF,EAAewB,EAAS,IAarBd,EACDG,cAACY,IAAe,CAACC,UAAU,OAAOC,cAAc,WAAWJ,eAAgBd,IAC3EI,cAACY,IAAe,CAACC,UAAU,OAAOC,cAAc,OAAOJ,eAAgBjB,MAC9D,E,mBC/DA,MAA0B,+B,SCMzC,MAAMd,EAAS,CACb,CACEC,IAAKI,UACLF,GAAI,EACJiC,OAAQ,UACRC,QACE,mKAEJ,CACEpC,IAAKC,EACLC,GAAI,EACJiC,OAAQ,UACRC,QACE,uKAEJ,CACEpC,IAAKG,UACLD,GAAI,EACJiC,OAAQ,UACRC,QACE,2IAmDSC,MA/CUA,KACvB,MAAO/B,EAAaC,GAAkBC,mBAAS,IACxCC,EAAWC,GAAgBF,mBAAS,GAErCG,EAAYA,KAChBD,GAAa,EAAK,EAGdE,EAAWA,KACfF,GAAa,EAAM,EAGfG,EAAOA,KACX,GAAIJ,EAAW,OACf,MAAMK,EAAYR,IAAgBP,EAAOgB,OAAS,EAAI,EAAIT,EAAc,EACxEC,EAAeO,EAAU,EAGrBE,EAAWA,KACf,GAAIP,EAAW,OACf,MAAMK,EAA4B,IAAhBR,EAAoBP,EAAOgB,OAAS,EAAIT,EAAc,EACxEC,EAAeO,EAAU,EAQrBG,EAASlB,EAAOmB,KAAIC,GAEtBM,eAACJ,IAAY,CAACV,UAAWA,EAAWC,SAAUA,EAASU,SAAA,CACrDF,cAAA,OAAKpB,IAAKmB,EAAKnB,IAAKuB,UAAU,YAAYC,IAAKL,EAAKjB,KACpDkB,cAACkB,IAAe,CAACC,YAAapB,EAAKiB,QAASI,cAAepB,cAAA,QAAMG,UAAU,aAAYD,SAAEH,EAAKgB,aAFnChB,EAAKjB,MAMtE,OACEuB,eAACC,IAAQ,CAACpB,YAAaA,EAAaO,KAAMA,EAAMG,SAAUA,EAAUW,UAAU,EAAML,SAAA,CAClFF,cAACQ,IAAkB,CAACC,MAAO9B,EAAQO,YAAaA,EAAawB,eAf/CC,IACZtB,GACJF,EAAewB,EAAS,IAcrBd,EACDG,cAACY,IAAe,CAACC,UAAU,OAAOC,cAAc,WAAWJ,eAAgBd,IAC3EI,cAACY,IAAe,CAACC,UAAU,OAAOC,cAAc,OAAOJ,eAAgBjB,MAC9D,E,UCpEf,MAAMgB,EAAQ,CACZ,CACEY,IAAK,EACLzC,IAAKC,UACLmC,QAAS,GACTM,QAAS,WAEX,CACED,IAAK,EACLzC,IAAKG,UACLiC,QAAS,GACTM,QAAS,WAEX,CACED,IAAK,EACLzC,IAAKI,IACLgC,QAAS,GACTM,QAAS,YAOEC,MAHcA,IACpBvB,cAACwB,IAAoB,CAACf,MAAOA,EAAOF,UAAU,I,4BCtBvD,MAAM5B,EAAS,CACb,CACEC,IAAKI,UACLqC,IAAK,EACLL,QAAS,GACTM,QAAS,WAEX,CACE1C,IAAKC,UACLwC,IAAK,EACLL,QAAS,GACTM,QAAS,WAEX,CACE1C,IAAKG,IACLsC,IAAK,EACLL,QAAS,GACTM,QAAS,YAOEG,MAHUA,IAChBzB,cAACwB,IAAoB,CAACf,MAAO9B,EAAQ+C,SAAS,MAAMnB,UAAU,ICtBvE,MAAM5B,EAAS,CACb,CACEC,IAAKI,UACLqC,IAAK,EACLL,QAAS,GACTM,QAAS,WAEX,CACE1C,IAAKC,UACLwC,IAAK,EACLL,QAAS,GACTM,QAAS,WAEX,CACE1C,IAAKG,IACLsC,IAAK,EACLL,QAAS,GACTM,QAAS,YAOEK,MAHUA,IAChB3B,cAACwB,IAAoB,CAACf,MAAO9B,EAAQ4B,UAAU,ICtBxD,MAAM5B,EAAS,CACb,CACEC,IAAKI,UACLqC,IAAK,EACLL,QAAS,GACTM,QAAS,WAEX,CACE1C,IAAKC,UACLwC,IAAK,EACLL,QAAS,GACTM,QAAS,WAEX,CACE1C,IAAKG,IACLsC,IAAK,EACLL,QAAS,GACTM,QAAS,YAOEM,MAHOA,IACb5B,cAACwB,IAAoB,CAACf,MAAO9B,EAAQkD,MAAM,QAAQtB,UAAU,I,sDC3B/D,MAAMuB,EACX9B,cAAA,OAAAE,SACEF,cAAA,QAAMG,UAAU,eAAcD,SAAA,o7DA4FrB6B,EACX/B,cAAA,OAAAE,SACEF,cAAA,QAAMG,UAAU,eAAcD,SAAA,kgFAuGrB8B,EACXhC,cAAA,OAAAE,SACEF,cAAA,QAAMG,UAAU,eAAcD,SAAA,ukBAgCrB+B,EACXjC,cAAA,OAAAE,SACEF,cAAA,QAAMG,UAAU,eAAcD,SAAA,0mBAkCrBgC,EACXlC,cAAA,OAAAE,SACEF,cAAA,QAAMG,UAAU,eAAcD,SAAA,mrBAoCrBiC,EACXnC,cAAA,OAAAE,SACEF,cAAA,QAAMG,UAAU,eAAcD,SAAA,s3BC/NnBI,UAjEEA,KACf8B,qBAAU,KACRC,IAAMC,cAAc,GACnB,IAEDjC,eAACkC,WAAQ,CAAArC,SAAA,CACPF,cAACwC,IAAW,CAACC,gBAAgB,WAAWC,iBAAiB,aAAaC,iBAAiB,aACvFtC,eAACuC,IAAG,CAAA1C,SAAA,CACFF,cAAC6C,IAAG,CAAC1C,UAAU,OAAO2C,GAAG,KAAI5C,SAC3BF,cAAC+C,IAAK,CAACC,MAAM,OAAM9C,SACjBF,cAAA,OAAKG,UAAU,aAAYD,SACzBG,eAAA,KAAAH,SAAA,CACEF,cAACiD,IAAI,CAAC9C,UAAU,OAAO+C,KAAM,KAAM,+CAM3ClD,cAAC6C,IAAG,CAACM,GAAG,IAAIL,GAAG,KAAI5C,SACjBF,cAACoD,IAAI,CAACC,MAAM,gBAAgBC,KAAMxB,EAAc5B,SAC9CF,cAACf,EAAa,QAGlBe,cAAC6C,IAAG,CAACM,GAAG,IAAIL,GAAG,KAAI5C,SACjBF,cAACoD,IAAI,CAACC,MAAM,mBAAmBC,KAAMvB,EAAiB7B,SACpDF,cAACiB,EAAgB,QAGrBjB,cAAC6C,IAAG,CAACM,GAAG,IAAIL,GAAG,KAAI5C,SACjBG,eAAC+C,IAAI,CAACC,MAAM,uBAAuBC,KAAMtB,EAAqB9B,SAAA,CAC5DG,eAACkD,IAAQ,CAAArD,SAAA,CAAC,uCAC4BF,cAAA,QAAAE,SAAM,yBAA2B,yDAGvEF,cAACuB,EAAoB,SAGzBvB,cAAC6C,IAAG,CAACM,GAAG,IAAIL,GAAG,KAAI5C,SACjBG,eAAC+C,IAAI,CAACC,MAAM,mBAAmBC,KAAMrB,EAAiB/B,SAAA,CACpDG,eAACkD,IAAQ,CAAArD,SAAA,CAAC,OACJF,cAAA,QAAAE,SAAM,aAAe,6DAA0DF,cAAA,UAAAE,SAAQ,SAAa,OAE1GF,cAACyB,EAAgB,SAGrBzB,cAAC6C,IAAG,CAACM,GAAG,IAAIL,GAAG,KAAI5C,SACjBG,eAAC+C,IAAI,CAACC,MAAM,mBAAmBC,KAAMpB,EAAiBhC,SAAA,CACpDG,eAACkD,IAAQ,CAAArD,SAAA,CAAC,OACJF,cAAA,QAAAE,SAAM,aAAe,sDAAmDF,cAAA,QAAAE,SAAM,UAAY,OAEhGF,cAAC2B,EAAgB,SAGrB3B,cAAC6C,IAAG,CAACM,GAAG,IAAIL,GAAG,KAAI5C,SACjBG,eAAC+C,IAAI,CAACC,MAAM,gBAAgBC,KAAMnB,EAAcjC,SAAA,CAC9CG,eAACkD,IAAQ,CAAArD,SAAA,CAAC,OACJF,cAAA,QAAAE,SAAM,UAAY,uCAExBF,cAAC4B,EAAa,e,mCC/E1B,sCAqFeY,IAtEKgB,IAElB,MAAM,gBAAEf,EAAe,iBAAEC,EAAgB,kBAAEe,EAAiB,kBAAEC,EAAiB,iBAAEf,GAAqBa,EAEtG,OACEnD,eAAA,OAAKF,UAAU,qBAAoBD,SAAA,CACjCF,cAAA,OAAKG,UAAU,2CAA0CD,SACvDF,cAAA,OAAKG,UAAU,sBAAqBD,SAClCG,eAAA,OAAKF,UAAU,SAAQD,SAAA,CACpBuC,EAAkBzC,cAAA,MAAIG,UAAU,uCAAsCD,SAAEuC,IAAwB,GACjGzC,cAAA,OAAKG,UAAU,6DAA4DD,SACzEG,eAACsD,IAAU,CAAAzD,SAAA,CACTF,cAAC4D,IAAc,CAACC,IAAI,KAAI3D,SACtBF,cAAC8D,IAAI,CAACC,GAAG,IAAG7D,SAAC,WAEfF,cAAC4D,IAAc,CAACC,IAAI,KAAK1D,UAAU,eAAcD,SAC9CwC,IAEFe,EACCzD,cAAC4D,IAAc,CAACC,IAAI,KAAK1D,UAAU,eAAcD,SAC9CuD,IAGH,GAEDC,EACC1D,cAAC4D,IAAc,CAACC,IAAI,KAAK1D,UAAU,eAAcD,SAC9CwD,IAGH,GAEF1D,cAAC4D,IAAc,CAACC,IAAI,KAAKG,QAAM,EAAA9D,SAC5ByC,gBAOb3C,cAAA,OAAKG,UAAU,uEAAsED,SACnFF,cAAA,OAAKG,UAAU,4CA0Bb,C,mCClFV,0EAwCe8D,IAhCKT,IAElB,MAAM,MAAEH,EAAK,SAAEnD,EAAQ,OAAEgE,EAAM,KAAEZ,EAAI,SAAEa,GAAaX,GAG7CY,EAAQC,GAAajF,oBAAS,GAG/BkF,EAAWH,GAAsBnE,cAACuE,IAAI,CAACrB,KAAM,KAM7CsB,EAAUN,EAAS3B,WAAWkC,IAEpC,OACEpE,eAAC+C,IAAI,CAACjD,UAAU,eAAcD,SAAA,CAC5BG,eAACqE,IAAU,CAAAxE,SAAA,CACTF,cAAC2E,IAAS,CAACd,IAAI,KAAI3D,SAAEmD,IACrBrD,cAAA,OAAKG,UAAU,uBAAuByE,QAT7BC,IAAMR,GAAWD,GAS4BlE,SACnDoE,OAGLtE,cAACwE,EAAO,CAAAtE,SAAEA,IACVF,cAAC8E,IAAQ,CAACV,OAAQA,EAAOlE,SACvBF,cAACyE,IAAQ,CAAAvE,SAAEoD,QAER,C","file":"static/js/330.c7953fcb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/01.ae763d9d.jpg\";","export default __webpack_public_path__ + \"static/media/05.3d963e35.jpg\";","import { useState } from 'react'\nimport { Carousel, CarouselItem, CarouselControl, CarouselIndicators } from 'reactstrap'\nimport sliderImage1 from '@src/assets/images/slider/01.jpg'\nimport sliderImage2 from '@src/assets/images/slider/02.jpg'\nimport sliderImage3 from '@src/assets/images/slider/03.jpg'\n\nconst images = [\n  {\n    src: sliderImage2,\n    id: 1\n  },\n  {\n    src: sliderImage3,\n    id: 2\n  },\n  {\n    src: sliderImage1,\n    id: 3\n  }\n]\n\nconst CarouselBasic = () => {\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [animating, setAnimating] = useState(0)\n\n  const onExiting = () => {\n    setAnimating(true)\n  }\n\n  const onExited = () => {\n    setAnimating(false)\n  }\n\n  const next = () => {\n    if (animating) return\n    const nextIndex = activeIndex === images.length - 1 ? 0 : activeIndex + 1\n    setActiveIndex(nextIndex)\n  }\n\n  const previous = () => {\n    if (animating) return\n    const nextIndex = activeIndex === 0 ? images.length - 1 : activeIndex - 1\n    setActiveIndex(nextIndex)\n  }\n\n  const goToIndex = newIndex => {\n    if (animating) return\n    setActiveIndex(newIndex)\n  }\n\n  const slides = images.map(item => {\n    return (\n      <CarouselItem onExiting={onExiting} onExited={onExited} key={item.id}>\n        <img src={item.src} className='img-fluid' alt={item.id} />\n      </CarouselItem>\n    )\n  })\n  return (\n    <Carousel activeIndex={activeIndex} next={next} previous={previous} keyboard={false}>\n      <CarouselIndicators items={images} activeIndex={activeIndex} onClickHandler={goToIndex} />\n      {slides}\n      <CarouselControl direction='prev' directionText='Previous' onClickHandler={previous} />\n      <CarouselControl direction='next' directionText='Next' onClickHandler={next} />\n    </Carousel>\n  )\n}\n\nexport default CarouselBasic\n","export default __webpack_public_path__ + \"static/media/08.9fa51868.jpg\";","import { useState } from 'react'\nimport { Carousel, CarouselItem, CarouselControl, CarouselIndicators, CarouselCaption } from 'reactstrap'\nimport sliderImage1 from '@src/assets/images/slider/09.jpg'\nimport sliderImage2 from '@src/assets/images/slider/08.jpg'\nimport sliderImage3 from '@src/assets/images/slider/10.jpg'\n\nconst images = [\n  {\n    src: sliderImage1,\n    id: 1,\n    header: 'Slide 1',\n    caption:\n      'Donut jujubes I love topping I love sweet. Jujubes I love brownie gummi bears I love donut sweet chocolate. Tart chocolate marshmallow.Tart carrot cake muffin.'\n  },\n  {\n    src: sliderImage2,\n    id: 2,\n    header: 'Slide 2',\n    caption:\n      'Tart macaroon marzipan I love soufflé apple pie wafer. Chocolate bar jelly caramels jujubes chocolate cake gummies. Cupcake cake I love cake danish carrot cake.'\n  },\n  {\n    src: sliderImage3,\n    id: 3,\n    header: 'Slide 3',\n    caption:\n      'Pudding sweet pie gummies. Chocolate bar sweet tiramisu cheesecake chocolate cotton candy pastry muffin Marshmallow cake powder icing.'\n  }\n]\n\nconst CarouselCaptions = () => {\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [animating, setAnimating] = useState(0)\n\n  const onExiting = () => {\n    setAnimating(true)\n  }\n\n  const onExited = () => {\n    setAnimating(false)\n  }\n\n  const next = () => {\n    if (animating) return\n    const nextIndex = activeIndex === images.length - 1 ? 0 : activeIndex + 1\n    setActiveIndex(nextIndex)\n  }\n\n  const previous = () => {\n    if (animating) return\n    const nextIndex = activeIndex === 0 ? images.length - 1 : activeIndex - 1\n    setActiveIndex(nextIndex)\n  }\n\n  const goToIndex = newIndex => {\n    if (animating) return\n    setActiveIndex(newIndex)\n  }\n\n  const slides = images.map(item => {\n    return (\n      <CarouselItem onExiting={onExiting} onExited={onExited} key={item.id}>\n        <img src={item.src} className='img-fluid' alt={item.id} />\n        <CarouselCaption captionText={item.caption} captionHeader={<span className='text-white'>{item.header}</span>} />\n      </CarouselItem>\n    )\n  })\n  return (\n    <Carousel activeIndex={activeIndex} next={next} previous={previous} keyboard={false}>\n      <CarouselIndicators items={images} activeIndex={activeIndex} onClickHandler={goToIndex} />\n      {slides}\n      <CarouselControl direction='prev' directionText='Previous' onClickHandler={previous} />\n      <CarouselControl direction='next' directionText='Next' onClickHandler={next} />\n    </Carousel>\n  )\n}\n\nexport default CarouselCaptions\n","import { UncontrolledCarousel } from 'reactstrap'\nimport sliderImage1 from '@src/assets/images/slider/01.jpg'\nimport sliderImage2 from '@src/assets/images/slider/02.jpg'\nimport sliderImage3 from '@src/assets/images/slider/03.jpg'\n\nconst items = [\n  {\n    key: 1,\n    src: sliderImage2,\n    caption: '',\n    altText: 'Slide 1'\n  },\n  {\n    key: 2,\n    src: sliderImage3,\n    caption: '',\n    altText: 'Slide 2'\n  },\n  {\n    key: 3,\n    src: sliderImage1,\n    caption: '',\n    altText: 'Slide 3'\n  }\n]\n\nconst CarouselUncontrolled = () => {\n  return <UncontrolledCarousel items={items} keyboard={false} />\n}\nexport default CarouselUncontrolled\n","import { UncontrolledCarousel } from 'reactstrap'\nimport sliderImage1 from '@src/assets/images/slider/06.jpg'\nimport sliderImage2 from '@src/assets/images/slider/04.jpg'\nimport sliderImage3 from '@src/assets/images/slider/05.jpg'\n\nconst images = [\n  {\n    src: sliderImage1,\n    key: 1,\n    caption: '',\n    altText: 'Slide 1'\n  },\n  {\n    src: sliderImage2,\n    key: 2,\n    caption: '',\n    altText: 'Slide 2'\n  },\n  {\n    src: sliderImage3,\n    key: 3,\n    caption: '',\n    altText: 'Slide 3'\n  }\n]\n\nconst CarouselInterval = () => {\n  return <UncontrolledCarousel items={images} interval='500' keyboard={false} />\n}\nexport default CarouselInterval\n","import { UncontrolledCarousel } from 'reactstrap'\nimport sliderImage1 from '@src/assets/images/slider/03.jpg'\nimport sliderImage2 from '@src/assets/images/slider/06.jpg'\nimport sliderImage3 from '@src/assets/images/slider/01.jpg'\n\nconst images = [\n  {\n    src: sliderImage1,\n    key: 1,\n    caption: '',\n    altText: 'Slide 1'\n  },\n  {\n    src: sliderImage2,\n    key: 2,\n    caption: '',\n    altText: 'Slide 2'\n  },\n  {\n    src: sliderImage3,\n    key: 3,\n    caption: '',\n    altText: 'Slide 3'\n  }\n]\n\nconst CarouselKeyboard = () => {\n  return <UncontrolledCarousel items={images} keyboard={true} />\n}\nexport default CarouselKeyboard\n","import { UncontrolledCarousel } from 'reactstrap'\nimport sliderImage1 from '@src/assets/images/slider/04.jpg'\nimport sliderImage2 from '@src/assets/images/slider/03.jpg'\nimport sliderImage3 from '@src/assets/images/slider/05.jpg'\n\nconst images = [\n  {\n    src: sliderImage1,\n    key: 1,\n    caption: '',\n    altText: 'Slide 1'\n  },\n  {\n    src: sliderImage2,\n    key: 2,\n    caption: '',\n    altText: 'Slide 2'\n  },\n  {\n    src: sliderImage3,\n    key: 3,\n    caption: '',\n    altText: 'Slide 3'\n  }\n]\n\nconst CarouselPause = () => {\n  return <UncontrolledCarousel items={images} pause='hover' keyboard={false} />\n}\nexport default CarouselPause\n","export const carouselBasic = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators\n} from 'reactstrap'\nimport sliderImage1 from '@src/assets/images/slider/01.jpg'\nimport sliderImage2 from '@src/assets/images/slider/02.jpg'\nimport sliderImage3 from '@src/assets/images/slider/03.jpg'\n\nconst images = [\n  {\n    src: sliderImage1,\n    id: 1\n  },\n  {\n    src: sliderImage2,\n    id: 2\n  },\n  {\n    src: sliderImage3,\n    id: 3\n  }\n]\n\nconst CarouselBasic = () => {\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [animating, setAnimating] = useState(0)\n\n  const onExiting = () => {\n    setAnimating(true)\n  }\n\n  const onExited = () => {\n    setAnimating(false)\n  }\n\n  const next = () => {\n    if (animating) return\n    const nextIndex = activeIndex === images.length - 1 ? 0 : activeIndex + 1\n    setActiveIndex(nextIndex)\n  }\n\n  const previous = () => {\n    if (animating) return\n    const nextIndex = activeIndex === 0 ? images.length - 1 : activeIndex - 1\n    setActiveIndex(nextIndex)\n  }\n\n  const goToIndex = newIndex => {\n    if (animating) return\n    setActiveIndex(newIndex)\n  }\n\n  const slides = images.map(item => {\n    return (\n      <CarouselItem onExiting={onExiting} onExited={onExited} key={item.id}>\n        <img src={item.src} className='img-fluid' alt={item.id} />\n      </CarouselItem>\n    )\n  })\n  return (\n    <Carousel activeIndex={activeIndex} next={next} previous={previous}>\n      <CarouselIndicators\n        items={images}\n        activeIndex={activeIndex}\n        onClickHandler={goToIndex}\n      />\n      {slides}\n      <CarouselControl\n        direction='prev'\n        directionText='Previous'\n        onClickHandler={previous}\n      />\n      <CarouselControl\n        direction='next'\n        directionText='Next'\n        onClickHandler={next}\n      />\n    </Carousel>\n  )\n}\n\nexport default CarouselBasic\n    `}\n    </code>\n  </pre>\n)\n\nexport const carouselCaptions = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption\n} from 'reactstrap'\nimport sliderImage1 from '@src/assets/images/slider/03.jpg'\nimport sliderImage2 from '@src/assets/images/slider/04.jpg'\nimport sliderImage3 from '@src/assets/images/slider/05.jpg'\n\nconst images = [\n  {\n    src: sliderImage1,\n    id: 1,\n    header: <span className=\"text-white\">Slide 1 Header</span>\n    caption: 'Cupcake ipsum dolor sit amet toffee lemon drops bonbon.'\n  },\n  {\n    src: sliderImage2,\n    id: 2,\n    header: <span className=\"text-white\">Slide 2 Header</span>\n    caption: 'Cheesecake caramels wafer pie lollipop.'\n  },\n  {\n    src: sliderImage3,\n    id: 3,\n    header: <span className=\"text-white\">Slide 3 Header</span>\n    caption: 'Candy canes toffee gummies soufflé fruitcake dragée icing.'\n  }\n]\n\nconst CarouselCaptions = () => {\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [animating, setAnimating] = useState(0)\n\n  const onExiting = () => {\n    setAnimating(true)\n  }\n\n  const onExited = () => {\n    setAnimating(false)\n  }\n\n  const next = () => {\n    if (animating) return\n    const nextIndex = activeIndex === images.length - 1 ? 0 : activeIndex + 1\n    setActiveIndex(nextIndex)\n  }\n\n  const previous = () => {\n    if (animating) return\n    const nextIndex = activeIndex === 0 ? images.length - 1 : activeIndex - 1\n    setActiveIndex(nextIndex)\n  }\n\n  const goToIndex = newIndex => {\n    if (animating) return\n    setActiveIndex(newIndex)\n  }\n\n  const slides = images.map(item => {\n    return (\n      <CarouselItem onExiting={onExiting} onExited={onExited} key={item.id}>\n        <img src={item.src} className='img-fluid' alt={item.id} />\n        <CarouselCaption\n          captionText={item.caption}\n          captionHeader={<span className=\"text-center\">item.header</span>}\n        />\n      </CarouselItem>\n    )\n  })\n  return (\n    <Carousel activeIndex={activeIndex} next={next} previous={previous}>\n      <CarouselIndicators\n        items={images}\n        activeIndex={activeIndex}\n        onClickHandler={goToIndex}\n      />\n      {slides}\n      <CarouselControl\n        direction='prev'\n        directionText='Previous'\n        onClickHandler={previous}\n      />\n      <CarouselControl\n        direction='next'\n        directionText='Next'\n        onClickHandler={next}\n      />\n    </Carousel>\n  )\n}\n\nexport default CarouselCaptions\n    `}\n    </code>\n  </pre>\n)\n\nexport const carouselUncontrolled = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledCarousel } from 'reactstrap'\nimport sliderImage1 from '@src/assets/images/slider/06.jpg'\nimport sliderImage2 from '@src/assets/images/slider/02.jpg'\nimport sliderImage3 from '@src/assets/images/slider/05.jpg'\n\nconst items = [\n  {\n    src: sliderImage1,\n    altText: 'Slide 1',\n  },\n  {\n    src: sliderImage2,\n    altText: 'Slide 2',\n  },\n  {\n    src: sliderImage3,\n    altText: 'Slide 3',\n  }\n]\n\nconst CarouselUncontrolled = () => {\n  return <UncontrolledCarousel items={items} />\n}\nexport default CarouselUncontrolled\n        `}\n    </code>\n  </pre>\n)\n\nexport const carouselInterval = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledCarousel } from 'reactstrap'\nimport sliderImage1 from '@src/assets/images/slider/05.jpg'\nimport sliderImage2 from '@src/assets/images/slider/04.jpg'\nimport sliderImage3 from '@src/assets/images/slider/01.jpg'\n\nconst images = [\n  {\n    src: sliderImage1,\n    id: 1,\n    altText: 'Slide 1',\n  },\n  {\n    src: sliderImage2,\n    id: 2,\n    altText: 'Slide 2',\n  },\n  {\n    src: sliderImage3,\n    id: 3,\n    altText: 'Slide 3',\n  }\n]\n\nconst CarouselInterval = () => {\n  return <UncontrolledCarousel items={images} interval='500' />\n}\nexport default CarouselInterval`}\n    </code>\n  </pre>\n)\n\nexport const carouselKeyboard = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledCarousel } from 'reactstrap'\nimport { carouselKeyboard } from './CarouselSourceCode'\nimport sliderImage1 from '@src/assets/images/slider/04.jpg'\nimport sliderImage2 from '@src/assets/images/slider/01.jpg'\nimport sliderImage3 from '@src/assets/images/slider/05.jpg'\n\nconst images = [\n  {\n    src: sliderImage1,\n    id: 1,\n    altText: 'Slide 1',\n  },\n  {\n    src: sliderImage2,\n    id: 2,\n    altText: 'Slide 2',\n  },\n  {\n    src: sliderImage3,\n    id: 3,\n    altText: 'Slide 3',\n  }\n]\n\nconst CarouselKeyboard = () => {\n  return <UncontrolledCarousel items={images} keyboard={false} />\n}\nexport default CarouselKeyboard\n            `}\n    </code>\n  </pre>\n)\n\nexport const carouselPause = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledCarousel } from 'reactstrap'\nimport sliderImage1 from '@src/assets/images/slider/02.jpg'\nimport sliderImage2 from '@src/assets/images/slider/06.jpg'\nimport sliderImage3 from '@src/assets/images/slider/05.jpg'\n\nconst images = [\n  {\n    src: sliderImage1,\n    id: 1,\n    altText: 'Slide 1',\n    caption: 'Slide 1',\n    header: <span className=\"text-white\">Slide 1 Header</span>\n  },\n  {\n    src: sliderImage2,\n    id: 2,\n    altText: 'Slide 2',\n    caption: 'Slide 2',\n    header: <span className=\"text-white\">Slide 2 Header</span>\n  },\n  {\n    src: sliderImage3,\n    id: 3,\n    altText: 'Slide 3',\n    caption: 'Slide 3',\n    header: <span className=\"text-white\">Slide 3 Header</span>\n  }\n]\n\nconst CarouselPause = () => {\n  return <UncontrolledCarousel items={images} pause='hover' />\n}\nexport default CarouselPause\n`}\n    </code>\n  </pre>\n)\n","import { Fragment, useEffect } from 'react'\nimport { Info } from 'react-feather'\nimport Card from '@components/card-snippet'\nimport BreadCrumbs from '@components/breadcrumbs'\nimport CarouselBasic from './CarouselBasic'\nimport CarouselCaptions from './CarouselCaptions'\nimport CarouselUncontrolled from './CarouselUncontrolled'\nimport CarouselInterval from './CarouselInterval'\nimport CarouselKeyboard from './CarouselKeyboard'\nimport CarouselPause from './CarouselPause'\nimport Prism from 'prismjs'\nimport { Row, Col, CardText, Alert } from 'reactstrap'\nimport {\n  carouselBasic,\n  carouselCaptions,\n  carouselInterval,\n  carouselPause,\n  carouselKeyboard,\n  carouselUncontrolled\n} from './CarouselSourceCode'\n\nconst Carousel = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n  return (\n    <Fragment>\n      <BreadCrumbs breadCrumbTitle='Carousel' breadCrumbParent='Components' breadCrumbActive='Carousel' />\n      <Row>\n        <Col className='mb-1' sm='12'>\n          <Alert color='info'>\n            <div className='alert-body'>\n              <p>\n                <Info className='mr-1' size={14} />\n                Nested carousels are not supported.\n              </p>\n            </div>\n          </Alert>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Basic Example' code={carouselBasic}>\n            <CarouselBasic />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Captions Example' code={carouselCaptions}>\n            <CarouselCaptions />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Uncontrolled Example' code={carouselUncontrolled}>\n            <CardText>\n              You don't have to manage state with <code>UncontrolledCarousel</code> all you have to do is return it with\n              your content.\n            </CardText>\n            <CarouselUncontrolled />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Interval Example' code={carouselInterval}>\n            <CardText>\n              Use <code>Interval</code> prop to set interval between slides. default interval is <strong>5000</strong>.\n            </CardText>\n            <CarouselInterval />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Keyboard Example' code={carouselKeyboard}>\n            <CardText>\n              Use <code>Keyboard</code> prop to control carousel with keyboard default is <code>false</code>.\n            </CardText>\n            <CarouselKeyboard />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Pause Example' code={carouselPause}>\n            <CardText>\n              Use <code>pause</code> prop to pause carousel on hover.\n            </CardText>\n            <CarouselPause />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Carousel\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem tag='li' className='text-primary'>\n                  {breadCrumbParent}\n                </BreadcrumbItem>\n                {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem>\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\n        <div className='form-group breadcrum-right dropdown'>\n          {/*<UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' right>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <CheckSquare className='mr-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='mr-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='mr-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='mr-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>*/}\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.any,\n  code: PropTypes.node,\n  iconCode: PropTypes.node,\n  noBody: PropTypes.bool\n}\n"],"sourceRoot":""}