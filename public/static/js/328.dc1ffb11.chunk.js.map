{"version":3,"sources":["assets/images/pages/coming-soon.svg","views/pages/misc/PaymentSuccess.js","views/viewhelper.js","../node_modules/reactstrap/es/Spinner.js"],"names":["ToastContent","_ref","name","role","_jsxs","Fragment","children","_jsx","className","Avatar","size","color","icon","Coffee","PaymentSuccess","paymentSuccess","setPaymentSuccess","useState","dispatch","useDispatch","search","useLocation","history","useHistory","ability","useContext","AbilityContext","query","URLSearchParams","location","JSON","parse","localStorage","getItem","useEffect","async","card_id","get","user_id","setItem","useJwt","goCardLessPaymentSuccess","then","data","res","payload","user_info","accessToken","token","refreshToken","extras","eCommerceCartItemsCount","action","subject","handleLogin","update","toast","success","username","transition","Slide","hideProgressBar","autoClose","getBMStoken","BMS_USER","password","BMS_PASS","jwtToken","catch","err","customerbusinesslistbymobileno","mobile","Number","mobileno","stringify","push","getHomeRouteForLoggedInUser","Error","href","style","window","TukitakiThemeColor","Spinner","src","comingSoonImg","alt","e","response","status","error","message","position","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","errors","Object","keys","Success","propTypes","tag","tagPropType","type","PropTypes","string","cssModule","object","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/328.dc1ffb11.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/coming-soon.539770ed.svg\";","import useJwt from '@src/auth/jwt/useJwt'\nimport Avatar from '@components/avatar'\nimport React, { Fragment, useEffect, useState, useContext } from 'react'\nimport { Button, Form, Input, Row, Col, Spinner } from 'reactstrap'\nimport comingSoonImg from '@src/assets/images/pages/coming-soon.svg'\nimport { useLocation, useSearchParams, useHistory } from 'react-router-dom'\nimport { Error } from '../../viewhelper'\nimport { useDispatch } from 'react-redux'\nimport { handleLogin } from '../../../redux/actions/auth'\nimport { AbilityContext } from '@src/utility/context/Can'\nimport { Slide, toast } from 'react-toastify'\nimport { Coffee } from 'react-feather'\nimport '@styles/base/pages/page-misc.scss'\nimport {BMS_USER, BMS_PASS} from '../../../Configurables'\nimport { getHomeRouteForLoggedInUser, isObjEmpty } from '@utils'\n\n\nconst ToastContent = ({ name, role }) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\n        <h6 className='toast-title font-weight-bold'>Welcome, {name}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span>You have successfully logged in as an {role} user to system. Now you can start to explore. Enjoy!</span>\n    </div>\n  </Fragment>\n)\n\nconst PaymentSuccess = () => {\n\n  const [paymentSuccess, setPaymentSuccess] = useState(null)\n  const dispatch = useDispatch()\n  const {search} = useLocation()\n  const history = useHistory()\n  const ability = useContext(AbilityContext)\n\n  // const searchParams = new URLSearchParams(search)\n  // const useQuery = () => new URLSearchParams(useLocation().search)\n  const query = new URLSearchParams(location.search)\n\n\n  const userData = JSON.parse(localStorage.getItem('registration_data'))\n  useEffect(async () => {\n    const card_id = query.get('card_id')\n    const user_id = query.get('user_id')\n\n\n    localStorage.setItem('usePMStoken', false) //for token management\n    localStorage.setItem('useBMStoken', false) //for token management\n    setPaymentSuccess(\"pending\")\n    await useJwt.goCardLessPaymentSuccess({card_id, user_id}).then(async res => {\n      setPaymentSuccess(\"success\")\n        //console.log(res)\n        // console.log(res.data.payload)\n        // console.log(res.data.payload.payload)\n\n        const data = {\n          ...res.data.payload.payload.user_info,\n          // avatar: \"https://i.imgur.com/P4b2RHh.png\",\n          accessToken: res.data.payload.payload.token,\n          refreshToken: res.data.payload.payload.token,\n          extras: {\n            eCommerceCartItemsCount: 5\n          },\n          role: 'vendor',\n          ability: [\n            {\n              action: 'manage',\n              subject: 'VENDOR'\n            },\n            {\n              action: 'manage',\n              subject: 'Auth'\n            }\n          ]\n        }\n\n        dispatch(handleLogin(data))\n        ability.update(data.ability)\n        // localStorage.setItem('username', email)\n        toast.success(\n          <ToastContent name={data.username} role={data.role} />,\n          { transition: Slide, hideProgressBar: true, autoClose: 2000 }\n        )\n\n        // await useJwt.getPMStoken({ username: \"dddd\", module: \"kkk\" }).then(res => {\n        //   localStorage.setItem('PMStoken', res.data.data.access_token)\n        //   localStorage.setItem(\"usePMStoken\", false)\n        // }).catch(err => {\n        //   console.log('getPMStoken', err)\n        // })\n        \n        localStorage.setItem(\"usePMStoken\", false)\n        localStorage.setItem(\"BMSCall\", true)\n        await useJwt.getBMStoken({ username: BMS_USER, password: BMS_PASS }).then(res => {\n          localStorage.setItem('BMStoken', res.data.jwtToken)\n          localStorage.setItem(\"BMSCall\", false)\n        }).catch(err => {\n          localStorage.setItem(\"BMSCall\", false)\n          //console.log(err)\n        })\n        \n        await useJwt.customerbusinesslistbymobileno({ mobile: Number(res.data.payload.payload.user_info.mobileno) }).then(res =>  {\n          //console.log(res)\n           localStorage.setItem('customerBusinesses', JSON.stringify(res.data.payload))\n           history.push(getHomeRouteForLoggedInUser(data.role))\n        }).catch(err => {\n          Error(err)\n          //console.log(err)\n        })\n        \n    }).catch(err => {\n      Error(err)\n      //console.log(err)\n      //console.log(err.response)\n        // if (err.response?.status === 401) {\n        //     localStorage.setItem(\"BMSCall\", true)\n        //     useJwt.getBMStoken({ username: BMS_USER, password: BMS_PASS }).then(res => {\n        //       localStorage.setItem('BMStoken', res.data.jwtToken)\n        //       localStorage.setItem(\"BMSCall\", false)\n        //       setReset(!resetData)\n        //     }).catch(err => {\n        //       localStorage.setItem(\"BMSCall\", false)\n        //       //console.log(err)\n        //     })\n        // } else {\n        //     Error(err)\n        //     //console.log(err)\n        //     setTableDataLoading(false)\n        //     localStorage.setItem('useBMStoken', false)\n        // }\n    })\n   \n}, [])\n  return (\n    <div className='misc-wrapper'>\n      <a className='brand-logo' href='/'>\n        <h2 style={{ color: window.TukitakiThemeColor }} className='brand-text ml-1'>RILAC</h2>\n      </a>\n      <div className='misc-inner p-2 p-sm-3'>\n        <div className='w-100 text-center'>\n          {\n            paymentSuccess === \"pending\" ? <div> \n            <h2 className='mb-1'>Payment is Processing... </h2> \n            <Spinner/>\n             </div> : paymentSuccess === \"success\" ?  <div>\n            <h2 className='mb-1'>Payment Successful 🚀</h2>\n            <p className='mb-3'>Logging into Dashboard</p>\n            </div> : \"\"\n          }\n          <img className='img-fluid' src={comingSoonImg} alt='Coming soon page' />\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default PaymentSuccess\n","import { Fragment, useState } from 'react'\nimport { toast, Slide } from 'react-toastify'\n\n    export const Error = (err) => {\n        try {\n            const e = err.response\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500 || e.status === 409) {\n                toast.error(e.data.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n            } else  {\n                toast.error('The server is under maintenance', {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                    }) \n            }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        }\n \n    }\n\n    export const ErrorMessage = (err) => {\n        try {\n        const e = err.response\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n         }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        } \n    }\n    export const Success = (response) => {\n        const message = response.data.message || 'success'\n        toast.success(message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n    }\n\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;"],"sourceRoot":""}