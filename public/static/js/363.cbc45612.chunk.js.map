{"version":3,"sources":["views/extensions/react-player/MediaPlayerVideo.js","views/extensions/react-player/MediaPlayerAudio.js","views/extensions/react-player/MediaPlayerControlled.js","views/extensions/react-player/index.js","@core/components/extensions-header/index.js"],"names":["MediaPlayerVideo","_jsxs","Card","children","_jsx","CardHeader","CardTitle","tag","CardBody","ReactPlayer","url","className","width","controls","pad","string","concat","slice","format","seconds","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","getUTCSeconds","MediaPlayerAudio","useEffect","Prism","highlightAll","audioRef","useRef","urlLink","setUrl","useState","playing","setPlaying","volume","setVolume","muted","setMuted","played","setPlayed","loaded","setLoaded","duration","setDuration","seeking","setSeeking","load","Duration","_ref","dateTime","Math","round","preDuration","preElapsed","preRemaining","Row","Col","xs","ref","height","onPlay","handlePlay","onPause","handlePause","onSeek","e","console","log","onProgress","state","onDuration","Table","borderless","Button","variant","outline","onClick","handleStop","handlePlayPause","type","min","max","step","value","onMouseDown","handleSeekMouseDown","onChange","parseFloat","target","onMouseUp","current","seekTo","CustomInput","id","checked","handleToggleMuted","Progress","toFixed","props","MediaPlayerControlledVideo","videoRef","setControls","playbackRate","setPlaybackRate","loop","setLoop","handlePlaybackRate","onEnded","handleEnded","config","youtube","embedOptions","color","handleFullscreen","screenfull","request","findDOMNode","active","handleToggleControls","handleToggleLoop","Fragment","ExtensionsHeader","title","subTitle","link","sm","MediaPlayerControlled","href","rel"],"mappings":"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","file":"static/js/363.cbc45612.chunk.js","sourcesContent":["import { Card, CardHeader, CardTitle, CardBody } from 'reactstrap'\nimport ReactPlayer from 'react-player'\n\nconst MediaPlayerVideo = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Video</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <ReactPlayer\n          url='http://youtube.com/watch?v=FCPdIvXo2rU'\n          className='react-player-video'\n          width='100%'\n          controls={true}\n        />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default MediaPlayerVideo\n","import { useState, useEffect, useRef } from 'react'\nimport { Card, CardTitle, CardHeader, CardBody, Row, Col, Table, Button, Progress, CustomInput } from 'reactstrap'\nimport Prism from 'prismjs'\nimport ReactPlayer from 'react-player'\n\nconst pad = string => {\n  return `0${string}`.slice(-2)\n}\nconst format = seconds => {\n  const date = new Date(seconds * 1000)\n  const hh = date.getUTCHours()\n  const mm = date.getUTCMinutes()\n  const ss = pad(date.getUTCSeconds())\n  if (hh) {\n    return `${hh}:${pad(mm)}:${ss}`\n  }\n  return `${mm}:${ss}`\n}\n\nconst MediaPlayerAudio = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  })\n\n  const audioRef = useRef(null)\n\n  const urlLink = 'https://soundcloud.com/2ghost/we-will-rock-you'\n  const [url, setUrl] = useState(urlLink)\n  const [playing, setPlaying] = useState(false)\n  const [volume, setVolume] = useState(0.75)\n  const [muted, setMuted] = useState(false)\n  const [played, setPlayed] = useState(0)\n  const [loaded, setLoaded] = useState(0)\n  const [duration, setDuration] = useState(0)\n  const [seeking, setSeeking] = useState(null)\n\n  const load = url => {\n    setUrl(url)\n    setPlayed(0)\n    setLoaded(0)\n  }\n  const handlePlayPause = () => setPlaying(!playing)\n  const handleStop = () => {\n    setPlaying(false)\n    setUrl(null)\n  }\n  const handleVolumeChange = e => setVolume(parseFloat(e.target.value))\n  const handleToggleMuted = () => setMuted(!muted)\n  const handlePlay = () => setPlaying(true)\n  const handlePause = () => setPlaying(false)\n  const handleSeekMouseDown = () => setSeeking(true)\n  const handleSeekChange = e => {\n    setPlayed(parseFloat(e.target.value))\n  }\n  const handleSeekMouseUp = e => {\n    setSeeking(false)\n    audioRef.current.seekTo(parseFloat(e.target.value))\n  }\n  const handleProgress = state => {\n    if (!seeking) {\n      setPlayed(state.played)\n      setLoaded(state.loaded)\n    }\n  }\n  const handleDuration = duration => setDuration(duration)\n  useEffect(() => {\n    if (url === null) {\n      load(urlLink)\n    }\n  })\n\n  // for duration, elapsed and remaining time\n  const Duration = ({ className, seconds }) => {\n    return (\n      <time dateTime={`P${Math.round(seconds)}S`} className={className}>\n        {format(seconds)}\n      </time>\n    )\n  }\n  const preDuration = <Duration seconds={duration}></Duration>\n  const preElapsed = <Duration seconds={duration * played}></Duration>\n  const preRemaining = <Duration seconds={duration * (1 - played)}></Duration>\n\n  return (\n    <Card className='overflow-hidden'>\n      <CardHeader>\n        <CardTitle tag='h4'>Audio</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Row>\n          <Col xs={12}>\n            <ReactPlayer\n              ref={audioRef}\n              url={url}\n              className='react-player-audio'\n              width='500px'\n              height='290px'\n              playing={playing}\n              volume={volume}\n              muted={muted}\n              onPlay={handlePlay}\n              onPause={handlePause}\n              onSeek={e => console.log('onSeek', e)}\n              onProgress={handleProgress}\n              onDuration={handleDuration}\n            />\n          </Col>\n          <Col xs={12}>\n            <Table borderless className='mt-2'>\n              <tbody>\n                <tr>\n                  <td className='text-right'>Controls</td>\n                  <td>\n                    <Button variant='primary' outline onClick={handleStop} className='my-25 mr-50'>\n                      Stop\n                    </Button>\n                    <Button variant='primary' outline onClick={handlePlayPause} className='my-25'>\n                      {playing ? 'Pause' : 'Play'}\n                    </Button>\n                  </td>\n                </tr>\n                <tr>\n                  <td className='text-right'>Seek</td>\n                  <td>\n                    <input\n                      type='range'\n                      min={0}\n                      max={0.999999}\n                      step='any'\n                      value={played}\n                      onMouseDown={handleSeekMouseDown}\n                      onChange={handleSeekChange}\n                      onMouseUp={handleSeekMouseUp}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td className='text-right'>Volume</td>\n                  <td>\n                    <input type='range' min={0} max={1} step='any' value={volume} onChange={handleVolumeChange} />\n                  </td>\n                </tr>\n                <tr>\n                  <td className='text-right'>Muted</td>\n                  <td>\n                    <CustomInput type='checkbox' id='audioMuted' checked={muted} onChange={handleToggleMuted} />\n                  </td>\n                </tr>\n                <tr>\n                  <td className='text-right'>Played</td>\n                  <td>\n                    <Progress value={played} max={1} />\n                  </td>\n                </tr>\n                <tr>\n                  <td className='text-right'>Loaded</td>\n                  <td>\n                    <Progress value={loaded} max={1} />\n                  </td>\n                </tr>\n              </tbody>\n            </Table>\n          </Col>\n          <Col xs={12}>\n            <pre className='language-js'>\n              <code className='language-js'>\n                {`state={\n  playing: ${playing},\n  volume: ${volume.toFixed(2)},\n  played: ${played.toFixed(2)},\n  loaded: ${loaded.toFixed(2)},\n  duration: ${format(preDuration.props.seconds)},\n  elapsed: ${format(preElapsed.props.seconds)},\n  remaining: ${format(preRemaining.props.seconds)}\n}\n`}\n              </code>\n            </pre>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default MediaPlayerAudio\n","import { useState, useEffect, useRef } from 'react'\nimport { findDOMNode } from 'react-dom'\nimport { Card, CardTitle, CardHeader, CardBody, Row, Col, Table, Button, Progress, CustomInput } from 'reactstrap'\nimport Prism from 'prismjs'\nimport ReactPlayer from 'react-player'\nimport screenfull from 'screenfull'\n\nconst pad = string => {\n  return `0${string}`.slice(-2)\n}\nconst format = seconds => {\n  const date = new Date(seconds * 1000)\n  const hh = date.getUTCHours()\n  const mm = date.getUTCMinutes()\n  const ss = pad(date.getUTCSeconds())\n  if (hh) {\n    return `${hh}:${pad(mm)}:${ss}`\n  }\n  return `${mm}:${ss}`\n}\n\nconst MediaPlayerControlledVideo = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  })\n\n  const videoRef = useRef(null)\n\n  const urlLink = 'http://youtube.com/watch?v=FCPdIvXo2rU'\n  const [url, setUrl] = useState(urlLink)\n  const [playing, setPlaying] = useState(false)\n  const [controls, setControls] = useState(false)\n  const [volume, setVolume] = useState(0.75)\n  const [muted, setMuted] = useState(false)\n  const [played, setPlayed] = useState(0)\n  const [loaded, setLoaded] = useState(0)\n  const [duration, setDuration] = useState(0)\n  const [playbackRate, setPlaybackRate] = useState(1.0)\n  const [loop, setLoop] = useState(false)\n  const [seeking, setSeeking] = useState(null)\n\n  const load = url => {\n    setUrl(url)\n    setPlayed(0)\n    setLoaded(0)\n  }\n  const handlePlayPause = () => setPlaying(!playing)\n  const handleStop = () => {\n    setPlaying(false)\n    setUrl(null)\n  }\n  const handleToggleControls = () => {\n    setControls(!controls)\n    setUrl(null)\n  }\n  useEffect(() => {\n    if (url === null) {\n      load(urlLink)\n    }\n  })\n  const handleToggleLoop = () => setLoop(!loop)\n  const handleVolumeChange = e => setVolume(parseFloat(e.target.value))\n  const handleToggleMuted = () => setMuted(!muted)\n  const handlePlaybackRate = e => setPlaybackRate(parseFloat(e.target.value))\n  const handlePlay = () => setPlaying(true)\n  const handlePause = () => setPlaying(false)\n  const handleSeekMouseDown = () => setSeeking(true)\n  const handleSeekChange = e => {\n    setPlayed(parseFloat(e.target.value))\n  }\n  const handleSeekMouseUp = e => {\n    setSeeking(false)\n    videoRef.current.seekTo(parseFloat(e.target.value))\n  }\n  const handleProgress = state => {\n    if (!seeking) {\n      setPlayed(state.played)\n      setLoaded(state.loaded)\n    }\n  }\n  const handleEnded = () => setPlaying(loop)\n  const handleDuration = duration => setDuration(duration)\n  const handleFullscreen = () => {\n    screenfull.request(findDOMNode(videoRef.current))\n  }\n\n  // for duration, elapsed and remaining time\n  const Duration = ({ className, seconds }) => {\n    return (\n      <time dateTime={`P${Math.round(seconds)}S`} className={className}>\n        {format(seconds)}\n      </time>\n    )\n  }\n  const preDuration = <Duration seconds={duration}></Duration>\n  const preElapsed = <Duration seconds={duration * played}></Duration>\n  const preRemaining = <Duration seconds={duration * (1 - played)}></Duration>\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Controlled Video</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Row>\n          <Col xs={12}>\n            <ReactPlayer\n              ref={videoRef}\n              url={url}\n              className='react-player-video'\n              width='100%'\n              playing={playing}\n              controls={controls}\n              loop={loop}\n              playbackRate={playbackRate}\n              volume={volume}\n              muted={muted}\n              onPlay={handlePlay}\n              onPause={handlePause}\n              onEnded={handleEnded}\n              onProgress={handleProgress}\n              onDuration={handleDuration}\n              config={{\n                youtube: {\n                  embedOptions: {\n                    'allow-same-origin': true\n                  }\n                }\n              }}\n            />\n          </Col>\n        </Row>\n      </CardBody>\n      <Table borderless>\n        <tbody>\n          <tr>\n            <td className='text-right'>Controls</td>\n            <td>\n              <Button color='primary' outline onClick={handleStop} className='my-25 mr-50'>\n                Stop\n              </Button>\n              <Button color='primary' outline onClick={handlePlayPause} className='my-25 mr-50'>\n                {playing ? 'Pause' : 'Play'}\n              </Button>\n              <Button color='primary' outline onClick={handleFullscreen} className='my-25'>\n                Fullscreen\n              </Button>\n            </td>\n          </tr>\n          <tr>\n            <td className='text-right'>Speed</td>\n            <td>\n              <Button\n                color='primary'\n                outline\n                onClick={handlePlaybackRate}\n                value={1}\n                className='my-25 mr-50'\n                active={playbackRate === 1}\n              >\n                1x\n              </Button>\n              <Button\n                color='primary'\n                outline\n                onClick={handlePlaybackRate}\n                value={1.5}\n                className='my-25 mr-50'\n                active={playbackRate === 1.5}\n              >\n                1.5x\n              </Button>\n              <Button color='primary' outline onClick={handlePlaybackRate} value={2} active={playbackRate === 2}>\n                2x\n              </Button>\n            </td>\n          </tr>\n          <tr>\n            <td className='text-right'>Seek</td>\n            <td>\n              <input\n                type='range'\n                min={0}\n                max={0.999999}\n                step='any'\n                value={played}\n                onMouseDown={handleSeekMouseDown}\n                onChange={handleSeekChange}\n                onMouseUp={handleSeekMouseUp}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className='text-right'>Volume</td>\n            <td>\n              <input type='range' min={0} max={1} step='any' value={volume} onChange={handleVolumeChange} />\n            </td>\n          </tr>\n          <tr>\n            <td className='text-right'>Controls</td>\n            <td>\n              <CustomInput type='checkbox' id='videoControls' checked={controls} onChange={handleToggleControls} />\n            </td>\n          </tr>\n          <tr>\n            <td className='text-right'>Muted</td>\n            <td>\n              <CustomInput type='checkbox' id='videoMuted' checked={muted} onChange={handleToggleMuted} />\n            </td>\n          </tr>\n          <tr>\n            <td className='text-right'>Loop</td>\n            <td>\n              <CustomInput type='checkbox' id='videoLoop' checked={loop} onChange={handleToggleLoop} />\n            </td>\n          </tr>\n          <tr>\n            <td className='text-right'>Played</td>\n            <td>\n              <Progress value={played} max={1} />\n            </td>\n          </tr>\n          <tr>\n            <td className='text-right'>Loaded</td>\n            <td>\n              <Progress value={loaded} max={1} />\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n\n      <CardBody>\n        <Row>\n          <Col xs={12}>\n            <pre className='language-js'>\n              <code className='language-js'>\n                {`state={\n  playing: ${playing},\n  volume: ${volume.toFixed(2)},\n  played: ${played.toFixed(2)},\n  loaded: ${loaded.toFixed(2)},\n  duration: ${format(preDuration.props.seconds)},\n  elapsed: ${format(preElapsed.props.seconds)},\n  remaining: ${format(preRemaining.props.seconds)}\n}\n`}\n              </code>\n            </pre>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default MediaPlayerControlledVideo\n","import { Fragment } from 'react'\nimport { Row, Col } from 'reactstrap'\nimport MediaPlayerVideo from './MediaPlayerVideo'\nimport MediaPlayerAudio from './MediaPlayerAudio'\nimport MediaPlayerControlled from './MediaPlayerControlled'\nimport ExtensionsHeader from '@components/extensions-header'\n\nconst ReactPlayer = () => {\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='React Player'\n        subTitle='React Media Player'\n        link='https://github.com/CookPete/react-player'\n      />\n      <Row>\n        <Col sm='12'>\n          <MediaPlayerVideo />\n        </Col>\n        <Col sm='12'>\n          <MediaPlayerControlled />\n        </Col>\n        <Col sm='12'>\n          <MediaPlayerAudio />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default ReactPlayer\n","// ** React Imports\nimport Proptypes from 'prop-types'\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ml-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired,\n  link: Proptypes.string\n}\n"],"sourceRoot":""}