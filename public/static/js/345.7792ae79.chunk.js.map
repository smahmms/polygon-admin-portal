{"version":3,"sources":["views/tables/data-tables/basic/UserTable.js","views/viewhelper.js","views/tables/data-tables/basic/AddNewModal.js"],"names":["MySwal","withReactContent","Swal","UserTable","useHistory","searchValue","setSearchValue","useState","isloading","setisloading","tableDataLoading","setTDL","userTypeData","setuserTypeData","value","label","userTitleData","setuserTitleData","userList","setUserlist","storeList","setStoreList","userInput","setUserInput","error","seterror","userType","userTitle","storeName","currentPage","setCurrentPage","efct","setEfct","useEffect","useJwt","adminUserList","then","res","data","payload","catch","err","status","title","color","columns","name","minWidth","selector","item","fullname","sortable","adminstore","storename","row","adminstatus","statusdesc","_jsx","Badge","userstatus","pill","children","allowOverflow","cell","_jsxs","className","Link","to","concat","id","Eye","size","style","cursor","Edit","Trash","marginTop","onClick","e","userID","preventDefault","fire","text","icon","allowOutsideClick","allowEscapeKey","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","result","adminUserdelete","Lock","handleBlock","userStatus","toggleStatus","adminUserBlock","_Fragment","Button","Ripple","tag","Plus","Card","Form","width","onSubmit","adminUserSearch","autoComplete","Input","placeholder","type","required","onChange","target","disabled","Spinner","Search","CardHeader","CardTitle","DataTable","noHeader","pagination","paginationPerPage","sortIcon","ChevronDown","paginationDefaultPage","paginationComponent","CustomPagination","ReactPaginate","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","length","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","progressPending","progressComponent","responsive","Error","response","toast","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","errors","Object","keys","Success","success","AddNewModal","_ref","open","handleModal","Picker","setPicker","Date","CloseBtn","X","Modal","isOpen","toggle","modalClassName","contentClassName","ModalHeader","close","ModalBody","FormGroup","Label","for","InputGroup","InputGroupAddon","addonType","InputGroupText","User","Briefcase","Mail","Calendar","Flatpickr","date","DollarSign","outline"],"mappings":"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","file":"static/js/345.7792ae79.chunk.js","sourcesContent":["import { Fragment, useState, forwardRef, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\n// ** Table Data & Columns\n//import { data } from '../data'\n\n// ** Add New Modal Component\nimport AddNewModal from './AddNewModal'\nimport Select from 'react-select'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft } from 'react-feather'\nimport { selectThemeColors, transformInToFormObject } from '@utils'\nimport { Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody } from 'reactstrap'\n\nimport { Error, Success } from '../../../viewhelper'\nimport useJwt from '@src/auth/jwt/useJwt'\n\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nconst MySwal = withReactContent(Swal)\n\nconst UserTable = () => {\n    const history = useHistory()\n    const [searchValue, setSearchValue] = useState('')\n    const [isloading, setisloading] = useState(false)\n    const [tableDataLoading, setTDL] = useState(true)\n    const [userTypeData, setuserTypeData] = useState([{ value: \"\", label: \"\" }])\n    const [userTitleData, setuserTitleData] = useState([{ value: \"\", label: \"\" }])\n    const [userList, setUserlist] = useState([])\n    const [storeList, setStoreList] = useState([])\n    const [userInput, setUserInput] = useState({})\n    const [error, seterror] = useState({\n        userType: false,\n        userTitle: false,\n        storeName: false\n    })\n\n    const [currentPage, setCurrentPage] = useState(0)\n    const [efct, setEfct] = useState(true)\n\n    useEffect(() => {\n        /*useJwt.userRoleList().then(res => {\n            // console.log(res.data.payload)\n            const userTypeApi = res.data.payload.map(type => {\n                return { value: type.id, label: type.statusdesc }\n            })\n            setuserTypeData(userTypeApi)\n        }).catch(err => {\n            //console.log(err.response)\n        })\n        useJwt.userTitleList().then(res => {\n            // console.log(res.data.payload)\n            const userTitleApi = res.data.payload.map(type => {\n                return { value: type.id, label: type.statusdesc }\n            })\n            setuserTitleData(userTitleApi)\n        }).catch(err => {\n            //console.log(err.response)\n        })*/\n        useJwt.adminUserList().then(res => {\n            // console.log(res.data.payload)\n            setUserlist(res.data.payload)\n            setTDL(false)\n        }).catch(err => {\n            //console.log(err)\n        })\n       /* useJwt.storeList().then(res => {\n            // console.log(res.data.payload)\n            const storeApi = res.data.payload.map(type => {\n                return { value: type.storeid, label: type.storename }\n            })\n            setStoreList(storeApi)\n        }).catch(err => {\n            //console.log(err)\n        })*/\n        \n\n    }, [efct])\n\n    const onchange = (e) => {\n        setUserInput({ ...userInput, [e.target.name]: e.target.value })\n\n    }\n    const handleUserType = (option, { action }) => {\n        if (action === 'clear') {\n            setUserInput({ ...userInput, UserType: null })\n        } else {\n            setUserInput({ ...userInput, UserType: option.value })\n        }\n    }\n    const handleUserTitle = (option, { action }) => {\n        if (action === 'clear') {\n            setUserInput({ ...userInput, UserTitle: null })\n        } else {\n            setUserInput({ ...userInput, UserTitle: option.value })\n        }\n    }\n    const handleStoreName = (option, { action }) => {\n        if (action === 'clear') {\n            setUserInput({ ...userInput, StoreName: null })\n        } else {\n            setUserInput({ ...userInput, StoreName: option.value })\n        }\n    }\n    const onsubmit = (e) => {\n        e.preventDefault()\n        // console.log(userInput)\n        const err = { ...error }\n        !userInput.UserType ? err.userType = true : err.userType = false\n        !userInput.UserTitle ? err.userTitle = true : err.userTitle = false\n        !userInput.StoreName ? err.storeName = true : err.storeName = false\n        seterror(err)\n        if (!err.userType && !err.userTitle && !err.storeName) {\n            const { username, password, Email, firstName, lastName, StoreName, UserType, UserTitle } = userInput\n            const fullname = `${firstName} ${lastName}`\n            useJwt.addAdminUser({ fullname, username, password, roleid: UserType, emailid: Email, storeid: StoreName, title: UserTitle }).then(res => {\n                //console.log(res)\n                MySwal.fire({\n                    icon: 'success',\n                    title: 'Done!',\n                    text: 'The Staff has been added successfully',\n                    customClass: {\n                        confirmButton: 'btn btn-success'\n                    }\n                })\n                setTimeout(function () { history.replace('/user') }, 1000)\n            }).catch(err => {\n                //console.log(err)\n            })\n        }\n    }\n    // ** Table Common Column\n    const status = {\n        1: { title: 'Active', color: 'light-success ' },\n        0: { title: 'Blocked', color: 'light-danger' }\n    }\n    const handleDelete = (userID) => {\n        return MySwal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            allowOutsideClick: false,\n            allowEscapeKey: false,\n            showCancelButton: true,\n            confirmButtonText: 'Yes, delete it!',\n            customClass: {\n                confirmButton: 'btn btn-primary',\n                cancelButton: 'btn btn-outline-danger ml-1'\n            },\n            buttonsStyling: false\n        }).then(function (result) {\n            if (result.value) {\n                //fetch business delete api...\n                useJwt.adminUserdelete({ id: userID }).then(res => {\n                    // //console.log(res)\n                    //   removedeleteitem(userID)\n                    MySwal.fire({\n                        icon: 'success',\n                        title: 'Deleted!',\n                        text: 'The Staff has been deleted.',\n                        customClass: {\n                            confirmButton: 'btn btn-success'\n                        }\n                    })\n                    setEfct(!efct)\n                }).catch(err => {\n                    //console.log(err.response)\n                })\n            }\n        })\n    }\n    // user staus block\n    const handleBlock = (userID, userStatus) => {\n        return MySwal.fire({\n            title: 'Are you sure?',\n            icon: 'warning',\n            allowOutsideClick: false,\n            allowEscapeKey: false,\n            showCancelButton: true,\n            confirmButtonText: 'Yes',\n            customClass: {\n                confirmButton: 'btn btn-primary',\n                cancelButton: 'btn btn-outline-danger ml-1'\n            },\n            buttonsStyling: false\n        }).then(function (result) {\n            if (result.value) {\n\n                let toggleStatus\n                userStatus === 0 ? toggleStatus = 1 : userStatus === 1 ? toggleStatus = 0 : toggleStatus = 0\n                useJwt.adminUserBlock({ id: userID, status: toggleStatus }).then(res => {\n                    //console.log(res)\n                    //   removedeleteitem(userID)\n                    MySwal.fire({\n                        icon: 'success',\n                        title: 'Status updated!',\n                        // text: 'The user has been Blocked',\n                        customClass: {\n                            confirmButton: 'btn btn-success'\n                        }\n                    })\n                    setEfct(!efct)\n                }).catch(err => {\n                    //console.log(err.response)\n                })\n            }\n        })\n    }\n\n    const columns = [\n        {\n            name: 'Name',\n            minWidth: '100px',\n            selector: (item) => {\n                return item.fullname ? item.fullname : ''\n            },\n            sortable: true\n        },\n        {\n            name: 'Email',\n            selector: 'emailid',\n            minWidth: '150px',\n            sortable: true\n        },\n      \n\n        {\n            name: 'Store Name',\n            selector: (item) => {\n                return item.adminstore ? item.adminstore.storename : ''\n            },\n            minWidth: '150px',\n            sortable: true\n        },\n        {\n            name: 'Role',\n            selector: (row) => {\n                return row['adminstatus'] ? row.adminstatus.statusdesc : \"\"\n            },\n            minWidth: '150px',\n            sortable: true\n        },\n        {\n            name: 'Status',\n            minWidth: '50px',\n            selector: row => {\n                return (\n                    <Badge color={status[row.userstatus].color} pill>\n                        {status[row.userstatus].title}\n                    </Badge>\n                )\n            },\n            sortable: true\n        },\n        {\n            name: 'Actions',\n            allowOverflow: true,\n            cell: row => {\n                return (\n                    <div className='d-flex'>\n                        <Link to={`/userDetails/${row.id}`}><Eye size={15} color='#2bc871' style={{ cursor: 'pointer' }} /></Link> &nbsp;&nbsp;\n                        <Link to={`/EditUserInfo/${row.id}`}><Edit size={15} color='#7367f0' style={{ cursor: 'pointer' }} /></Link> &nbsp;&nbsp;\n                        <Trash size={15} color='red' style={{ cursor: 'pointer', marginTop: '2.5px' }} onClick={(e) => {\n                            e.preventDefault()\n                            handleDelete(row.id)\n                        }} /> &nbsp;&nbsp;\n                        <Lock size={15} color='teal' style={{ cursor: 'pointer', marginTop: '2.5px' }} onClick={(e) => {\n                            e.preventDefault()\n                            handleBlock(row.id, row.userstatus)\n                        }} />\n                        {/* <UncontrolledDropdown>\n                            <DropdownToggle className='pr-1' tag='span'>\n                                <MoreVertical size={15} style={{ cursor: 'pointer' }} />\n                            </DropdownToggle>\n                            <DropdownMenu right>\n                                <DropdownItem tag='a' href={`/EditUserInfo/${row.id}`} className='w-100'>\n                                    <Edit size={15} color='#2bc871' style={{ cursor: 'pointer' }} />\n                                    <span className='align-middle ml-50'>Edit</span>\n                                </DropdownItem>\n                                <DropdownItem className='w-100' onClick={(e) => {\n                                    e.preventDefault()\n                                    handleDelete(row.id)\n                                }}>\n                                    <Trash size={15} color='red' style={{ cursor: 'pointer' }} />\n                                    <span className='align-middle ml-50'>Delete</span>\n                                </DropdownItem>\n                                <DropdownItem className='w-100' onClick={(e) => {\n                                    e.preventDefault()\n                                    handleBlock(row.id, row.userstatus)\n                                }}>\n                                    <Lock size={15} color='teal' style={{ cursor: 'pointer' }} />\n                                    <span className='align-middle ml-50'>{row.userstatus === 1 ? \"Block\" : \"Unblock\"}</span>\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown> */}\n\n                    </div>\n                )\n            }\n        }\n    ]\n    // ** Function to handle Pagination\n    const handlePagination = page => {\n        setCurrentPage(page.selected)\n    }\n    // ** Custom Pagination\n    const CustomPagination = () => (\n        <ReactPaginate\n            previousLabel=''\n            nextLabel=''\n            forcePage={currentPage}\n            onPageChange={page => handlePagination(page)}\n            pageCount={userList.length ? userList.length / 10 : 1}\n            breakLabel='...'\n            pageRangeDisplayed={2}\n            marginPagesDisplayed={2}\n            activeClassName='active'\n            pageClassName='page-item'\n            breakClassName='page-item'\n            breakLinkClassName='page-link'\n            nextLinkClassName='page-link'\n            nextClassName='page-item next'\n            previousClassName='page-item prev'\n            previousLinkClassName='page-link'\n            pageLinkClassName='page-link'\n            breakClassName='page-item'\n            breakLinkClassName='page-link'\n            containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n        />\n    )\n    const onSearchValueChange = (e) => {\n        setSearchValue(e.target.value)\n    }\n    const handleSearchSubmit = (e) => {\n        e.preventDefault()\n        setTDL(true)\n        useJwt.adminUserSearch({searchValue}).then(res => {\n            // console.log(res.data.payload)\n            setUserlist(res.data.payload)\n            setTDL(false)\n        }).catch(err => {\n            //console.log(err)\n        })\n\n    }\n    return (\n        <>\n            <Button.Ripple className='ml-2 mb-2' color='primary' tag={Link} to='/addNewUser'>\n                <Plus size={15} />\n                <span className='align-middle ml-50'>Add new Staff </span>\n            </Button.Ripple>\n            <Card>\n                <Form className=\"d-flex my-2 mx-1 justify-content-center\" style={{ width: '100%' }} onSubmit={handleSearchSubmit} autoComplete=\"off\">\n                    <Input\n                        style={{ width: '50%' }}\n                        placeholder=\"Search staff with User name, Name\"\n                        type='text'\n                        id='search-input'\n                        required\n                        value={searchValue}\n                        onChange={onSearchValueChange}\n                    />\n                    {\n                        isloading ? <Button.Ripple className='ml-2' color='primary' disabled={true} >\n                            <Spinner color='white' size='sm' />\n                            <small className='ml-50'>Loading...</small>\n                        </Button.Ripple> : <Button.Ripple className='ml-2' color='primary' type=\"submit\"  >\n                            <Search size={15} />\n                            <span className='align-middle ml-50'>Search</span>\n                        </Button.Ripple>\n                    }\n\n                </Form>\n            </Card>\n            {/* data table for user list */}\n            <Card>\n                <CardHeader className='border-bottom'>\n                    <CardTitle tag='h4'>Staff List</CardTitle>\n                </CardHeader>\n\n                <DataTable\n                    noHeader\n                    pagination\n                    /*selectableRows*/\n                    columns={columns}\n                    paginationPerPage={10}\n                    className='react-dataTable'\n                    sortIcon={<ChevronDown size={10} />}\n                    paginationDefaultPage={currentPage + 1}\n                    paginationComponent={CustomPagination}\n                    data={userList}\n                    progressPending={tableDataLoading}\n                    progressComponent={<Spinner color='primary' />}\n                    responsive={true}\n                /*selectableRowsComponent={BootstrapCheckbox}*/\n                />\n            </Card>\n        </>\n    )\n}\n\nexport default UserTable","import { Fragment, useState } from 'react'\nimport { toast, Slide } from 'react-toastify'\n\n    export const Error = (err) => {\n        try {\n            const e = err.response\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500 || e.status === 409) {\n                toast.error(e.data.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n            } else  {\n                toast.error('The server is under maintenance', {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                    }) \n            }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        }\n \n    }\n\n    export const ErrorMessage = (err) => {\n        try {\n        const e = err.response\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n         }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        } \n    }\n    export const Success = (response) => {\n        const message = response.data.message || 'success'\n        toast.success(message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n    }\n\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport Flatpickr from 'react-flatpickr'\nimport { User, Briefcase, Mail, Calendar, DollarSign, X } from 'react-feather'\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  FormGroup,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  Label\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\n\nconst AddNewModal = ({ open, handleModal }) => {\n  // ** State\n  const [Picker, setPicker] = useState(new Date())\n\n  // ** Custom close btn\n  const CloseBtn = <X className='cursor-pointer' size={15} onClick={handleModal} />\n\n  return (\n    <Modal\n      isOpen={open}\n      toggle={handleModal}\n      className='sidebar-sm'\n      modalClassName='modal-slide-in'\n      contentClassName='pt-0'\n    >\n      <ModalHeader className='mb-3' toggle={handleModal} close={CloseBtn} tag='div'>\n        <h5 className='modal-title'>New Record</h5>\n      </ModalHeader>\n      <ModalBody className='flex-grow-1'>\n        <FormGroup>\n          <Label for='full-name'>Full Name</Label>\n          <InputGroup>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <User size={15} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input id='full-name' placeholder='Bruce Wayne' />\n          </InputGroup>\n        </FormGroup>\n        <FormGroup>\n          <Label for='post'>Post</Label>\n          <InputGroup>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <Briefcase size={15} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input id='post' placeholder='Web Developer' />\n          </InputGroup>\n        </FormGroup>\n        <FormGroup>\n          <Label for='email'>Email</Label>\n          <InputGroup>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <Mail size={15} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input type='email' id='email' placeholder='brucewayne@email.com' />\n          </InputGroup>\n        </FormGroup>\n        <FormGroup>\n          <Label for='joining-date'>Joining Date</Label>\n          <InputGroup>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <Calendar size={15} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Flatpickr className='form-control' id='joining-date' value={Picker} onChange={date => setPicker(date)} />\n          </InputGroup>\n        </FormGroup>\n        <FormGroup className='mb-4'>\n          <Label for='salary'>Salary</Label>\n          <InputGroup>\n            <InputGroupAddon addonType='prepend'>\n              <InputGroupText>\n                <DollarSign size={15} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input type='number' id='salary' />\n          </InputGroup>\n        </FormGroup>\n        <Button className='mr-1' color='primary' onClick={handleModal}>\n          Submit\n        </Button>\n        <Button color='secondary' onClick={handleModal} outline>\n          Cancel\n        </Button>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default AddNewModal\n"],"sourceRoot":""}