{"version":3,"sources":["views/VendorComponents/VoucherManagement-V2/UploadVoucherCustomCode.js","views/VendorComponents/VoucherManagement-V2/ImageUpload.js","views/VendorComponents/VoucherManagement-V2/CreateVoucher.js","views/viewhelper.js"],"names":["Dragger","Upload","UploadVoucherCustomCode","_ref","setcustomcodecsvurl","isCancel","setisCancel","useState","ipAddress","setIPAddress","Math","floor","random","socket","socketIOClient","concat","FILE_UPLOAD_BASE_URl","extraHeaders","Authorization","localStorage","getItem","useEffect","fetch","then","response","json","data","ip","catch","error","disconnect","connect","props","accept","name","multiple","maxCount","beforeUpload","file","customRequest","async","onSuccess","onError","onProgress","_ref2","File","FReader","FileReader","size","uid","split","join","onload","evnt","emit","Name","Data","target","result","Size","on","percent","Place","NewFile","slice","min","readAsBinaryString","message","progress","format","parseFloat","toFixed","onChange","info","status","success","_jsx","Fragment","children","_jsxs","Row","className","Col","sm","Link","to","download","FileText","color","style","marginRight","UploadCloud","ImageUpload","filePrevw2","setFile","fileList","setFileList","url","listType","newFileList","onPreview","src","Promise","resolve","reader","readAsDataURL","originFileObj","image","Image","imgWindow","window","open","document","write","outerHTML","isJpgOrPng","type","isLt2M","_ref3","formData","FormData","append","useJwt2","singleFileupload","onUploadProgress","loading","round","loaded","total","res","payload","image_url","Error","e","VoucherTypeList","value","label","Status","CreateVoucher","productRef","useRef","history","useHistory","businessList","setBusinessList","businessid","setBusinessid","isLoadingBussiness","setisLoadingBussiness","isloadingTier","setisloadingTier","selectedBusiness","setselectedBusiness","CreateVoucherloading","setCreateVoucherloading","filePrevw","setFilePrevw","productList","setproductList","isLoadingProduct","setisLoadingProduct","tierList","setTierList","productDefaultValue","setproductDefaultValue","countryList","setcountryList","countryDefaultValue","setcountryDefaultValue","townList","settownList","selectedTowns","setselectedTowns","townDefaultValue","settownDefaultValue","customcodecsvurl","currentTextcomplete","setCurrentTextcomplete","getElementById","userInput","setUserInput","title","customcode_url","voucherType","productId","voucherValue","minExpAmount","voucherValidity","rewardPoint","quota","expiryDate","startdate","terms","Description","is_product_voucher","is_system_voucher","purchaseAmount","business_id","is_local","product_voucher_map_id","Tier","islocationwise","lat","long","isglobal","country","distancecover","town","customcode","Message","getProductList","params","page","perPage","q","imageurlhave","searchValue","useJwt","pData","map","p","productid","productname","length","err","all","customerBusinessList","x","id","businessname","tList","tier","getcityList","country_id","cityList","cList","handleChange","Card","CardHeader","CardTitle","tag","CustomInput","checked","inline","CardBody","paddingTop","Form","width","onSubmit","preventDefault","item","body","merchantid","vouchertype","vouchervalue","vouchervalidity","expirydate","voucherimage","description","tier_id","minexpamount","rewardpoint","price","pmsVoucherCreate","Success","msg","push","autoComplete","md","FormGroup","Label","for","Input","required","placeholder","Select","theme","selectThemeColors","maxMenuHeight","classNamePrefix","selected","options","isLoading","defaultValue","ref","opacity","height","onFocus","current","select","focus","onWheel","blur","Date","toLocaleDateString","prevState","isMulti","handleTownSelect","Info","UncontrolledPopover","trigger","placement","PopoverHeader","PopoverBody","marginTop","Button","Ripple","disabled","Spinner","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","undefined","ErrorMessage","errors","Object","keys"],"mappings":"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","file":"static/js/323.de7bb70b.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\nimport { FileText, UploadCloud } from 'react-feather'\nimport { Link } from 'react-router-dom'\nimport { Col, Row } from 'reactstrap'\nimport { FILE_UPLOAD_BASE_URl } from \"../../../Configurables\"\nimport { Upload, message } from \"antd\"\n// ** Styles\nimport '@styles/react/libs/noui-slider/noui-slider.scss'\nimport \"antd/dist/antd.css\"\nimport socketIOClient from \"socket.io-client\"\n\nconst { Dragger } = Upload\n\nconst UploadVoucherCustomCode = ({setcustomcodecsvurl}) => {\n\n    const [isCancel, setisCancel] = useState(false)\n    const [ipAddress, setIPAddress] = useState(Math.floor(100000 + (Math.random() * 900000)))\n\n    const socket = socketIOClient(`${FILE_UPLOAD_BASE_URl}/voucher-custom-code`, {\n        extraHeaders: {\n          Authorization: localStorage.getItem('accessToken') // Replace YOUR_TOKEN with the actual token value\n        }\n    })\n\n    useEffect(() => {\n        fetch('https://api.ipify.org?format=json')\n            .then(response => response.json())\n            .then(data => setIPAddress(data.ip))\n            .catch(error => {\n                //console.log(error)\n            })\n    }, [])\n\n    // console.log('ipAddress ', ipAddress)\n\n    useEffect(() => {\n        // const socket = socketIOClient('http://localhost:5001/fsapi/voucher-custom-code', {\n        //     extraHeaders: {\n        //       Authorization: localStorage.getItem('accessToken') // Replace YOUR_TOKEN with the actual token value\n        //     }\n        //   })\n\n        if (isCancel) {\n\n            socket.disconnect()\n            socket.connect()\n        }\n \n        // CLEAN UP THE EFFECT\n        return () => socket.disconnect()\n\n    }, [isCancel])\n\n    const handleFileChange = (info) => {\n        // console.log('info ', info)\n        if (info.file.status === 'uploading') {\n            setisCancel(false)\n        } else if (info.file.status === 'done') {\n          message.success(`${info.file.name} uploaded successfully`)\n        } else if (info.file.status === 'error') {\n          message.error(`${info.file.name} upload failed`)\n        } else if (info.file.status === 'remove') {\n            setisCancel(true)\n            setcustomcodecsvurl(null)\n        }\n      }\n\n    const handleBeforeUpload = (file) => {\n\n        // console.log('handleBeforeUpload file ', file)\n\n        //file.chunkCount = totalChunks\n    \n        return true\n    }\n\n    const handleChunkUpload = async ({ file, onSuccess, onError, onProgress  }) => {\n        setcustomcodecsvurl(null)\n        const File = file\n        const FReader = new FileReader()\n        let { name } = File\n        const { size } = File\n        name = `${ipAddress}_${File.uid}_${name}`\n        name = name.split(' ').join('_')\n\n        FReader.onload = (evnt) => {\n            // console.log('evnt ')\n            socket.emit('Upload', { Name: name, Data: evnt.target.result })\n        }\n\n        socket.emit('Start', { Name: name, Size: size })\n\n        socket.on('MoreData', function (data) {\n            // UpdateBar(data['Percent'])\n                onProgress({ percent: data['Percent'] })\n                const Place = data['Place'] * 131072 //The Next Blocks Starting Position\n                // const NewFile //The constiable that will hold the new Block of Data\n                const NewFile = File.slice(Place, Place + Math.min(131072, (File.size - Place)))\n                FReader.readAsBinaryString(NewFile)\n        })\n\n        socket.on(\"Done\", data => {\n            //UpdateBar(data['Percent'])\n            onProgress({ percent: 100 })\n            //setproduct_video_link(data['file_access_url'])\n            //console.log(\"File uploaded successfully, access url: \", data['file_access_url'])\n            setcustomcodecsvurl(data['file_access_url'])\n            onSuccess(data)\n        })\n\n        socket.on('uploadError', (message) => {\n            setcustomcodecsvurl(null)\n            onError(message)\n        })\n\n    }\n\n    const props = {\n        accept: \".csv\",\n        name: 'file',\n        multiple: false,\n        maxCount: 1,\n        beforeUpload: handleBeforeUpload,\n        customRequest: handleChunkUpload,\n        progress: {\n            format: (percent) => {\n\n                return percent && `${parseFloat(percent.toFixed(2))}%`\n            }\n          },\n          onChange: handleFileChange\n    }\n\n    return (\n        <Fragment>\n                <Row className='pb-2'>\n                    <Col sm='12' className='text-right mb-1'>\n                        <Link to=\"/voucher-custom-code.csv\" target=\"_blank\" download>\n                            <div className='d-flex align-items-center justify-content-end'>\n                                <FileText size='17px' color='#006496' style={{ marginRight: '5px' }} />\n                                <h6 className='text-primary m-0'>DOWNLOAD TEMPLATE</h6>\n                            </div>\n                        </Link>\n                    </Col>\n                    <Col sm='12'>\n                        <Dragger {...props}>\n                            <p className=\"ant-upload-drag-icon\">\n                                <UploadCloud />\n                            </p>\n                            <p className=\"ant-upload-text\">  Click / Drag file to this area to upload<span style={{ color: 'red' }}>*</span></p>\n                            <p className=\"ant-upload-hint\">\n                                Voucher Custom Code upload.\n                            </p>\n                        </Dragger>\n                    </Col>\n                </Row>\n        </Fragment>\n    )\n}\n\nexport default UploadVoucherCustomCode","import useJwt2 from '@src/auth/jwt/useJwt2'\nimport { Upload, message } from 'antd'\nimport React, { useState } from 'react'\n\nconst ImageUpload = ({filePrevw2 = null, setFile}) => {\n\n    const [fileList, setFileList] = useState(filePrevw2 ? [{uid: '1', status: 'done', url: filePrevw2}] : [])\n\n      const onChange = ({ fileList: newFileList }) => {\n        setFileList(newFileList)\n      }\n\n      const onPreview = async (file) => {\n        let src = file.url\n        if (!src) {\n          src = await new Promise((resolve) => {\n            const reader = new FileReader()\n            reader.readAsDataURL(file.originFileObj)\n            reader.onload = () => resolve(reader.result)\n          })\n        }\n        const image = new Image()\n        image.src = src\n        const imgWindow = window.open(src)\n        imgWindow?.document.write(image.outerHTML)\n      }\n\n      const handleUpload = async ({ file, onSuccess, onError, onProgress  })  => {\n\n                const formData = new FormData()\n                formData.append('image', file)\n                const onUploadProgress = data => {\n                    const loading = Math.round((100 * data.loaded) / data.total)\n                    onProgress({percent: loading})\n                }\n\n                useJwt2.singleFileupload(formData, { onUploadProgress }).then(res => {\n                    if (res.data.payload) {\n                        setFile(res.data.payload.image_url)\n                        onSuccess(res.data.payload)\n                    } else {\n                        const error_data = {\n                            response: {\n                                status: 400,\n                                data: {\n                                    message: \"File uploading error,Try again !\"\n                                }\n                            }\n                        }\n                        Error(error_data)\n                        onError('File uploading error,Try again !')\n                    }\n\n                }).catch(e => {\n\n                    // console.log(e.response)\n                    Error(e)\n                    onError('File uploading error,Try again !')\n                })\n      }\n      const beforeUpload = (file) => {\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/jpg' || file.type === 'image/png'\n        if (!isJpgOrPng) {\n          message.error('You can only upload JPG/PNG file!')\n        }\n        const isLt2M = file.size / 1024 / 1024 < 2\n        if (!isLt2M) {\n          message.error('Image must smaller than 2MB!')\n        }\n        return isJpgOrPng && isLt2M\n      }\n\n      const props = {\n            multiple:false,\n            maxCount:1,\n            listType:\"picture-card\",\n            fileList,\n            onChange,\n            onPreview,\n            beforeUpload,\n            customRequest: handleUpload,\n            progress: {\n                format: (percent) => {\n    \n                    return percent && `${parseFloat(percent.toFixed(2))}%`\n                }\n              }\n      }\n\n      return (\n        // <ImgCrop rotationSlider>\n          <Upload {...props}>+ Upload</Upload>\n        // </ImgCrop>\n      )\n}\n\nexport default ImageUpload","import React, { useEffect, useState, useRef, Fragment } from 'react'\nimport {\n    ChevronDown, Share, Info, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft\n} from 'react-feather'\nimport {\n    UncontrolledPopover, PopoverHeader, PopoverBody, Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink, InputGroup, InputGroupAddon, InputGroupText, CustomInput\n} from 'reactstrap'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport useJwt2 from '@src/auth/jwt/useJwt2'\nimport { Error, Success, ErrorMessage } from '../../viewhelper'\nimport { useHistory } from 'react-router-dom'\nimport Select from 'react-select'\nimport { selectThemeColors, transformInToFormObject } from '@utils'\nimport { toast } from 'react-toastify'\nimport UploadVoucherCustomCode  from './UploadVoucherCustomCode'\nimport ImageUpload from './ImageUpload'\n\n// import { Textcomplete, StrategyProps } from \"@textcomplete/core\"\n// import { TextareaEditor } from \"@textcomplete/textarea\"\n\nconst VoucherTypeList = [{ value: 'discount', label: 'discount' }, { value: 'cash', label: 'cash' }, { value: 'product', label: 'product' }]\nconst Status = [{value: 1, label: 'Active'}, {value: 0, label: 'InActive'}]\n\nconst CreateVoucher = () => {\n    const productRef = useRef()\n    const history = useHistory()\n    const [businessList, setBusinessList] = useState([])\n    const [businessid, setBusinessid] = useState('')\n    const [isLoadingBussiness, setisLoadingBussiness] = useState(true)\n    const [isloadingTier, setisloadingTier] = useState(true)\n    const [selectedBusiness, setselectedBusiness] = useState({})\n    const [CreateVoucherloading, setCreateVoucherloading] = useState(false)\n    const [file, setFile] = useState(null)\n    const [filePrevw, setFilePrevw] = useState(null)\n    const [productList, setproductList] = useState([])\n    const [isLoadingProduct, setisLoadingProduct] = useState(false)\n    const [tierList, setTierList] = useState([{ value: null, label: 'All' }])\n    const [productDefaultValue, setproductDefaultValue] = useState({ value: '', label: 'select...'})\n\n    const [countryList, setcountryList] = useState([])\n    const [countryDefaultValue, setcountryDefaultValue] = useState({ value: '', label: 'select...'})\n\n    const [townList, settownList] = useState([])\n    const [selectedTowns, setselectedTowns] = useState([])\n    const [townDefaultValue, settownDefaultValue] = useState({ value: '', label: 'select...'})\n\n    const [customcodecsvurl, setcustomcodecsvurl] = useState(null)\n\n    const autosgdata = [\"aaa\", \"abb\", \"acc\", \"add\"]\n\n    const strategy = {\n    match: /\\B:([\\-+\\w]*)$/,\n    async search(term, callback, match) {\n        const filtered = autosgdata.filter((datum) => datum.startsWith(term))\n        callback(filtered)\n    },\n    template(autosgdata, term) {\n        return `<span>${autosgdata}</span>`\n    },\n    replace(autosgdata) {\n        return `:${autosgdata[0]}:`\n    }\n    }\n    const option = {\n        // Configure a dropdown UI. \n        dropdown: {\n        // Class attribute of the dropdown element.\n        className: \"dropdown-menu textcomplete-dropdown\",\n    \n        // The maximum number of items to be rendered.\n        maxCount: 10,\n    \n        // Placement of the dropdown. \"auto\", \"top\" or \"bottom\".\n        placement: \"auto\",\n    \n        // Return header and footer elements' content\n        header: (results) => \"eeer\",\n        footer: (results) => \"ttttt\",\n    \n        // Whether activate the opposite side item on pressing up or\n        // down key when an edge item is active.\n        rotate: false,\n    \n        // Configure CSS style of the dropdown element.\n        //   style: { display: \"none\", position: \"absolute\", zIndex: \"1000\" },\n    \n        // The parent node of the dropdown element.\n        parent: document.getElementById('root'),\n        \n        item: {\n            // Class attribute of the each dropdown item element.\n            className: \"textcomplete-item\",\n    \n            // Active item's class attribute.\n            activeClassName: \"textcomplete-item active\"\n        }\n        }\n    }\n\n    const containerRef = useRef(null)\n    const [currentTextcomplete, setCurrentTextcomplete] = useState(null)\n    // useEffect(() => {\n    //     console.log('containerRef ', containerRef)\n    //     if (containerRef.current) {\n    //       const editor = new TextareaEditor(containerRef.current)\n    //       const textcomplete = new Textcomplete(editor, [strategy], option)\n    \n    //       setCurrentTextcomplete(textcomplete)\n    //     }\n    //   }, [])\n    //   console.log('currentTextcomplete ', currentTextcomplete)\n\n    const [userInput, setUserInput] = useState({\n        title: \"\",\n        customcode_url: null,\n        voucherType: VoucherTypeList[0].value,\n        productId: null,\n        voucherValue: 1,\n        minExpAmount: 0,\n        voucherValidity: 1,\n        rewardPoint: 0,\n        quota: 1,\n        status: 1,\n        expiryDate: '',\n        startdate: null,\n        terms: '',\n        Description: '',\n        is_product_voucher : 1,\n        is_system_voucher: false,\n        purchaseAmount: 0,\n        business_id: null,\n        is_local: false,\n        product_voucher_map_id: null,\n        Tier: null,\n        islocationwise: false,\n        lat: null,\n        long: null,\n        isglobal: true,\n        country: null,\n        distancecover: 0,\n        town: [],\n        customcode: false,\n        Message: \"\"\n\n    })\n    const getProductList = (business_id) => {\n        setproductList([])\n        setisLoadingProduct(true)\n        const params = {\n            page: 1,\n            perPage: 50000,\n            business_id,\n            q: null,\n            imageurlhave: null,\n            searchValue: null\n        }\n        useJwt.productList(params).then(res => {\n            const data = res.data.payload\n            const pData = data.data.map(p => { return { value: p.productid, label: p.productname } })\n            setproductList(pData)\n            setisLoadingProduct(false)\n            if (pData.length) {\n                setproductDefaultValue(pData[0])\n                setUserInput(userInput => ({\n                    ...userInput,\n                    productId: pData[0].value\n                  }))\n\n            } else {\n                setproductDefaultValue({value: '', label: 'Select...' })\n                setUserInput(userInput => ({\n                    ...userInput,\n                    productId: null\n                  }))\n            }\n\n        }).catch(err => {\n            // Error(err)\n            //console.log(err)\n            setproductDefaultValue({value: '', label: 'Select...' })\n            setUserInput(userInput => ({\n                ...userInput,\n                productId: null\n              }))\n            setisLoadingProduct(false)\n        })\n    }\n    useEffect(async () => {\n\n        const [business_id, Tier] = await Promise.all([\n\n                        useJwt2.customerBusinessList().then(res => {\n                            const { payload } = res.data\n                            const businessList = payload.map(x => { return { value: x.id, label: x.businessname } })\n                            setBusinessList(businessList)\n                            if (payload.length) {\n                                setBusinessid(payload[0].id)\n                                setselectedBusiness(businessList[0])\n                                return payload[0].id\n\n                            } else {\n                                return null\n                            }\n                            \n                        }).catch(err => {\n                            //console.log(err.response)\n                            Error(err)\n                            return null\n                        }),\n\n                        useJwt2.tierList().then(res => {\n                            //console.log(res)\n                            const { payload } = res.data\n                            const tList = payload.map(x => { return { value: x.id, label: x.tier } })\n                            setTierList([{ value: null, label: 'All' }, ...tList])\n                            return null\n                        }).catch(err => {\n                            //console.log(err.response)\n                            Error(err)\n                            return null\n                        })\n                \n                    ])\n        setisloadingTier(false)\n        setisLoadingBussiness(false)\n        setUserInput({...userInput, business_id})\n\n    }, [])\n\n    const getcityList = (country_id) => {\n        setselectedTowns([])\n        settownList([])\n        useJwt2.cityList({country_id}).then(res => {\n            const { payload } = res.data\n            //console.log(res)\n            const cList = payload.map(x => { return { value: x.id, label: x.name } })\n            settownList(cList)\n            \n        }).catch(err => {\n            //console.log(err.response)\n            Error(err)\n        })\n    }\n\n    const getcountrylist = () => {\n\n        if (!countryList.length) {\n            useJwt2.countryList().then(res => {\n                const { payload } = res.data\n                //console.log(res)\n                const cList = payload.map(x => { return { value: x.id, label: x.name } })\n                setcountryList(cList)\n                if (payload.length) {\n                    setUserInput(prevState => {\n                        return {...prevState, country: payload[0].id}\n                      })\n                    getcityList(payload[0].id)\n                    setcountryDefaultValue(cList[0])\n                } \n                \n            }).catch(err => {\n                //console.log(err.response)\n                Error(err)\n            })\n        }\n    }\n\n    const handleChange = (e) => {\n        setUserInput({ ...userInput, [e.target.name]: e.target.value })\n    }\n    const handleBusinessChange = (selected) => {\n        if (userInput.voucherType === 'product') {\n            getProductList(selected.value)\n            setUserInput(userInput => ({\n                ...userInput,\n                business_id: selected.value\n              }))\n\n        } else {\n            setUserInput(userInput => ({...userInput, business_id: selected.value, productId: null}))\n            setproductDefaultValue({ value: '', label: 'Select...' })\n        }   \n        setBusinessid(selected.value)\n        setselectedBusiness(selected)\n    }\n\n    const handleChangeIsGlobal = (e) => {\n\n        setUserInput(userInput => ({...userInput, isglobal: e.target.checked, islocationwise : false, is_local: !(e.target.checked)}))\n        // console.log(`!(e.target.checked) `, !(e.target.checked))\n        if (!(e.target.checked)) {\n            getcountrylist()\n        }\n    }\n    const handleChangeIsLocationwise = (e) => setUserInput({ ...userInput, islocationwise: e.target.checked, isglobal:  !(e.target.checked) }) \n    const handleChangeIsCustomCode = (e) => setUserInput({ ...userInput, customcode: e.target.checked })\n    const handleChangeIsSystemVoucher = (e) => setUserInput({ ...userInput, is_system_voucher: e.target.checked })\n\n    const handleChangeCountry = (selected) => {\n        setcountryDefaultValue(selected)\n        setUserInput({ ...userInput, country: selected.value, town: []  })\n        settownList([])\n        getcityList(selected.value)\n    }\n    const handleTownSelect = (selected) => {\n        // console.log('selected town ', selected)\n        setselectedTowns(selected)\n    }\n\n    const handleVoucherTypeSelect = (selected) => {\n        \n        if (selected.value === 'product') {\n            getProductList(userInput.business_id)\n        }\n        setUserInput(userInput => ({\n            ...userInput,\n            voucherType: selected.value\n          }))\n\n    }\n\n    const onSubmit = async (e) => {\n        e.preventDefault()\n        const { \n            voucherType,\n            productId,\n            voucherValue,\n            minExpAmount,\n            voucherValidity,\n            rewardPoint,\n            quota,\n            status,\n            expiryDate,\n            startdate,\n            terms,\n            Description,\n            is_product_voucher,\n            is_system_voucher,\n            purchaseAmount,\n            business_id,\n            is_local,\n            product_voucher_map_id,\n            Tier,\n            islocationwise,\n            lat,\n            long,\n            isglobal,\n            country,\n            distancecover,\n            customcode,\n            title,\n            Message\n        } = userInput\n\n        if (customcode && !customcodecsvurl) {\n            Error({response: { status : 404, data: { message: 'Please wait for customcode file upload'} }})\n            return 0\n        } else if (!file) {\n            Error({response: { status : 404, data: { message: 'Please wait for image file upload'} }})\n            return 0\n        }\n        setCreateVoucherloading(true)\n        const town = selectedTowns.map(item => +item.value)\n\n        const body = {\n            title,\n            customcode,\n            customcode_url: customcodecsvurl,\n            merchantid : +business_id,\n            vouchertype: voucherType,\n            productid: +productId,\n            vouchervalue: +voucherValue,\n            terms,\n            vouchervalidity : +voucherValidity,\n            startdate,\n            expirydate: expiryDate,\n            voucherimage: file,\n            description: Description,\n            quota: +quota,\n            status: +status,\n            tier_id : +Tier,\n            is_system_voucher,\n            minexpamount: +minExpAmount,\n            rewardpoint : +rewardPoint,\n            price: +purchaseAmount,\n            isglobal,\n            islocationwise,\n            lat: +lat,\n            long: +long,\n            distancecover: +distancecover,\n            town,\n            country,\n            message: Message\n        }\n \n        useJwt2.pmsVoucherCreate(body).then(res => {\n\n            setCreateVoucherloading(false)\n            //console.log(res)\n            Success({data: {message : res.data.payload.msg}})\n            history.push('/AllVouchersADMIN')\n\n        }).catch(err => {\n\n            setCreateVoucherloading(false)\n            Error(err)\n            //console.log(err)\n        })\n    }\n\n    return (\n        <Fragment>\n          \n        <Card id=\"createVoucherd\">\n            <CardHeader className='border-bottom'>\n                <CardTitle tag='h4'>Create New Voucher</CardTitle>\n                <CustomInput onChange={handleChangeIsSystemVoucher} type='switch' id='is_system_voucher' inline label='Is-System-Voucher' checked={userInput.is_system_voucher}  />\n            </CardHeader>\n            <CardBody style={{ paddingTop: '15px' }}>\n           \n                <Form className=\"row\" style={{ width: '100%' }} onSubmit={onSubmit} autoComplete=\"off\">\n                     \n                    <Col md='4' >\n                        <FormGroup>\n                            <Label for=\"voucherValue\">Title</Label>\n                            <Input type=\"text\"\n                                name=\"title\"\n                                id='title'\n                                value={userInput.title}\n                                onChange={handleChange}\n                                required\n                                placeholder='title'\n                            />\n                        </FormGroup>\n                    </Col>\n\n                     <Col md='4' >\n                        <FormGroup>\n                            <Label for=\"Business\">Select a Business <span style={{ color: 'red' }}>*</span></Label>\n                            <Select\n                                theme={selectThemeColors}\n                                maxMenuHeight={200}\n                                className='react-select'\n                                classNamePrefix='select'\n                                onChange={handleBusinessChange}\n                                value={selectedBusiness}\n                                options={businessList}\n                                isLoading={isLoadingBussiness}\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Col md='4' >\n                        <FormGroup>\n                            <Label for=\"Business\">Voucher Type <span style={{ color: 'red' }}>*</span></Label>\n                            <Select\n                                theme={selectThemeColors}\n                                maxMenuHeight={200}\n                                className='react-select'\n                                classNamePrefix='select'\n                                defaultValue={VoucherTypeList[0]}\n                                onChange={handleVoucherTypeSelect}\n                                options={VoucherTypeList}\n                            />\n                        </FormGroup>\n                    </Col>\n                    {userInput.voucherType === 'product' && <Col md='4' >\n                        <FormGroup>\n                            <Label for=\"Business\">Select a Product<span style={{ color: 'red' }}>*</span></Label>\n                            <Select\n                                ref={productRef}\n                                theme={selectThemeColors}\n                                maxMenuHeight={200}\n                                className='react-select'\n                                classNamePrefix='select'\n                                value={productDefaultValue}\n                                onChange={(selected) => {\n                                    setproductDefaultValue(selected)\n                                    setUserInput({ ...userInput, productId: selected.value })\n                                }}\n                                // maxMenuHeight={150}\n                                options={productList}\n                                isLoading={isLoadingProduct}\n                            />\n                        </FormGroup>\n                        <Input\n                            required\n                            style={{\n                                opacity: 0,\n                                width: \"100%\",\n                                height: 0\n                                // position: \"absolute\"\n                            }}\n                            onFocus={e => productRef.current.select.focus()}\n                            value={userInput.productId || ''}\n                            onChange={e => ''}\n                        />\n                    </Col>}\n                    <Col md='4' >\n                        <FormGroup>\n                            <Label for=\"voucherValue\">Voucher Value</Label>\n                            <Input type=\"number\"\n                                name=\"voucherValue\"\n                                id='voucherValue'\n                                value={userInput.voucherValue}\n                                onChange={handleChange}\n                                required\n                                min={1}\n                                placeholder='0'\n                                onWheel={(e) => e.target.blur()}\n                            />\n                        </FormGroup>\n                    </Col>\n                    { !userInput.is_system_voucher && <Col md='4' >\n                        <FormGroup>\n                            <Label for=\"minExpAmount\">Minimum Exp Amount</Label>\n                            <Input type=\"number\"\n                                name=\"minExpAmount\"\n                                id='minExpAmount'\n                                value={userInput.minExpAmount}\n                                onChange={handleChange}\n                                min={0}\n                                placeholder='0'\n                                onWheel={(e) => e.target.blur()}\n                            />\n                        </FormGroup>\n                    </Col> }\n                    <Col md='4' >\n                        <FormGroup>\n                            <Label for=\"voucherValidity\">Voucher Validity (Days)</Label>\n                            <Input type=\"number\"\n                                name=\"voucherValidity\"\n                                id='voucherValidity'\n                                value={userInput.voucherValidity}\n                                onChange={handleChange}\n                                required\n                                min={1}\n                                placeholder='0'\n                                onWheel={(e) => e.target.blur()}\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Col md='4' >\n                        <FormGroup>\n                            <Label for=\"startdate\">Start Date<span style={{ color: 'red' }}>*</span></Label>\n                            <Input type=\"date\"\n                                min={new Date().toLocaleDateString('fr-CA')}\n                                name=\"startdate\"\n                                id='startdate'\n                                value={userInput.startdate}\n                                onChange={handleChange}\n                                required\n                                placeholder='0'\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Col md='4' >\n                        <FormGroup>\n                            <Label for=\"expiryDate\">Expiry Date<span style={{ color: 'red' }}>*</span></Label>\n                            <Input type=\"date\"\n                                min={new Date().toLocaleDateString('fr-CA')}\n                                name=\"expiryDate\"\n                                id='expiryDate'\n                                value={userInput.expiryDate}\n                                onChange={handleChange}\n                                required\n                                placeholder='0'\n                            />\n                        </FormGroup>\n                    </Col>\n\n                    { !userInput.is_system_voucher && <Fragment> <Col md='4' >\n                        <FormGroup>\n                            <Label for=\"rewardPoint\">Reward Point</Label>\n                            <Input type=\"number\"\n                                name=\"rewardPoint\"\n                                id='rewardPoint'\n                                value={userInput.rewardPoint}\n                                onChange={handleChange}\n                                required\n                                min={0}\n                                placeholder='0'\n                                onWheel={(e) => e.target.blur()}\n                            />\n                        </FormGroup>\n                    </Col> \n                    <Col md='4' >\n                        <FormGroup>\n                            <Label for=\"purchaseAmount\">Purchase Amount(Buy Cash)</Label>\n                            <Input type=\"number\"\n                                name=\"purchaseAmount\"\n                                id='purchaseAmount'\n                                value={userInput.purchaseAmount}\n                                onChange={handleChange}\n                                min={0}\n                                placeholder='0'\n                                onWheel={(e) => e.target.blur()}\n                            />\n                        </FormGroup>\n                    </Col> </Fragment> }\n\n                    <Col md='4' >\n                        <FormGroup>\n                            <Label for=\"quota\">Quota</Label>\n                            <Input type=\"number\"\n                                name=\"quota\"\n                                id='quota'\n                                value={userInput.quota}\n                                onChange={handleChange}\n                                required\n                                min={1}\n                                placeholder='0'\n                                onWheel={(e) => e.target.blur()}\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Col md='4' >\n                        <FormGroup>\n                            <Label for=\"Business\">Select a Tier</Label>\n                            <Select\n                                theme={selectThemeColors}\n                                maxMenuHeight={200}\n                                className='react-select'\n                                classNamePrefix='select'\n                                defaultValue={tierList[0]}\n                                onChange={(selected) => setUserInput({ ...userInput, Tier: selected.value })}\n                                options={tierList}\n                                isLoading={isloadingTier}\n                            />\n                        </FormGroup>\n                    </Col>\n                    \n                    <Col md='4' >\n                        <FormGroup>\n                            <Label for=\"Business\">Status</Label>\n                            <Select\n                                theme={selectThemeColors}\n                                maxMenuHeight={200}\n                                className='react-select'\n                                classNamePrefix='select'\n                                defaultValue={Status[0]}\n                                onChange={(selected) => {\n                                    setUserInput({ ...userInput, status: selected.value })\n                                }}\n                                options={Status}\n                            />\n                        </FormGroup>\n                    </Col>\n\n                    {\n                        !userInput.is_system_voucher && <Fragment>\n\n                      <Col md='12'>\n                        <Row>\n                            <Col md='4' >\n                            <FormGroup>\n                                <CustomInput onChange={handleChangeIsGlobal} type='switch' id='isglobal' inline label='Is-Global' checked={userInput.isglobal}  />\n                            </FormGroup>\n                        </Col>\n\n                        {\n                            (!userInput.isglobal && !userInput.islocationwise && userInput.is_local) ? <Fragment>\n\n                                <Col md='4' >\n                                        <FormGroup>\n                                            <Label for=\"country\">Country</Label>\n                                            <Select\n                                                theme={selectThemeColors}\n                                                className='react-select'\n                                                classNamePrefix='select'\n                                                value={countryDefaultValue}\n                                                onChange={handleChangeCountry}\n                                                options={countryList}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n\n                                    <Col md='4' >\n                                        <FormGroup>\n                                            <Label for=\"town\">Town</Label>\n                                            <Select\n                                                theme={selectThemeColors}\n                                                className='react-select'\n                                                classNamePrefix='select'\n                                                value={selectedTowns}\n                                                isMulti\n                                                onChange={(selected) => handleTownSelect(selected)}\n                                                options={townList}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n\n                            </Fragment> : null\n                        }\n\n                        </Row>\n                    </Col>\n\n                    <Col md='12'>\n                        <Row>\n                            <Col md='3' >\n                            <FormGroup>\n                                <CustomInput onChange={handleChangeIsLocationwise} type='switch' id='islocationwise' inline label='Is-Locationwise' checked={userInput.islocationwise}  />\n                            </FormGroup>\n                        </Col>\n                        {\n                            userInput.islocationwise ? <Fragment>\n\n                                    <Col md='3' >\n                                        <FormGroup>\n                                            <Label for=\"lat\">Lat</Label>\n                                            <Input type=\"number\"\n                                                name=\"lat\"\n                                                id='lat'\n                                                value={userInput.lat}\n                                                onChange={handleChange}\n                                                required\n                                                min={1}\n                                                placeholder='0'\n                                                onWheel={(e) => e.target.blur()}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                    <Col md='3' >\n                                        <FormGroup>\n                                            <Label for=\"quota\">Long</Label>\n                                            <Input type=\"number\"\n                                                name=\"long\"\n                                                id='long'\n                                                value={userInput.long}\n                                                onChange={handleChange}\n                                                required\n                                                min={1}\n                                                placeholder='0'\n                                                onWheel={(e) => e.target.blur()}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                    <Col md='3' >\n                                        <FormGroup>\n                                            <Label for=\"distancecover\">Distance-cover(KM)</Label>\n                                            <Input type=\"number\"\n                                                name=\"distancecover\"\n                                                id='distancecover'\n                                                value={userInput.distancecover}\n                                                onChange={handleChange}\n                                                required\n                                                min={1}\n                                                placeholder='0'\n                                                onWheel={(e) => e.target.blur()}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                            </Fragment> : null\n                        }\n\n                        </Row>\n                    </Col>\n                        </Fragment>\n                    }\n\n                    <Col md='6' >\n                        <FormGroup>\n                            <Label for=\"terms\">Terms<span style={{ color: 'red' }}>*</span></Label>\n                            <Input type=\"textarea\"\n                                name=\"terms\"\n                                id='terms'\n                                value={userInput.terms}\n                                onChange={handleChange}\n                                required\n                                placeholder='terms & conditions'\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Col md='6' >\n                        <FormGroup>\n                            <Label for=\"Description\">Description<span style={{ color: 'red' }}>*</span></Label>\n                            <Input type=\"textarea\"\n                                name=\"Description\"\n                                id='Description'\n                                value={userInput.Description}\n                                onChange={handleChange}\n                                required\n                                placeholder='Voucher Description...'\n                            />\n                        </FormGroup>\n                    </Col>\n\n                    <Col md='6' >\n                        <Label for=\"voucherImage\">Voucher Image<span style={{ color: 'red' }}>*</span></Label>\n                        <ImageUpload filePrevw={filePrevw} setFilePrevw={setFilePrevw} setFile={setFile}/>\n                    </Col>\n\n                    <Col md='6' >\n\n                        <FormGroup>\n                        <Label >Message<span style={{ color: 'red' }}>*</span> <Info size={14} id='popFocus'/></Label>\n\n                        <UncontrolledPopover trigger='click' placement='top' target='popFocus'>\n                            <PopoverHeader>Tag</PopoverHeader>\n                            <PopoverBody> {'<Voucher-Code>'} </PopoverBody>\n                        </UncontrolledPopover>\n                            \n                        <Input type=\"textarea\"\n                            name=\"Message\"\n                            id='message'\n                            value={userInput.Message}\n                            onChange={handleChange}\n                            required\n                            placeholder='Voucher purchase message...'\n                        />\n                        </FormGroup>\n                    </Col>\n\n                    <Col md='12' style={{marginTop: 20}}>\n                            <FormGroup>\n                                <CustomInput onChange={handleChangeIsCustomCode} type='switch' id='customcode' inline label='Upload-Customcode' checked={userInput.customcode}  />\n                            </FormGroup>\n                    </Col>\n                  \n                    <Col md='12'>\n                    {\n                        userInput.customcode && <UploadVoucherCustomCode setcustomcodecsvurl={setcustomcodecsvurl}/>\n                    }\n                    </Col>\n\n                    <Col md=\"12\" className='text-center'>\n                        {\n                            CreateVoucherloading ? <Button.Ripple color='primary' className='mr-1' disabled style={{ marginTop: '25px' }}>\n                                <Spinner color='white' size='sm' />\n                                <span className='ml-50'>Loading...</span>\n                            </Button.Ripple> : <Button.Ripple className='ml-2' color='primary' type=\"submit\" style={{ marginTop: '25px' }}>\n                                <span >Submit</span>\n                            </Button.Ripple>\n                        }\n                    </Col>\n                </Form>\n            </CardBody>\n        </Card>\n        </Fragment>\n    )\n}\n\nexport default CreateVoucher","import { Fragment, useState } from 'react'\nimport { toast, Slide } from 'react-toastify'\n\n    export const Error = (err) => {\n        try {\n            const e = err.response\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500 || e.status === 409) {\n                toast.error(e.data.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n            } else  {\n                toast.error('The server is under maintenance', {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                    }) \n            }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        }\n \n    }\n\n    export const ErrorMessage = (err) => {\n        try {\n        const e = err.response\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n         }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        } \n    }\n    export const Success = (response) => {\n        const message = response.data.message || 'success'\n        toast.success(message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n    }\n\n"],"sourceRoot":""}