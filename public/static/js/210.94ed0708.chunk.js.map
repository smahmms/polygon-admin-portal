{"version":3,"sources":["views/tables/data-tables/basic/AdminComponent/PollManagement/Create.js","views/viewhelper.js","views/helper.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Col.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/Label.js","../node_modules/reactstrap/es/Form.js","../node_modules/reactstrap/es/Spinner.js","@core/components/input-password-toggle/index.js"],"names":["Create","history","useHistory","groupList","setgroupList","useState","receiverGroup","setReceiverGroup","useEffect","useJwt","getCentralGroup","then","res","allGroup","q","data","payload","is_approved","push","catch","err","Error","SubmitLoading","setSubmitLoading","userInput","setUserInput","form_title","start_date","expire_date","status","effective_date","group_spec","group_id","errors","seterrors","answerTypes","value","label","polls","setPolls","answerTypeID","answerType","question","answerOptions","AddMorePoll","onchange","e","target","name","_jsx","Fragment","children","_jsxs","Form","style","width","onSubmit","preventDefault","filterExtraPolls","map","pollItem","is_multiple_choice","is_single_choice","is_dropdown","is_input","is_date_time","multiple_choice_options","single_choice_options","dropdown_options","console","log","poll_questions","useJwt2","createPoll","Success","autoComplete","Button","Ripple","className","color","tag","Link","to","ChevronLeft","size","marginRight","Card","CardHeader","CardTitle","CardBody","Row","Col","sm","FormGroup","Label","for","Input","type","id","onChange","required","placeholder","min","CustomInput","checked","Select","theme","selectThemeColors","maxMenuHeight","classNamePrefix","selected","groupId","groupType","options","d","concat","group_name","pollIndex","rows","handlePollTitleChange","updatePoll","md","handleAnstypeChange","isClearable","includes","ans","ansIndex","_Fragment","length","XCircle","onClick","removeOption","filter","x","i","cursor","marginTop","block","handleAddMoreOption","PlusCircle","Trash","disabled","Spinner","response","toast","error","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","Object","keys","success","year","month","day","hour","minute","formatReadableDate","date","Date","toLocaleDateString","getHumanReadableDate","datetime","endsWith","slice","plusIndex","indexOf","moment","format","validateEmail","email","String","toLowerCase","match","thousandSeparator","toString","replace","handle401","async","window","location","href","localStorage","clear","ExportCSV","array","CSVname","link","document","createElement","csv","result","join","forEach","item","ctr","key","convertArrayOfObjectsToCSV","userData","JSON","parse","getItem","filename","toISOString","replaceAll","setAttribute","encodeURI","click","propTypes","tagPropType","PropTypes","string","cssModule","object","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","_extends","defaultProps","innerRef","oneOfType","func","ref","rowColsPropType","number","noGutters","bool","form","xs","lg","xl","widths","colClasses","colWidth","colSize","isXs","stringOrNumberProp","columnProps","shape","order","offset","getColumnSizeClass","columnProp","isObject","_classNames","colSizeInterfix","colClass","_colClass","inverse","body","outline","node","hidden","check","htmlFor","inline","_Component","_this","call","this","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","render","_this$props","Component","role","InputPasswordToggle","hideIcon","showIcon","visible","iconSize","inputClassName","rest","inputVisibility","setInputVisibility","InputGroup","classnames","InputGroupAddon","addonType","InputGroupText","renderIcon","Eye","EyeOff"],"mappings":"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","file":"static/js/210.94ed0708.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState, useContext } from 'react'\nimport {\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft, RefreshCw, PlusCircle, X, XCircle\n} from 'react-feather'\nimport {\n    Card, CardHeader, CardTitle, Button, Alert, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink, InputGroup, InputGroupAddon, InputGroupText, CustomInput\n} from 'reactstrap'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport Select from 'react-select'\nimport { selectThemeColors, transformInToFormObject } from '@utils'\nimport { Success, Error } from '../../../../../viewhelper'\nimport { handle401 } from '../../../../../helper'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport useJwt2 from '@src/auth/jwt/useJwt2'\nimport { Link, useHistory } from 'react-router-dom'\n\nconst Create = () => {\n    const history = useHistory()\n    const [groupList, setgroupList] = useState([])\n    const [receiverGroup, setReceiverGroup] = useState({})\n\n    useEffect(() => {\n        useJwt.getCentralGroup().then(res => {\n            //console.log(res)\n            const allGroup = []\n            for (const q of res.data.payload) {\n                if (q.is_approved) {\n                    allGroup.push(q)\n                }\n            }\n            setgroupList(allGroup)\n        }).catch(err => {\n            Error(err)\n            //console.log(err.response)\n        })\n    }, [])\n\n    const [SubmitLoading, setSubmitLoading] = useState(false)\n    // useEffect(() => {\n\n    // }, [])\n    const [userInput, setUserInput] = useState({\n        form_title: \"\",\n        start_date: \"\",\n        expire_date: \"\",\n        status: true,\n        effective_date: \"\",\n        group_spec: false,\n        group_id: null\n    })\n\n    const [errors, seterrors] = useState([])\n    const answerTypes = [\n        { value: 1, label: 'Radio' },\n        { value: 2, label: 'Checkbox' },\n        { value: 3, label: 'Drop Down' },\n        { value: 5, label: 'Date & Time' },\n        { value: 4, label: 'Short Answer' }\n    ]\n    const [polls, setPolls] = useState([\n        {\n            answerTypeID: 1,\n            answerType: 'Radio',\n            question: '',\n            answerOptions: ['', '', '']\n        }\n    ])\n\n    const handleAnstypeChange = (selected, pollIndex) => {\n        const updatePoll = [...polls]\n        updatePoll[pollIndex] = { ...updatePoll[pollIndex], answerTypeID: selected.value, answerType: selected.label }\n        setPolls(updatePoll)\n    }\n    const handlePollTitleChange = (e, pollIndex) => {\n        const updatePoll = [...polls]\n        updatePoll[pollIndex] = { ...updatePoll[pollIndex], question: e.target.value }\n        setPolls(updatePoll)\n    }\n    const AddMorePoll = () => {\n        setPolls([...polls, { answerTypeID: 1, answerType: 'Radio', question: '', answerOptions: ['', '', ''] }])\n    }\n    const handleAddMoreOption = (pollIndex) => {\n        const updatePoll = [...polls]\n        updatePoll[pollIndex] = { ...updatePoll[pollIndex], answerOptions: [...updatePoll[pollIndex].answerOptions, ''] }\n        setPolls(updatePoll)\n    }\n    const removeOption = (pollIndex, ansIndex) => {\n        const updatePoll = [...polls]\n        updatePoll[pollIndex] = { ...updatePoll[pollIndex], answerOptions: updatePoll[pollIndex].answerOptions.filter((x, i) => i !== ansIndex) }\n        setPolls(updatePoll)\n    }\n\n\n    const onchange = (e) => {\n        setUserInput({ ...userInput, [e.target.name]: e.target.value })\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const { form_title, start_date, expire_date, status, effective_date, group_id, group_spec } = userInput\n        const copyPolls = [...polls]\n        const modifyPolls = copyPolls.map(pollItem => {\n            return {\n                ...pollItem,\n                is_multiple_choice: pollItem.answerTypeID === 2,\n                is_single_choice: pollItem.answerTypeID === 1,\n                is_dropdown: pollItem.answerTypeID === 3,\n                is_input: pollItem.answerTypeID === 4,\n                is_date_time: pollItem.answerTypeID === 5,\n                multiple_choice_options: pollItem.answerTypeID === 2 ? pollItem.answerOptions : [],\n                single_choice_options: pollItem.answerTypeID === 1 ? pollItem.answerOptions : [],\n                dropdown_options: pollItem.answerTypeID === 3 ? pollItem.answerOptions : []\n            }\n        })\n        const filterExtraPolls = modifyPolls.map(pollItem => {\n            delete pollItem.answerTypeID\n            delete pollItem.answerType\n            delete pollItem.answerOptions\n            return { ...pollItem }\n        })\n        console.log({\n            form_title, start_date, expire_date, status, effective_date, poll_questions: filterExtraPolls, group_id : group_spec ? group_id : null\n        })\n\n        setSubmitLoading(true)\n        useJwt2.createPoll({ form_title, start_date: effective_date, expire_date, status, effective_date, poll_questions: filterExtraPolls, group_id : group_spec ? group_id : null }).then(res => {\n            setSubmitLoading(false)\n            Success(res)\n            //console.log(res)\n            history.push('/AllPolls')\n        }).catch(err => {\n            setSubmitLoading(false)\n            //console.log(err.response)\n            Error(err)\n        })\n    }\n    return (\n        <Fragment>\n            <Form style={{ width: '100%' }} onSubmit={onSubmit} autoComplete=\"off\">\n                <Button.Ripple className='mb-1' color='primary' tag={Link} to='/AllPolls' >\n                    <div className='d-flex align-items-center'>\n                            <ChevronLeft size={17} style={{marginRight:'5px'}}/>\n                            <span >Back</span>\n                    </div>\n                </Button.Ripple>\n                <Card>\n                    <CardHeader className='border-bottom'>\n                        <CardTitle tag='h4'>Create New Poll</CardTitle>\n                    </CardHeader>\n                    <CardBody>\n                        <Row className=\"pt-1\" >\n                            <Col sm=\"6\" >\n                                <FormGroup>\n                                    <Label for=\"form_title\">Form Title<span style={{ color: 'red' }}>*</span></Label>\n                                    <Input type=\"text\"\n                                        name=\"form_title\"\n                                        id='form_title'\n                                        value={userInput.form_title}\n                                        onChange={onchange}\n                                        required\n                                        placeholder=\"Form title here....\"\n                                    />\n                                </FormGroup>\n                            </Col>\n                            <Col sm=\"3\" >\n                                <FormGroup>\n                                    <Label for=\"effective_date\">Effective Date<span style={{ color: 'red' }}>*</span></Label>\n                                    <Input type=\"datetime-local\"\n                                        name=\"effective_date\"\n                                        id='effective_date'\n                                        value={userInput.effective_date}\n                                        onChange={onchange}\n                                        required\n                                        placeholder=\"Jhon@123\"\n                                    />\n                                </FormGroup>\n                            </Col>\n                            <Col sm=\"3\" >\n                                <FormGroup>\n                                    <Label for=\"expire_date\">Expire Date<span style={{ color: 'red' }}>*</span></Label>\n                                    <Input type=\"datetime-local\"\n                                        name=\"expire_date\"\n                                        id='expire_date'\n                                        min={userInput.effective_date}\n                                        value={userInput.expire_date}\n                                        onChange={onchange}\n                                        required\n                                        placeholder=\"Jhon@123\"\n                                    />\n                                </FormGroup>\n                            </Col>\n                            <Col sm='4' className='mt-1'>\n                                <CustomInput\n                                        type='switch'\n                                        id='group_spec'\n                                        name='group_spec'\n                                        label='Group Specific'\n                                        onChange={(e) => {\n                                                if (e.target.checked) { \n                                                    setUserInput({ ...userInput, group_spec: true })\n                                                } else {\n                                                    setUserInput({ ...userInput, group_spec: false})\n                                                }\n                                            }\n                                        }\n                                    />\n                            </Col>\n                            {\n                                userInput.group_spec && <Col sm=\"4\" >\n                                <FormGroup>\n                                    <Label for=\"Businesses\">Group<span style={{ color: 'red' }}>*</span></Label>\n                                    <Select\n                                        theme={selectThemeColors}\n                                        maxMenuHeight={200}\n                                        className='react-select'\n                                        classNamePrefix='select'\n                                        onChange={(selected) => {\n                                            setReceiverGroup({ groupId: selected.value.id, groupType: selected.value.type})\n                                            setUserInput({ ...userInput, group_id: selected.value.id })\n                                        }}\n                                        options={groupList?.map(d => { return {value: {id: d.id, type: d.type}, label: `${d.id}. ${d.group_name}`} })}\n                                    />\n                                </FormGroup>\n                                </Col>\n                            }\n                        </Row>\n                    </CardBody>\n                </Card>\n                {polls.map((pollItem, pollIndex) => <Card key={pollIndex + 5456} className='react-slidedown'>\n                    <CardBody>\n                        <Row>\n                            <Col sm=\"8\" >\n                                <FormGroup>\n                                    <Label for=\"question\">Question</Label>\n                                    <Input type=\"text\"\n                                        name=\"question\"\n                                        id='question'\n                                        rows={1}\n                                        value={pollItem.question}\n                                        onChange={(e) => handlePollTitleChange(e, pollIndex)}\n                                        required\n                                        placeholder=\"What do you want to ask?\"\n                                    />\n                                </FormGroup>\n                            </Col>\n                            <Col md='4' >\n                                <Label>Answer Type</Label>\n                                <Select\n                                    theme={selectThemeColors}\n                                    className='react-select'\n                                    classNamePrefix='select'\n                                    onChange={(selected) => handleAnstypeChange(selected, pollIndex)}\n                                    value={{ label: pollItem.answerType, value: pollItem.answerTypeID }}\n                                    options={answerTypes}\n                                    isClearable={false}\n                                />\n                            </Col>\n\n                            {[1, 2, 3].includes(pollItem.answerTypeID) && <Col md='12'>\n                                <b className=' mb-1'> {pollItem.answerType} Answer Type Options : </b>\n                                <Row>\n                                    {\n                                        pollItem.answerOptions.map((ans, ansIndex) => <Col md='3' key={ansIndex}>\n                                            <FormGroup>\n                                                <Label for=\"FormTitle\">{`Option ${ansIndex + 1}`}</Label>\n                                                <div className=\"d-flex align-items-center\">\n                                                    <Input type=\"text\"\n                                                        name={`option${ansIndex}`}\n                                                        id={ansIndex + 654156465}\n                                                        value={ans}\n                                                        onChange={e => {\n                                                            const updatePoll = [...polls]\n                                                            updatePoll[pollIndex].answerOptions[ansIndex] = e.target.value\n                                                            setPolls(updatePoll)\n                                                        }}\n                                                        required\n                                                        placeholder=\"option...\"\n                                                    />&nbsp;<>\n                                                        {\n                                                            pollItem.answerOptions.length > 1 && <XCircle color='crimson' size={20} onClick={() => removeOption(pollIndex, ansIndex)} style={{ cursor: 'pointer' }} />\n                                                        }\n                                                    </>\n                                                </div>\n                                            </FormGroup>\n                                        </Col>)\n                                    }\n                                    <Col md='3'>\n                                        <Button.Ripple className='bg-white border' style={{ marginTop: '24px' }} block color='light' onClick={() => handleAddMoreOption(pollIndex)}>\n                                            <span >Add option</span>\n                                        </Button.Ripple>\n                                    </Col>\n                                </Row>\n                            </Col>}\n                        </Row>\n                        <hr />\n                        <div className=\"text-right\">\n                            {(polls.length - 1) === pollIndex && <Button.Ripple color='info' size='sm' onClick={AddMorePoll}>\n                                <PlusCircle color='white' size={12} style={{ marginTop: '-3px' }} />&nbsp;<span >Add More</span>\n                            </Button.Ripple>}\n                            {polls.length > 1 && <Button.Ripple color='danger' size='sm' className='ml-1' onClick={() => setPolls(polls.filter((x, i) => i !== pollIndex))}>\n                                <Trash color='white' size={12} style={{ marginTop: '-3px' }} />\n                            </Button.Ripple>}\n                        </div>\n                    </CardBody>\n                </Card>)}\n\n                <Card >\n                    <CardBody className='pt-0'>\n                        <Row>\n                            <Col sm=\"12\" className='text-center'>\n                                {\n                                    SubmitLoading ? <Button.Ripple color='primary' className='mr-1' disabled style={{ marginTop: '25px' }}>\n                                        <Spinner color='white' size='sm' />\n                                        <span className='ml-50'>Loading...</span>\n                                    </Button.Ripple> : <Button.Ripple className='ml-2' color='primary' type=\"submit\" style={{ marginTop: '25px' }}>\n                                        <span >Submit</span>\n                                    </Button.Ripple>\n                                }\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Form>\n        </Fragment >\n    )\n}\n\n\nexport default Create","import { Fragment, useState } from 'react'\nimport { toast, Slide } from 'react-toastify'\n\n    export const Error = (err) => {\n        try {\n            const e = err.response\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500 || e.status === 409) {\n                toast.error(e.data.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n            } else  {\n                toast.error('The server is under maintenance', {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                    }) \n            }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        }\n \n    }\n\n    export const ErrorMessage = (err) => {\n        try {\n        const e = err.response\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n         }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        } \n    }\n    export const Success = (response) => {\n        const message = response.data.message || 'success'\n        toast.success(message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n    }\n\n","import moment from 'moment'\n\n//Ex-> '1234567891' to '1234 567 891'\nexport const FormatePhoneNo = (phone) => {\n    const phonenoinstring = String(phone)\n    return phonenoinstring.replace(/^(.{4})(.*)(.{3})$/, '$1 $2 $3')\n}\n\nconst options = { year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' }\n\nexport const formatReadableDate = (date) => { return (new Date(date)).toLocaleDateString(undefined, options) }\n\nexport const getHumanReadableDate = (datetime) => { \n    // let datetime = '2024-06-18T23:25:06.754Z'\n    // let datetime = '2024-07-25 00:05:57.358246+06'\n\n    // Remove the 'Z' at the end if it exists\n    if (datetime.endsWith('Z')) {\n        datetime = datetime.slice(0, -1)\n    }\n    // Find the position of the '+' sign\n    const plusIndex = datetime.indexOf('+')\n\n    // Remove the time zone offset if it exists\n    if (plusIndex !== -1) {\n        datetime = datetime.slice(0, plusIndex)\n    }\n\n    return moment(datetime).format('MMMM D, YYYY [at] h:mm A')\n }\n\nexport const validateEmail = (email) => {\n    return String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)\n}\n\nexport const thousandSeparator = (x) => { return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") }\n\nexport const handle401 = async (status) => {\n    if (status === 401) {\n        window.location.href = '/Adminlogin'\n        await localStorage.clear()\n    }\n}\n\nexport const ExportCSV = (array, keys, CSVname) => {\n    // ** Downloads CSV\n    // const keys = ['name', 'email', 'mobile']\n    // ** Converts table to CSV\n    function convertArrayOfObjectsToCSV(array) {\n        let result\n        const columnDelimiter = ','\n        const lineDelimiter = '\\n'\n        result = ''\n        result += keys.join(columnDelimiter)\n        result += lineDelimiter\n\n        array.forEach(item => {\n            let ctr = 0\n            keys.forEach(key => {\n                if (ctr > 0) result += columnDelimiter\n                result += item[key]\n                ctr++\n            })\n            result += lineDelimiter\n        })\n        return result\n    }\n    const link = document.createElement('a')\n    let csv = convertArrayOfObjectsToCSV(array)\n    if (csv === null) return\n    const userData = JSON.parse(localStorage.getItem('userData'))\n    const filename = `${CSVname}_${new Date().toISOString()}_${userData['fullname'].replaceAll(/\\s/g, '')}.csv`\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n        csv = `data:text/csv;charset=utf-8,${csv}`\n    }\n\n    link.setAttribute('href', encodeURI(csv))\n    link.setAttribute('download', filename)\n    link.click()\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label, inputClassName } from 'reactstrap'\n\nconst InputPasswordToggle = props => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\n      <InputGroup\n        className={classnames({\n          [className]: className\n        })}\n      >\n        <Input\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\n          <InputGroupText className='cursor-pointer'>{renderIcon()}</InputGroupText>\n        </InputGroupAddon>\n      </InputGroup>\n    </Fragment>\n  )\n}\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName, componentName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName, componentName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n"],"sourceRoot":""}