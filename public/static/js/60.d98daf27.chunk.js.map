{"version":3,"sources":["views/tables/data-tables/basic/AdminComponent/ADManagement/CreateAd.js","views/viewhelper.js"],"names":["CreateAD","userData","JSON","parse","localStorage","getItem","isRtl","setIsRtl","useRTL","history","useHistory","ruleRef","useRef","catRef","campRef","campaignList","setcampaignList","useState","pointRuleloading","setPointRuleloading","file","setFile","adRuleList","setAdRuleList","filePrevw","setFilePrevw","resetData","setReset","businesscategorylist","setbusinesscategorylist","subCategory","setSubCategory","userInput","setUserInput","title","body","thumbnail_height","thumbnail_width","fb_adset_id","image_hash","link_url","image_url","image","effective_instagram_media_id","is_fb_page_post","fb_page_post_category_ids","facebookpage_subcategory_localuids","handleChange","e","target","name","value","useEffect","async","useJwt","then","res","allAdRule","q","data","payload","is_approved","push","map","ar","id","label","rule_name","catch","err","Error","setItem","_err$response","response","status","getBMStoken","username","BMS_USER","password","BMS_PASS","jwtToken","getFbpageCategory","item","uid","subcategory","callApi","_jsxs","Fragment","children","_jsx","Button","Ripple","className","color","tag","Link","to","role","ChevronLeft","size","style","marginRight","Form","width","onSubmit","preventDefault","campaign_id","formData1","FormData","append","singleFileupload","createAd","Success","error","console","log","autoComplete","Row","Col","sm","Card","CardBody","FormGroup","Label","for","Input","type","onChange","required","placeholder","rows","Select","ref","theme","selectThemeColors","maxMenuHeight","classNamePrefix","selected","options","menuPlacement","opacity","height","onFocus","current","select","focus","x","campaignName","CustomInput","checked","md","length","sub_c_arr","ii","c","handleChangeFBCategory","isMulti","isClearable","Spinner","handleChangeFBSubCategory","CardHeader","CardTitle","paddingTop","border","backgroundColor","Plus","position","left","top","cursor","accept","files","URL","createObjectURL","formData","getImageHash","hashData","f","images","hash","src","alt","disabled","toast","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","errors","Object","keys","success"],"mappings":"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","file":"static/js/60.d98daf27.chunk.js","sourcesContent":["import { useRTL } from '@hooks/useRTL'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport '@styles/react/libs/noui-slider/noui-slider.scss'\nimport { selectThemeColors } from '@utils'\nimport React, { Fragment, useEffect, useRef, useState } from 'react'\nimport { ChevronLeft, Plus } from 'react-feather'\nimport 'react-rangeslider/lib/index.css'\nimport { Link, useHistory } from 'react-router-dom'\nimport Select from 'react-select'\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, CustomInput, Form, FormGroup, Input, Label, Row, Spinner } from 'reactstrap'\nimport { BMS_PASS, BMS_USER } from '../../../../../../Configurables'\nimport { Error, Success } from '../../../../../viewhelper'\n\nconst CreateAD = () => {\n    const userData = JSON.parse(localStorage.getItem('userData'))\n    const [isRtl, setIsRtl] = useRTL()\n    const history = useHistory()\n    const ruleRef = useRef()\n    const catRef = useRef()\n    const campRef = useRef()\n    const [campaignList, setcampaignList] = useState([])\n    const [pointRuleloading, setPointRuleloading] = useState(false)\n    const [file, setFile] = useState(null)\n    const [adRuleList, setAdRuleList] = useState([])\n    const [filePrevw, setFilePrevw] = useState(null)\n    const [resetData, setReset] = useState(true)\n    const [businesscategorylist, setbusinesscategorylist] = useState([])\n    const [subCategory, setSubCategory] = useState([])\n\n    const [userInput, setUserInput] = useState({\n        title: '',\n        body: '',\n        thumbnail_height: 0,\n        thumbnail_width: 0,\n        fb_adset_id: '',\n        image_hash: '',\n        link_url: '',\n        image_url: '',\n        image: '',\n        effective_instagram_media_id: '',\n        is_fb_page_post: false,\n        fb_page_post_category_ids: [],\n        facebookpage_subcategory_localuids: []\n    })\n    const handleChange = (e) => {\n        setUserInput({ ...userInput, [e.target.name]: e.target.value })\n    }\n    useEffect(() => {\n        const callApi = async () => {\n            await useJwt.adRuleList().then(res => {\n                //console.log(res)\n                const allAdRule = []\n                for (const q of res.data.payload) {\n                    if (q.is_approved === true) {\n                        allAdRule.push(q)\n                    }\n                }\n                setAdRuleList(allAdRule.map(ar => { return { value: ar.id, label: ar.rule_name } }))\n            }).catch(err => {\n                Error(err)\n                //console.log(err)\n            })\n            localStorage.setItem('usePMStoken', false) //for token management\n            localStorage.setItem('useBMStoken', true)\n            await useJwt.campaignList().then(res => {\n                // console.log('campaignList', res)\n                setcampaignList(res.data)\n                localStorage.setItem('useBMStoken', false)\n            }).catch(err => {\n                if (err.response?.status === 401) {\n                    localStorage.setItem(\"BMSCall\", true)\n                    useJwt.getBMStoken({ username: BMS_USER, password: BMS_PASS }).then(res => {\n                        localStorage.setItem('BMStoken', res.data.jwtToken)\n                        localStorage.setItem(\"BMSCall\", false)\n                        setReset(!resetData)\n                    }).catch(err => {\n                        localStorage.setItem(\"BMSCall\", false)\n                        //console.log(err)\n                    })\n                } else {\n                    Error(err)\n                    //console.log(err)\n                    localStorage.setItem('useBMStoken', false)\n                }\n            })\n            localStorage.setItem('usePMStoken', false) //for token management\n            localStorage.setItem('useBMStoken', false)\n            useJwt.getFbpageCategory().then(res => {\n                setbusinesscategorylist(res.data.payload.map(item => { return { value: {id: item.uid, subcategory: item.subcategory }, label: item?.name } }))\n            }).catch(err => {\n                //console.log(err.response)\n                Error(err)\n            })\n        }\n        callApi()\n    }, [resetData])\n    const getImageHash = (file) => {\n        setPointRuleloading(true)\n        const formData = new FormData()\n        formData.append('filename', file)\n        useJwt.getImageHash(formData).then(res => {\n            let hashData\n            for (const f in res.data.payload.images) {\n                hashData = res.data.payload.images[f].hash\n            }\n            // console.log('ImageHash', res)\n            setUserInput({\n                ...userInput, image_hash: hashData\n            })\n            // Success(res)\n            setPointRuleloading(false)\n        }).catch(err => {\n            Error(err)\n            //console.log(err)\n            setPointRuleloading(false)\n        })\n    }\n    const handleChangeFBCategory = (selected) => {\n        const dataPush = [], fb_page_post_category_ids = []\n        // console.log('selected ', selected)\n        // if (selected.length && selected[selected.length - 1].value.subcategory) {\n        //     selected.map(item => {\n        //         item.value.subcategory.map(item2 => {\n        //             dataPush.push(item2)\n        //         })\n        //         fb_page_post_category_ids.push(item.value.id)\n        //     })\n        // }\n\n        if (selected.length === 0) {\n            setSubCategory([])\n            setUserInput({...userInput, fb_page_post_category_ids: []})\n\n        } else {\n            // setSubCategory(dataPush.length ? dataPush : subCategory)\n            const sub_c_arr = []\n            for (const ii of selected) {\n                for (const c of ii.value.subcategory) {\n                    sub_c_arr.push(c)\n                }\n            }\n            setSubCategory(sub_c_arr)\n            setUserInput({...userInput, fb_page_post_category_ids: selected.map(ii => ii.value.id)})\n        }\n       \n    }\n\n    const handleChangeFBSubCategory = (selected) => {\n        setUserInput({...userInput, facebookpage_subcategory_localuids: selected.map(item => item.value)})\n    }\n    const onSubmit = (e) => {\n        e.preventDefault()\n        setPointRuleloading(true)\n        const { title, body, thumbnail_height, thumbnail_width, fb_adset_id, link_url, image_url, image, effective_instagram_media_id, image_hash, campaign_id, is_fb_page_post, fb_page_post_category_ids, facebookpage_subcategory_localuids } = userInput\n        // console.log({ title, body, thumbnail_height, thumbnail_width, fb_adset_id, link_url, image_url, image, effective_instagram_media_id, image_hash, campaign_id, is_fb_page_post, fb_page_post_category_ids, facebookpage_subcategory_localuids })\n        // return 0\n        const formData1 = new FormData()\n        formData1.append('image', file)\n\n        useJwt.singleFileupload(formData1).then(async res => {\n            //console.log(res)\n            await useJwt.createAd({ title, body, thumbnail_height, thumbnail_width, fb_adset_id, link_url, image_url, image: await res.data.payload.image_url, effective_instagram_media_id, image_hash, campaign_id, is_fb_page_post, fb_page_post_category_ids, facebookpage_subcategory_localuids }).then((response) => {\n                setPointRuleloading(false)\n                Success(response)\n                // console.log(response)\n                history.push(userData?.role === 'vendor' ? '/adlistVendor' : '/adlist')\n            }).catch((error) => {\n                setPointRuleloading(false)\n                Error(error)\n                console.log(error.response)\n            })\n        }).catch(e => {\n            console.log(e.response)\n            setPointRuleloading(false)\n        })\n    }\n\n    return (\n        <Fragment>\n            <Button.Ripple className='mb-1' color='primary' tag={Link} to={userData?.role === 'vendor' ? '/adlistVendor' : '/adlist'} >\n                <div className='d-flex align-items-center'>\n                    <ChevronLeft size={17} style={{ marginRight: '5px' }} />\n                    <span >Back</span>\n                </div>\n            </Button.Ripple>\n            <Form style={{ width: '100%' }} onSubmit={onSubmit} autoComplete=\"off\">\n                <h4 className='m-1'>AD Info</h4>\n                <Row className='match-height'>\n                    <Col sm='6'>\n                        <Card>\n                            <CardBody>\n                                <Row>\n                                    <Col sm=\"12\" >\n                                        <FormGroup>\n                                            <Label for=\"title\">Title<span className='text-danger'>*</span></Label>\n                                            <Input type=\"text\"\n                                                name=\"title\"\n                                                id='title'\n                                                value={userInput.title}\n                                                onChange={handleChange}\n                                                required\n                                                placeholder=\"title here...\"\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                    <Col sm=\"12\" >\n                                        <FormGroup>\n                                            <Label for=\"body\">Body<span className='text-danger'>*</span></Label>\n                                            <Input type=\"textarea\"\n                                                rows=\"4\"\n                                                name=\"body\"\n                                                id='body'\n                                                value={userInput.body}\n                                                onChange={handleChange}\n                                                required\n                                                placeholder=\"body\"\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                    <Col sm='6'>\n                        <Card>\n                            <CardBody>\n                                <Row>\n                                    {/* <Col sm=\"12\" >\n                                        <FormGroup>\n                                            <Label for=\"effective_instagram_media_id\">Effective Instagram Media ID<span className='text-danger'>*</span></Label>\n                                            <Input type=\"text\"\n                                                name=\"effective_instagram_media_id\"\n                                                id='effective_instagram_media_id'\n                                                value={userInput.effective_instagram_media_id}\n                                                onChange={handleChange}\n                                                required\n                                                placeholder=\"effective instagram media id\"\n                                            />\n                                        </FormGroup>\n                                    </Col> */}\n                                    <Col sm=\"12\" >\n                                        <FormGroup>\n                                            <Label for=\"type\">AD Rule<span style={{ color: 'red' }}>*</span></Label>\n                                            <Select\n                                                ref={ruleRef}\n                                                theme={selectThemeColors}\n                                                maxMenuHeight={200}\n                                                className='react-select'\n                                                classNamePrefix='select'\n                                                onChange={(selected) => {\n                                                    setUserInput({ ...userInput, fb_adset_id: selected.value })\n                                                }}\n                                                options={adRuleList}\n                                                menuPlacement='auto'\n                                            />\n                                        </FormGroup>\n                                        <Input\n                                            required\n                                            style={{\n                                                opacity: 0,\n                                                width: \"100%\",\n                                                height: 0\n                                                // position: \"absolute\"\n                                            }}\n                                            onFocus={e => ruleRef.current.select.focus()}\n                                            value={userInput.fb_adset_id || ''}\n                                            onChange={e => ''}\n                                        />\n                                    </Col>\n                                    <Col sm=\"12\" >\n                                        <FormGroup>\n                                            <Label for=\"type\">Select Campaign<span style={{ color: 'red' }}>*</span></Label>\n                                            <Select\n                                                ref={campRef}\n                                                theme={selectThemeColors}\n                                                maxMenuHeight={200}\n                                                className='react-select'\n                                                classNamePrefix='select'\n                                                onChange={(selected) => {\n                                                    setUserInput({ ...userInput, campaign_id: selected.value })\n                                                }}\n                                                options={campaignList.map(x => { return { value: x.id, label: x.campaignName } })}\n                                                menuPlacement='auto'\n                                            />\n                                        </FormGroup>\n                                        <Input\n                                            required\n                                            style={{\n                                                opacity: 0,\n                                                width: \"100%\",\n                                                height: 0\n                                                // position: \"absolute\"\n                                            }}\n                                            onFocus={e => campRef.current.select.focus()}\n                                            value={userInput.campaign_id || ''}\n                                            onChange={e => ''}\n                                        />\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                        </Card>`\n                    </Col>\n                </Row>\n                <Card>\n                    <CardBody>\n                        <Row>\n                            <Col sm=\"4\" >\n                                <FormGroup>\n                                    <CustomInput type='switch' onChange={(e) => {\n                                        if (e.target.checked) {\n                                            setUserInput({...userInput, is_fb_page_post: true})\n                                        } else {\n                                            setUserInput({...userInput, is_fb_page_post: false})\n                                            setSubCategory([])\n                                        }\n                                    }\n                                    } id='is_fb_page_post' label='Is Facebook Page Post?' checked={userInput.is_fb_page_post}/>\n                                </FormGroup>\n                            </Col>\n                            {\n                                userInput.is_fb_page_post && <Col md='4' sm='6'>\n                                <FormGroup>\n                                    <Label for='fb_page_post_category_ids'>Facebook Page Category <span style={{ color: 'red' }}>*</span></Label>\n                                    {\n                                        businesscategorylist.length ? <Select\n                                            ref={catRef}\n                                            theme={selectThemeColors}\n                                            className='basic-multi-select'\n                                            classNamePrefix='select'\n                                            name=\"businesscategories\"\n                                            // defaultValue={businesscategorylist[0]}\n                                            options={businesscategorylist}\n                                            onChange={(selected) => handleChangeFBCategory(selected)}\n                                            isMulti\n                                            isClearable={false}\n                                        \n                                        /> : <Spinner color='primary' />\n                                    }\n                                    <Input\n                                        required\n                                        style={{\n                                            opacity: 0,\n                                            width: \"100%\",\n                                            height: 0\n                                            // position: \"absolute\"\n                                        }}\n                                        onFocus={e => catRef.current.select.focus()}\n                                        value={userInput.fb_page_post_category_ids || ''}\n                                        onChange={e => ''}\n                                    />\n                                </FormGroup>\n                            </Col>\n                            }\n                            {\n                                (subCategory?.length !== 0) && <Col sm=\"4\" >\n                                <FormGroup>\n                                    <Label for=\"facebookpage_subcategory_localuid\">Facebook Page Sub Category</Label>\n                                    <Select\n                                        theme={selectThemeColors}\n                                        maxMenuHeight={200}\n                                        className='react-select'\n                                        classNamePrefix='select'\n                                        onChange={(selected) => handleChangeFBSubCategory(selected)}\n                                        isMulti\n                                        isClearable={false}\n                                        options={subCategory?.map(item => { return { value: item.uid, label: item.name } })}\n                                        \n                                    />\n                                </FormGroup>\n                            </Col>\n                            }\n                        </Row>\n                    </CardBody>\n                </Card>\n                <Card>\n                    <CardHeader className='border-bottom'>\n                        <CardTitle tag='h4'>Image info</CardTitle>\n                    </CardHeader>\n                    <CardBody style={{ paddingTop: '15px' }}>\n                        <Row>\n                            <Col sm=\"6\" >\n                                <FormGroup>\n                                    <Label for=\"thumbnail_height\">Thumbnail Height</Label>\n                                    <Input type=\"number\"\n                                        name=\"thumbnail_height\"\n                                        id='thumbnail_height'\n                                        value={userInput.thumbnail_height}\n                                        onChange={handleChange}\n                                        // required\n                                        placeholder=\"thumbnail height here...\"\n                                    />\n                                </FormGroup>\n                            </Col>\n                            <Col sm=\"6\" >\n                                <FormGroup>\n                                    <Label for=\"thumbnail_width\">Thumbnail Width</Label>\n                                    <Input type=\"number\"\n                                        name=\"thumbnail_width\"\n                                        id='thumbnail_width'\n                                        value={userInput.thumbnail_width}\n                                        onChange={handleChange}\n                                        // required\n                                        placeholder=\"thumbnail width here...\"\n                                    />\n                                </FormGroup>\n                            </Col>\n                            <Col sm=\"6\" >\n                                <FormGroup>\n                                    <Label for=\"link_url\">Link URL</Label>\n                                    <Input type=\"text\"\n                                        name=\"link_url\"\n                                        id='link_url'\n                                        value={userInput.link_url}\n                                        onChange={handleChange}\n                                        // required\n                                        placeholder=\"link url\"\n                                    />\n                                </FormGroup>\n                            </Col>\n                            <Col sm=\"6\" >\n                                <FormGroup>\n                                    <Label for=\"image_url\">Image URL</Label>\n                                    <Input type=\"text\"\n                                        name=\"image_url\"\n                                        id='image_url'\n                                        value={userInput.image_url}\n                                        onChange={handleChange}\n                                        // required\n                                        placeholder=\"image url\"\n                                    />\n                                </FormGroup>\n                            </Col>\n                            <Col md='12' className='mb-2'>\n                                <Label for=\"voucherImage\">Upload Image</Label>\n                                <div className='d-flex'>\n                                    <div className=\"file position-relative overflow-hidden mr-2\">\n                                        <div className='text-center p-1' style={{\n                                            height: '102px',\n                                            width: '102px',\n                                            border: '1px dashed #d9d9d9',\n                                            backgroundColor: \"#fafafa\"\n                                        }}>\n                                            <span ><Plus size={20} className='my-1' /></span> <br />\n                                            <span>Upload</span>\n                                        </div>\n                                        <Input\n                                            // style={{ width: '300px' }}\n                                            style={{\n                                                position: 'absolute',\n                                                opacity: '0',\n                                                left: '0',\n                                                top: '0',\n                                                height: '102px',\n                                                width: '102px',\n                                                cursor: 'pointer'\n                                            }}\n                                            type=\"file\"\n                                            accept=\"image/png, image/jpeg\"\n                                            required\n                                            name=\"voucherImage\"\n                                            id='voucherImage'\n                                            onChange={e => {\n                                                if (e.target.files.length !== 0) {\n                                                    setFilePrevw(URL.createObjectURL(e.target.files[0]))\n                                                }\n                                                setFile(e.target.files[0])\n                                                getImageHash(e.target.files[0])\n                                            }}\n                                        />\n                                    </div>\n                                    {filePrevw && <img src={filePrevw} alt='voucher img' height='100px'></img>}\n                                </div>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n                <Card>\n                    <CardBody>\n                        <Row>\n                            <Col sm=\"12\" className='text-center'>\n                                {\n                                    pointRuleloading ? <Button.Ripple color='primary' className='mr-1' disabled>\n                                        <Spinner color='white' size='sm' />\n                                        <span className='ml-50'>Loading...</span>\n                                    </Button.Ripple> : <Button.Ripple className='ml-2' color='primary' type=\"submit\">\n                                        <span >Submit</span>\n                                    </Button.Ripple>\n                                }\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n            </Form>\n        </Fragment>\n    )\n}\n\nexport default CreateAD","import { Fragment, useState } from 'react'\nimport { toast, Slide } from 'react-toastify'\n\n    export const Error = (err) => {\n        try {\n            const e = err.response\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500 || e.status === 409) {\n                toast.error(e.data.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n            } else  {\n                toast.error('The server is under maintenance', {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                    }) \n            }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        }\n \n    }\n\n    export const ErrorMessage = (err) => {\n        try {\n        const e = err.response\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n         }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        } \n    }\n    export const Success = (response) => {\n        const message = response.data.message || 'success'\n        toast.success(message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n    }\n\n"],"sourceRoot":""}