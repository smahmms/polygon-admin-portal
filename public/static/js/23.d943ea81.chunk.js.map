{"version":3,"sources":["views/apps/email/MailCard.js","views/apps/email/MailDetails.js","views/apps/email/ComposePopup.js","views/apps/email/Mails.js","views/apps/email/Sidebar.js","views/apps/email/store/actions/index.js","views/apps/email/index.js"],"names":["MailCard","props","mail","dispatch","selectMail","labelColors","updateMails","selectedMails","handleMailClick","handleMailReadUpdate","formatDateToMonthShort","_jsxs","Media","tag","onClick","id","className","classnames","isRead","children","_jsx","Avatar","img","from","avatar","type","concat","name","checked","includes","onChange","e","stopPropagation","htmlFor","isStarred","Star","size","favorite","body","subject","attachments","length","Paperclip","arr","map","label","renderLabels","labels","time","htmlToString","message","MailDetails","openMail","setOpenMail","paginateMail","handleMailToTrash","handleFolderUpdate","handleLabelsUpdate","showReplies","setShowReplies","useState","renderMessage","obj","Card","CardHeader","imgHeight","imgWidth","UncontrolledDropdown","DropdownToggle","caret","email","DropdownMenu","Table","borderless","to","formatDate","MoreVertical","right","DropdownItem","CornerUpLeft","CornerUpRight","Trash2","CardBody","dangerouslySetInnerHTML","__html","CardFooter","item","index","href","preventDefault","src","thumbnail","alt","fileName","width","handleGoBack","handleFolderClick","folder","show","undefined","Fragment","ChevronLeft","Folder","Edit2","Info","Trash","Tag","handleReadClick","Mail","hasPreviousMail","hasNextMail","ChevronRight","PerfectScrollbar","options","wheelPropagation","Row","Col","sm","Badge","color","pill","replies","renderReplies","ComposePopup","skin","setSkin","useSkin","composeOpen","toggleCompose","ccOpen","setCCOpen","bccOpen","setBCCOpen","selectOptions","value","img1","img2","img3","img4","img5","img6","SelectComponent","_ref","data","components","Option","toggleCC","toggleBCC","togglePopUp","Modal","scrollable","fade","container","isOpen","backdrop","contentClassName","toggle","modalClassName","Minus","Maximize2","X","ModalBody","Form","onSubmit","Label","for","Select","isMulti","isClearable","theme","selectThemeColors","classNamePrefix","Input","placeholder","Editor","editorClassName","toolbarClassName","wrapperClassName","toolbar","inline","inDropdown","UncontrolledButtonDropdown","direction","Button","hidden","divider","Mails","query","store","setQuery","selectAllMail","setSidebarOpen","updateMailLabel","resetSelectedMail","selectCurrentMail","mails","personal","company","important","private","ids","arguments","bool","then","Menu","InputGroup","InputGroupAddon","addonType","InputGroupText","Search","target","CustomInput","renderMails","currentMail","ComposePopUp","Sidebar","sidebarOpen","getMails","params","useParams","handleFolder","handleLabel","handleActiveItem","Ripple","block","handleComposeClick","ListGroup","ListGroupItem","Link","action","active","Object","keys","emailsMeta","inbox","Send","draft","spam","axios","get","res","emailIds","dataToUpdate","getState","post","dir","emailId","val","EmailApp","setComposeOpen","useDispatch","useSelector","state","useEffect","q"],"mappings":"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","file":"static/js/23.d943ea81.chunk.js","sourcesContent":["// ** Custom Components & Plugins\nimport classnames from 'classnames'\nimport { htmlToString } from '@utils'\nimport Avatar from '@components/avatar'\nimport { Star, Paperclip } from 'react-feather'\nimport { CustomInput, Media } from 'reactstrap'\n\nconst MailCard = props => {\n  // ** Props\n  const {\n    mail,\n    dispatch,\n    selectMail,\n    labelColors,\n    updateMails,\n    selectedMails,\n    handleMailClick,\n    handleMailReadUpdate,\n    formatDateToMonthShort\n  } = props\n\n  // ** Function to render labels\n  const renderLabels = arr => {\n    if (arr && arr.length) {\n      return arr.map(label => (\n        <span key={label} className={`bullet bullet-${labelColors[label]} bullet-sm mx-50`}></span>\n      ))\n    }\n  }\n\n  // ** Function to handle read & mail click\n  const onMailClick = () => {\n    handleMailClick(mail.id)\n    handleMailReadUpdate([mail.id], true)\n  }\n\n  return (\n    <Media tag='li' onClick={() => onMailClick(mail.id)} className={classnames({ 'mail-read': mail.isRead })}>\n      <div className='media-left pr-50'>\n        <Avatar img={mail.from.avatar} />\n        <div className='user-action'>\n          {/* <CustomInput\n            label=''\n            type='checkbox'\n            checked={selectedMails.includes(mail.id)}\n            id={`${mail.from.name}-${mail.id}`}\n            onChange={e => e.stopPropagation()}\n            onClick={e => {\n              dispatch(selectMail(mail.id))\n              e.stopPropagation()\n            }}\n          /> */}\n          <div className='custom-control custom-checkbox'>\n            <input\n              className='custom-control-input'\n              type='checkbox'\n              id={`${mail.from.name}-${mail.id}`}\n              checked={selectedMails.includes(mail.id)}\n              onChange={e => e.stopPropagation()}\n              onClick={e => {\n                dispatch(selectMail(mail.id))\n                e.stopPropagation()\n              }}\n            />\n            <label\n              className='custom-control-label'\n              htmlFor={`${mail.from.name}-${mail.id}`}\n              onClick={e => {\n                e.stopPropagation()\n              }}\n            ></label>\n          </div>\n          <div\n            className='email-favorite'\n            onClick={e => {\n              e.stopPropagation()\n              dispatch(updateMails([mail.id], { isStarred: !mail.isStarred }))\n            }}\n          >\n            <Star\n              size={14}\n              className={classnames({\n                favorite: mail.isStarred\n              })}\n            />\n          </div>\n        </div>\n      </div>\n      <Media body>\n        <div className='mail-details'>\n          <div className='mail-items'>\n            <h5 className='mb-25'>{mail.from.name}</h5>\n            <span className='text-truncate'>{mail.subject}</span>\n          </div>\n          <div className='mail-meta-item'>\n            {mail.attachments && mail.attachments.length ? <Paperclip size={14} /> : null}\n            {renderLabels(mail.labels)}\n            <span className='mail-date'>{formatDateToMonthShort(mail.time)}</span>\n          </div>\n        </div>\n        <div className='mail-message'>\n          <p className='text-truncate mb-0'>{htmlToString(mail.message)}</p>\n        </div>\n      </Media>\n    </Media>\n  )\n}\n\nexport default MailCard\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Utils\nimport { formatDate } from '@utils'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport {\n  Row,\n  Col,\n  Badge,\n  Card,\n  Table,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\nimport {\n  ChevronLeft,\n  ChevronRight,\n  Star,\n  Folder,\n  Tag,\n  Mail,\n  Trash,\n  Edit2,\n  Info,\n  Paperclip,\n  MoreVertical,\n  CornerUpLeft,\n  CornerUpRight,\n  Trash2\n} from 'react-feather'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\nconst MailDetails = props => {\n  // ** Props\n  const {\n    mail,\n    openMail,\n    dispatch,\n    labelColors,\n    setOpenMail,\n    updateMails,\n    paginateMail,\n    handleMailToTrash,\n    handleFolderUpdate,\n    handleLabelsUpdate,\n    handleMailReadUpdate,\n    formatDateToMonthShort\n  } = props\n\n  // ** States\n  const [showReplies, setShowReplies] = useState(false)\n\n  // ** Renders Labels\n  const renderLabels = arr => {\n    if (arr && arr.length) {\n      return arr.map(label => (\n        <Badge key={label} color={`light-${labelColors[label]}`} className='mr-50 text-capitalize' pill>\n          {label}\n        </Badge>\n      ))\n    }\n  }\n\n  // ** Renders Attachments\n  const renderAttachments = arr => {\n    return arr.map((item, index) => {\n      return (\n        <a\n          key={item.fileName}\n          href='/'\n          onClick={e => e.preventDefault()}\n          className={classnames({\n            'mb-50': index + 1 !== arr.length\n          })}\n        >\n          <img src={item.thumbnail} alt={item.fileName} width='16' className='mr-50' />\n          <span className='text-muted font-weight-bolder align-text-top'>{item.fileName}</span>\n          <span className='text-muted font-small-2 ml-25'>{`(${item.size})`}</span>\n        </a>\n      )\n    })\n  }\n\n  // ** Renders Messages\n  const renderMessage = obj => {\n    return (\n      <Card>\n        <CardHeader className='email-detail-head'>\n          <div className='user-details d-flex justify-content-between align-items-center flex-wrap'>\n            <Avatar img={obj.from.avatar} className='mr-75' imgHeight='48' imgWidth='48' />\n            <div className='mail-items'>\n              <h5 className='mb-0'>{obj.from.name}</h5>\n              <UncontrolledDropdown className='email-info-dropup'>\n                <DropdownToggle className='font-small-3 text-muted cursor-pointer' tag='span' caret>\n                  {obj.from.email}\n                </DropdownToggle>\n                <DropdownMenu>\n                  <Table className='font-small-3' size='sm' borderless>\n                    <tbody>\n                      <tr>\n                        <td className='text-right text-muted align-top'>From:</td>\n                        <td>{obj.from.email}</td>\n                      </tr>\n                      <tr>\n                        <td className='text-right text-muted align-top'>To:</td>\n                        <td>{obj.to[0].email}</td>\n                      </tr>\n                      <tr>\n                        <td className='text-right text-muted align-top'>Date:</td>\n                        <td>\n                          {formatDateToMonthShort(obj.time)}, {formatDateToMonthShort(obj.time, false)}\n                        </td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </div>\n          </div>\n          <div className='mail-meta-item d-flex align-items-center'>\n            <small className='mail-date-time text-muted'>{formatDate(obj.time)}</small>\n            <UncontrolledDropdown className='ml-50'>\n              <DropdownToggle className='cursor-pointer' tag='span'>\n                <MoreVertical size={14} />\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem className='d-flex align-items-center w-100'>\n                  <CornerUpLeft className='mr-50' size={14} />\n                  Reply\n                </DropdownItem>\n                <DropdownItem className='d-flex align-items-center w-100'>\n                  <CornerUpRight className='mr-50' size={14} />\n                  Forward\n                </DropdownItem>\n                <DropdownItem className='d-flex align-items-center w-100'>\n                  <Trash2 className='mr-50' size={14} />\n                  Delete\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </div>\n        </CardHeader>\n        <CardBody className='mail-message-wrapper pt-2'>\n          <div className='mail-message' dangerouslySetInnerHTML={{ __html: obj.message }}></div>\n        </CardBody>\n        {obj.attachments && obj.attachments.length ? (\n          <CardFooter>\n            <div className='mail-attachments'>\n              <div className='d-flex align-items-center mb-1'>\n                <Paperclip size={16} />\n                <h5 className='font-weight-bolder text-body mb-0 ml-50'>{obj.attachments.length} Attachment</h5>\n              </div>\n              <div className='d-flex flex-column'>{renderAttachments(obj.attachments)}</div>\n            </div>\n          </CardFooter>\n        ) : null}\n      </Card>\n    )\n  }\n\n  // ** Renders Replies\n  const renderReplies = arr => {\n    if (arr.length && showReplies === true) {\n      return arr.map((obj, index) => (\n        <Row key={index}>\n          <Col sm='12'>{renderMessage(obj)}</Col>\n        </Row>\n      ))\n    }\n  }\n\n  // ** Handle show replies, go back, folder & read click functions\n  const handleShowReplies = e => {\n    e.preventDefault()\n    setShowReplies(true)\n  }\n\n  const handleGoBack = () => {\n    setOpenMail(false)\n  }\n\n  const handleFolderClick = (e, folder, id) => {\n    handleFolderUpdate(e, folder, [id])\n    handleGoBack()\n  }\n\n  const handleReadClick = () => {\n    handleMailReadUpdate([mail.id], false)\n    handleGoBack()\n  }\n\n  return (\n    <div\n      className={classnames('email-app-details', {\n        show: openMail\n      })}\n    >\n      {mail !== null && mail !== undefined ? (\n        <Fragment>\n          <div className='email-detail-header'>\n            <div className='email-header-left d-flex align-items-center'>\n              <span className='go-back mr-1' onClick={handleGoBack}>\n                <ChevronLeft size={20} />\n              </span>\n              <h4 className='email-subject mb-0'>{mail.subject}</h4>\n            </div>\n            <div className='email-header-right ml-2 pl-1'>\n              <ul className='list-inline m-0'>\n                <li className='list-inline-item mr-1'>\n                  <span\n                    className='action-icon favorite'\n                    onClick={() => dispatch(updateMails([mail.id], { isStarred: !mail.isStarred }))}\n                  >\n                    <Star\n                      size={18}\n                      className={classnames({\n                        'text-warning fill-current': mail.isStarred\n                      })}\n                    />\n                  </span>\n                </li>\n                <li className='list-inline-item mr-1'>\n                  <UncontrolledDropdown>\n                    <DropdownToggle tag='span'>\n                      <Folder size={18} />\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderClick(e, 'draft', mail.id)}\n                        className='d-flex align-items-center'\n                      >\n                        <Edit2 className='mr-50' size={18} />\n                        <span>Draft</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderClick(e, 'spam', mail.id)}\n                        className='d-flex align-items-center'\n                      >\n                        <Info className='mr-50' size={18} />\n                        <span>Spam</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderClick(e, 'trash', mail.id)}\n                        className='d-flex align-items-center'\n                      >\n                        <Trash className='mr-50' size={18} />\n                        <span>Trash</span>\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </li>\n                <li className='list-inline-item mr-1'>\n                  <UncontrolledDropdown>\n                    <DropdownToggle tag='span'>\n                      <Tag size={18} />\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'personal', [mail.id])}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-success bullet-sm mr-50' />\n                        <span>Personal</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'company', [mail.id])}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-primary bullet-sm mr-50' />\n                        <span>Company</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'important', [mail.id])}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-warning bullet-sm mr-50' />\n                        <span>Important</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'private', [mail.id])}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-danger bullet-sm mr-50' />\n                        <span>Private</span>\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </li>\n                <li className='list-inline-item mr-1'>\n                  <span className='action-icon' onClick={handleReadClick}>\n                    <Mail size={18} />\n                  </span>\n                </li>\n                <li className='list-inline-item mr-1'>\n                  <span\n                    className='action-icon'\n                    onClick={() => {\n                      handleMailToTrash([mail.id])\n                      handleGoBack()\n                    }}\n                  >\n                    <Trash size={18} />\n                  </span>\n                </li>\n                <li className='list-inline-item email-prev'>\n                  <span\n                    className={classnames({\n                      'action-icon': mail.hasPreviousMail\n                    })}\n                    onClick={() => (mail.hasPreviousMail ? dispatch(paginateMail('next', mail.id)) : null)}\n                  >\n                    <ChevronLeft\n                      size={18}\n                      className={classnames({\n                        'text-muted': !mail.hasPreviousMail\n                      })}\n                    />\n                  </span>\n                </li>\n                <li className='list-inline-item email-next'>\n                  <span\n                    className={classnames({\n                      'action-icon': mail.hasNextMail\n                    })}\n                    onClick={() => (mail.hasNextMail ? dispatch(paginateMail('previous', mail.id)) : null)}\n                  >\n                    <ChevronRight\n                      size={18}\n                      className={classnames({\n                        'text-muted': !mail.hasNextMail\n                      })}\n                    />\n                  </span>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <PerfectScrollbar className='email-scroll-area' options={{ wheelPropagation: false }}>\n            <Row>\n              <Col sm='12'>\n                <div className='email-label'>{renderLabels(mail.labels)}</div>\n              </Col>\n            </Row>\n            {mail.replies && mail.replies.length ? (\n              <Fragment>\n                {showReplies === false ? (\n                  <Row className='mb-1'>\n                    <Col sm='12'>\n                      <a className='font-weight-bold' href='/' onClick={handleShowReplies}>\n                        View {mail.replies.length} Earlier Messages\n                      </a>\n                    </Col>\n                  </Row>\n                ) : null}\n\n                {renderReplies(mail.replies)}\n              </Fragment>\n            ) : null}\n            <Row>\n              <Col sm='12'>{renderMessage(mail)}</Col>\n            </Row>\n            <Row>\n              <Col sm='12'>\n                <Card>\n                  <CardBody>\n                    <h5 className='mb-0'>\n                      Click here to{' '}\n                      <a href='/' onClick={e => e.preventDefault()}>\n                        Reply\n                      </a>{' '}\n                      or{' '}\n                      <a href='/' onClick={e => e.preventDefault()}>\n                        Forward\n                      </a>\n                    </h5>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </PerfectScrollbar>\n        </Fragment>\n      ) : null}\n    </div>\n  )\n}\n\nexport default MailDetails\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { Editor } from 'react-draft-wysiwyg'\nimport Select, { components } from 'react-select'\nimport { Minus, X, Maximize2, Paperclip, MoreVertical, Trash } from 'react-feather'\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  Form,\n  Label,\n  Input,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\nimport { selectThemeColors } from '@utils'\n\n// ** Custom Hooks\nimport { useSkin } from '@hooks/useSkin'\n\n// ** User Avatars\nimport img1 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\nimport img3 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\nimport img4 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\nimport img5 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\nimport img6 from '@src/assets/images/portrait/small/avatar-s-11.jpg'\n\n// ** Styles\nimport '@styles/react/libs/editor/editor.scss'\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nconst ComposePopup = props => {\n  // ** Props & Custom Hooks\n  const [skin, setSkin] = useSkin()\n  const { composeOpen, toggleCompose } = props\n\n  // ** States\n  const [ccOpen, setCCOpen] = useState(false)\n  const [bccOpen, setBCCOpen] = useState(false)\n\n  // ** User Select Options & Components\n  const selectOptions = [\n    { value: 'pheobe', label: 'Pheobe Buffay', img: img1 },\n    { value: 'chandler', label: 'Chandler Bing', img: img2 },\n    { value: 'ross', label: 'Ross Geller', img: img3 },\n    { value: 'monica', label: 'Monica Geller', img: img4 },\n    { value: 'joey', label: 'Joey Tribbiani', img: img5 },\n    { value: 'Rachel', label: 'Rachel Green', img: img6 }\n  ]\n\n  const SelectComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <div className='d-flex flex-wrap align-items-center'>\n          <Avatar className='my-0 mr-50' size='sm' img={data.img} />\n          {data.label}\n        </div>\n      </components.Option>\n    )\n  }\n\n  // ** CC Toggle Function\n  const toggleCC = e => {\n    e.preventDefault()\n    setCCOpen(!ccOpen)\n  }\n\n  // ** BCC Toggle Function\n  const toggleBCC = e => {\n    e.preventDefault()\n    setBCCOpen(!bccOpen)\n  }\n\n  // ** Toggles Compose POPUP\n  const togglePopUp = e => {\n    e.preventDefault()\n    toggleCompose()\n  }\n\n  return (\n    <Modal\n      scrollable\n      fade={false}\n      id='compose-mail'\n      container='.content-body'\n      className='modal-lg'\n      isOpen={composeOpen}\n      backdrop={false}\n      contentClassName='p-0'\n      toggle={toggleCompose}\n      modalClassName='modal-sticky'\n    >\n      <div className='modal-header'>\n        <h5 className='modal-title'>Compose Mail</h5>\n        <div className='modal-actions'>\n          <a href='/' className='text-body mr-75' onClick={togglePopUp}>\n            <Minus size={14} />\n          </a>\n          <a href='/' className='text-body mr-75' onClick={e => e.preventDefault()}>\n            <Maximize2 size={14} />\n          </a>\n          <a href='/' className='text-body' onClick={togglePopUp}>\n            <X size={14} />\n          </a>\n        </div>\n      </div>\n      <ModalBody className='flex-grow-1 p-0'>\n        <Form className='compose-form' onSubmit={e => e.preventDefault()}>\n          <div className='compose-mail-form-field'>\n            <Label for='email-to' className='form-label'>\n              To:\n            </Label>\n            <div className='flex-grow-1'>\n              <Select\n                isMulti\n                id='email-to'\n                isClearable={false}\n                theme={selectThemeColors}\n                options={selectOptions}\n                className='react-select select-borderless'\n                classNamePrefix='select'\n                components={{ Option: SelectComponent }}\n              />\n            </div>\n            <div>\n              <a href='/' className='toggle-cc text-body mr-1' onClick={toggleCC}>\n                CC\n              </a>\n              <a href='/' className='toggle-cc text-body' onClick={toggleBCC}>\n                BCC\n              </a>\n            </div>\n          </div>\n          {ccOpen === true ? (\n            <div className='compose-mail-form-field cc-wrapper'>\n              <Label for='email-cc' className='form-label'>\n                CC:\n              </Label>\n              <div className='flex-grow-1'>\n                <Select\n                  isMulti\n                  id='email-cc'\n                  isClearable={false}\n                  theme={selectThemeColors}\n                  options={selectOptions}\n                  className='react-select select-borderless'\n                  classNamePrefix='select'\n                  components={{ Option: SelectComponent }}\n                />\n              </div>\n              <div>\n                <a href='/' className='toggle-cc text-body' onClick={toggleCC}>\n                  <X size={14} />\n                </a>\n              </div>\n            </div>\n          ) : null}\n          {bccOpen === true ? (\n            <div className='compose-mail-form-field cc-wrapper'>\n              <Label for='email-bcc' className='form-label'>\n                BCC:\n              </Label>\n              <div className='flex-grow-1'>\n                <Select\n                  isMulti\n                  id='email-bcc'\n                  isClearable={false}\n                  theme={selectThemeColors}\n                  options={selectOptions}\n                  className='react-select select-borderless'\n                  classNamePrefix='select'\n                  components={{ Option: SelectComponent }}\n                />\n              </div>\n              <div>\n                <a href='/' className='toggle-cc text-body' onClick={toggleBCC}>\n                  <X size={14} />\n                </a>\n              </div>\n            </div>\n          ) : null}\n          <div className='compose-mail-form-field'>\n            <Label for='email-subject' className='form-label'>\n              Subject:\n            </Label>\n            <Input id='email-subject' placeholder='Subject' />\n          </div>\n          <div id='message-editor'>\n            <Editor\n              placeholder='Message'\n              editorClassName='rounded-0'\n              toolbarClassName='rounded-0'\n              wrapperClassName='toolbar-bottom'\n              toolbar={{\n                options: ['inline', 'textAlign'],\n                inline: {\n                  inDropdown: false,\n                  options: ['bold', 'italic', 'underline', 'strikethrough']\n                }\n              }}\n            />\n          </div>\n          <div className='compose-footer-wrapper'>\n            <div className='btn-wrapper d-flex align-items-center'>\n              <UncontrolledButtonDropdown direction='up' className='mr-1'>\n                <Button color='primary' onClick={toggleCompose}>\n                  Send\n                </Button>\n                <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem href='/' tag='a' onClick={togglePopUp}>\n                    Schedule Send\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledButtonDropdown>\n              <div className='email-attachement'>\n                <Label className='mb-0' for='attach-email-item'>\n                  <Paperclip className='cursor-pointer ml-50' size={18} />\n                  <input type='file' name='attach-email-item' id='attach-email-item' hidden />\n                </Label>\n              </div>\n            </div>\n            <div className='footer-action d-flex align-items-center'>\n              <UncontrolledDropdown className='mr-50' direction='up'>\n                <DropdownToggle tag='span'>\n                  <MoreVertical className='cursor-pointer' size={18} />\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                    Add Label\n                  </DropdownItem>\n                  <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                    Plain text mode\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                    Print\n                  </DropdownItem>\n                  <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                    Check Spelling\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <Trash size={18} onClick={toggleCompose} />\n            </div>\n          </div>\n        </Form>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default ComposePopup\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Mail Components Imports\nimport MailCard from './MailCard'\nimport MailDetails from './MailDetails'\nimport ComposePopUp from './ComposePopup'\n\n// ** Utils\nimport { formatDateToMonthShort } from '@utils'\n\n// ** Third Party Components\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport {\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  InputGroupText,\n  CustomInput,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\nimport { Menu, Search, Folder, Tag, Mail, Trash, Edit2, Info } from 'react-feather'\n\nconst Mails = props => {\n  // ** Props\n  const {\n    query,\n    store,\n    setQuery,\n    dispatch,\n    selectMail,\n    composeOpen,\n    updateMails,\n    paginateMail,\n    selectAllMail,\n    toggleCompose,\n    setSidebarOpen,\n    updateMailLabel,\n    resetSelectedMail,\n    selectCurrentMail\n  } = props\n\n  const { mails, selectedMails } = store\n\n  // ** States\n  const [openMail, setOpenMail] = useState(false)\n\n  // ** Variables\n  const labelColors = {\n    personal: 'success',\n    company: 'primary',\n    important: 'warning',\n    private: 'danger'\n  }\n\n  // ** Handles Update Functions\n  const handleMailClick = id => {\n    dispatch(selectCurrentMail(id))\n    setOpenMail(true)\n  }\n\n  // ** Handles SelectAll\n  const handleSelectAll = e => {\n    dispatch(selectAllMail(e.target.checked))\n  }\n\n  /*eslint-disable */\n\n  // ** Handles Folder Update\n  const handleFolderUpdate = (e, folder, ids = selectedMails) => {\n    e.preventDefault()\n    dispatch(updateMails(ids, { folder }))\n    dispatch(resetSelectedMail())\n  }\n\n  // ** Handles Label Update\n  const handleLabelsUpdate = (e, label, ids = selectedMails) => {\n    e.preventDefault()\n    dispatch(updateMailLabel(ids, label))\n    dispatch(resetSelectedMail())\n  }\n\n  // ** Handles Mail Read Update\n  const handleMailReadUpdate = (arr, bool) => {\n    dispatch(updateMails(arr, { isRead: bool })).then(() => dispatch(resetSelectedMail()))\n    dispatch(selectAllMail(false))\n  }\n\n  // ** Handles Move to Trash\n  const handleMailToTrash = ids => {\n    dispatch(updateMails(ids, { folder: 'trash' }))\n    dispatch(resetSelectedMail())\n  }\n  /*eslint-enable */\n\n  // ** Renders Mail\n  const renderMails = () => {\n    if (mails.length) {\n      return mails.map((mail, index) => {\n        return (\n          <MailCard\n            mail={mail}\n            key={index}\n            dispatch={dispatch}\n            selectMail={selectMail}\n            updateMails={updateMails}\n            labelColors={labelColors}\n            selectedMails={selectedMails}\n            handleMailClick={handleMailClick}\n            handleMailReadUpdate={handleMailReadUpdate}\n            formatDateToMonthShort={formatDateToMonthShort}\n          />\n        )\n      })\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className='email-app-list'>\n        <div className='app-fixed-search d-flex align-items-center'>\n          <div className='sidebar-toggle d-block d-lg-none ml-1' onClick={() => setSidebarOpen(true)}>\n            <Menu />\n          </div>\n          <div className='d-flex align-content-center justify-content-between w-100'>\n            <InputGroup className='input-group-merge'>\n              <InputGroupAddon addonType='prepend'>\n                <InputGroupText>\n                  <Search className='text-muted' size={14} />\n                </InputGroupText>\n              </InputGroupAddon>\n              <Input\n                id='email-search'\n                placeholder='Search email'\n                value={query}\n                onChange={e => setQuery(e.target.value)}\n              />\n            </InputGroup>\n          </div>\n        </div>\n        <div className='app-action'>\n          <div className='action-left'>\n            <CustomInput\n              type='checkbox'\n              id='select-all'\n              label='Select All'\n              onChange={handleSelectAll}\n              checked={selectedMails.length && selectedMails.length === mails.length}\n            />\n          </div>\n          {selectedMails.length ? (\n            <div className='action-right'>\n              <ul className='list-inline m-0'>\n                <li className='list-inline-item mr-1'>\n                  <UncontrolledDropdown>\n                    <DropdownToggle tag='span'>\n                      <Folder size={18} />\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderUpdate(e, 'draft')}\n                        className='d-flex align-items-center'\n                      >\n                        <Edit2 className='mr-50' size={18} />\n                        <span>Draft</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderUpdate(e, 'spam')}\n                        className='d-flex align-items-center'\n                      >\n                        <Info className='mr-50' size={18} />\n                        <span>Spam</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderUpdate(e, 'trash')}\n                        className='d-flex align-items-center'\n                      >\n                        <Trash className='mr-50' size={18} />\n                        <span>Trash</span>\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </li>\n                <li className='list-inline-item mr-1'>\n                  <UncontrolledDropdown>\n                    <DropdownToggle tag='span'>\n                      <Tag size={18} />\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'personal')}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-success bullet-sm mr-50' />\n                        <span>Personal</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'company')}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-primary bullet-sm mr-50' />\n                        <span>Company</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'important')}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-warning bullet-sm mr-50' />\n                        <span>Important</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'private')}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-danger bullet-sm mr-50' />\n                        <span>Private</span>\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </li>\n                <li className='list-inline-item mr-1'>\n                  <span className='action-icon' onClick={() => handleMailReadUpdate(selectedMails, false)}>\n                    <Mail size={18} />\n                  </span>\n                </li>\n                <li className='list-inline-item mr-1'>\n                  <span className='action-icon' onClick={() => handleMailToTrash(selectedMails)}>\n                    <Trash size={18} />\n                  </span>\n                </li>\n              </ul>\n            </div>\n          ) : null}\n        </div>\n\n        <PerfectScrollbar className='email-user-list' options={{ wheelPropagation: false }}>\n          {mails.length ? (\n            <ul className='email-media-list'>{renderMails()}</ul>\n          ) : (\n            <div className='no-results d-block'>\n              <h5>No Items Found</h5>\n            </div>\n          )}\n        </PerfectScrollbar>\n      </div>\n      <MailDetails\n        openMail={openMail}\n        dispatch={dispatch}\n        mail={store.currentMail}\n        labelColors={labelColors}\n        setOpenMail={setOpenMail}\n        updateMails={updateMails}\n        paginateMail={paginateMail}\n        updateMailLabel={updateMailLabel}\n        handleMailToTrash={handleMailToTrash}\n        handleFolderUpdate={handleFolderUpdate}\n        handleLabelsUpdate={handleLabelsUpdate}\n        handleMailReadUpdate={handleMailReadUpdate}\n        formatDateToMonthShort={formatDateToMonthShort}\n      />\n      <ComposePopUp composeOpen={composeOpen} toggleCompose={toggleCompose} />\n    </Fragment>\n  )\n}\n\nexport default Mails\n","// ** Third Party Components\nimport classnames from 'classnames'\nimport { Link, useParams } from 'react-router-dom'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { Mail, Send, Edit2, Star, Info, Trash } from 'react-feather'\nimport { Button, ListGroup, ListGroupItem, Badge } from 'reactstrap'\n\nconst Sidebar = props => {\n  // ** Props\n  const { store, sidebarOpen, toggleCompose, dispatch, getMails, resetSelectedMail, setSidebarOpen } = props\n\n  // ** Vars\n  const params = useParams()\n\n  // ** Functions To Handle Folder, Label & Compose\n  const handleFolder = folder => {\n    dispatch(getMails({ ...store.params, folder }))\n    dispatch(resetSelectedMail())\n  }\n\n  const handleLabel = label => {\n    dispatch(getMails({ ...store.params, label }))\n    dispatch(resetSelectedMail())\n  }\n\n  const handleComposeClick = () => {\n    toggleCompose()\n    setSidebarOpen(false)\n  }\n\n  // ** Functions To Active List Item\n  const handleActiveItem = value => {\n    if ((params.folder && params.folder === value) || (params.label && params.label === value)) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  return (\n    <div\n      className={classnames('sidebar-left', {\n        show: sidebarOpen\n      })}\n    >\n      <div className='sidebar'>\n        <div className='sidebar-content email-app-sidebar'>\n          <div className='email-app-menu'>\n            <div className='form-group-compose text-center compose-btn'>\n              <Button.Ripple className='compose-email' color='primary' block onClick={handleComposeClick}>\n                Compose\n              </Button.Ripple>\n            </div>\n            <PerfectScrollbar className='sidebar-menu-list' options={{ wheelPropagation: false }}>\n              <ListGroup tag='div' className='list-group-messages'>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/inbox'\n                  onClick={() => handleFolder('inbox')}\n                  action\n                  active={!Object.keys(params).length || handleActiveItem('inbox')}\n                >\n                  <Mail size={18} className='mr-75' />\n                  <span className='align-middle'>Inbox</span>\n                  {store.emailsMeta.inbox ? (\n                    <Badge className='float-right' color='light-primary' pill>\n                      {store.emailsMeta.inbox}\n                    </Badge>\n                  ) : null}\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/sent'\n                  onClick={() => handleFolder('sent')}\n                  action\n                  active={handleActiveItem('sent')}\n                >\n                  <Send size={18} className='mr-75' />\n                  <span className='align-middle'>Sent</span>\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/draft'\n                  onClick={() => handleFolder('draft')}\n                  action\n                  active={handleActiveItem('draft')}\n                >\n                  <Edit2 size={18} className='mr-75' />\n                  <span className='align-middle'>Draft</span>\n                  {store.emailsMeta.draft ? (\n                    <Badge className='float-right' color='light-warning' pill>\n                      {store.emailsMeta.draft}\n                    </Badge>\n                  ) : null}\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/starred'\n                  onClick={() => handleFolder('starred')}\n                  action\n                  active={handleActiveItem('starred')}\n                >\n                  <Star size={18} className='mr-75' />\n                  <span className='align-middle'>Starred</span>\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/spam'\n                  onClick={() => handleFolder('spam')}\n                  action\n                  active={handleActiveItem('spam')}\n                >\n                  <Info size={18} className='mr-75' />\n                  <span className='align-middle'>Spam</span>\n                  {store.emailsMeta.spam ? (\n                    <Badge className='float-right' color='light-danger' pill>\n                      {store.emailsMeta.spam}\n                    </Badge>\n                  ) : null}\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/trash'\n                  onClick={() => handleFolder('trash')}\n                  action\n                  active={handleActiveItem('trash')}\n                >\n                  <Trash size={18} className='mr-75' />\n                  <span className='align-middle'>Trash</span>\n                </ListGroupItem>\n              </ListGroup>\n              <h6 className='section-label mt-3 mb-1 px-2'>Labels</h6>\n              <ListGroup tag='div' className='list-group-labels'>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/label/personal'\n                  onClick={() => handleLabel('personal')}\n                  active={handleActiveItem('personal')}\n                  action\n                >\n                  <span className='bullet bullet-sm bullet-success mr-1'></span>\n                  Personal\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/label/company'\n                  onClick={() => handleLabel('company')}\n                  active={handleActiveItem('company')}\n                  action\n                >\n                  <span className='bullet bullet-sm bullet-primary mr-1'></span>\n                  Company\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/label/important'\n                  onClick={() => handleLabel('important')}\n                  active={handleActiveItem('important')}\n                  action\n                >\n                  <span className='bullet bullet-sm bullet-warning mr-1'></span>\n                  Important\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/label/private'\n                  onClick={() => handleLabel('private')}\n                  active={handleActiveItem('private')}\n                  action\n                >\n                  <span className='bullet bullet-sm bullet-danger mr-1'></span>\n                  Private\n                </ListGroupItem>\n              </ListGroup>\n            </PerfectScrollbar>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Sidebar\n","import axios from 'axios'\n\n// ** GET Mails\nexport const getMails = params => {\n  return dispatch => {\n    return axios.get('/apps/email/emails', { params }).then(res => {\n      dispatch({ type: 'GET_MAILS', data: res.data, params })\n    })\n  }\n}\n\n// ** UPDATE Mails\nexport const updateMails = (emailIds, dataToUpdate) => {\n  return (dispatch, getState) => {\n    return axios.post('/apps/email/update-emails', { emailIds, dataToUpdate }).then(res => {\n      dispatch({ type: 'UPDATE_MAILS', emailIds, dataToUpdate, data: res.data })\n      dispatch(getMails(getState().email.params))\n    })\n  }\n}\n\n// ** Update Mail Label\nexport const updateMailLabel = (emailIds, label) => {\n  return (dispatch, getState) => {\n    return axios.post('/apps/email/update-emails-label', { emailIds, label }).then(res => {\n      dispatch({ type: 'UPDATE_MAIL_LABEL', data: res.data })\n      dispatch(getMails(getState().email.params))\n    })\n  }\n}\n\n// ** GET Next/Prev mail\nexport const paginateMail = (dir, emailId) => {\n  return dispatch => {\n    return axios.get('/apps/email/paginate-email', { params: { dir, emailId } }).then(res => {\n      dispatch({ type: 'PAGINATE_MAIL', data: res.data })\n    })\n  }\n}\n\n// ** SELECT Current Mail\nexport const selectCurrentMail = id => dispatch => {\n  return axios.get('/apps/email/get-email', { id }).then(res => {\n    dispatch({ type: 'SELECT_CURRENT_MAIL', mail: res.data })\n  })\n}\n\n// ** SELECT Mail\nexport const selectMail = id => dispatch => dispatch({ type: 'SELECT_MAIL', id })\n\n// ** SELECT All Mails\nexport const selectAllMail = val => dispatch => dispatch({ type: 'SELECT_ALL_MAIL', val })\n\n// ** RESET Selected Mails\nexport const resetSelectedMail = () => dispatch => dispatch({ type: 'RESET_SELECT_MAILS' })\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\n\n// ** Email App Component Imports\nimport Mails from './Mails'\nimport Sidebar from './Sidebar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  getMails,\n  selectMail,\n  updateMails,\n  paginateMail,\n  selectAllMail,\n  resetSelectedMail,\n  selectCurrentMail,\n  updateMailLabel\n} from './store/actions'\n\n// ** Styles\nimport '@styles/react/apps/app-email.scss'\n\nconst EmailApp = () => {\n  // ** States\n  const [query, setQuery] = useState('')\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [composeOpen, setComposeOpen] = useState(false)\n\n  // ** Toggle Compose Function\n  const toggleCompose = () => setComposeOpen(!composeOpen)\n\n  // ** Store Variables\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.email)\n\n  // ** Vars\n  const params = useParams()\n\n  // ** UseEffect: GET initial data on Mount\n  useEffect(() => {\n    dispatch(getMails({ q: query || '', folder: params.folder || 'inbox', label: params.label || '' }))\n  }, [query, params.folder, params.label])\n\n  return (\n    <Fragment>\n      <Sidebar\n        store={store}\n        dispatch={dispatch}\n        getMails={getMails}\n        sidebarOpen={sidebarOpen}\n        toggleCompose={toggleCompose}\n        setSidebarOpen={setSidebarOpen}\n        resetSelectedMail={resetSelectedMail}\n      />\n      <div className='content-right'>\n        <div className='content-body'>\n          <div\n            className={classnames('body-content-overlay', {\n              show: sidebarOpen\n            })}\n            onClick={() => setSidebarOpen(false)}\n          ></div>\n          <Mails\n            store={store}\n            query={query}\n            setQuery={setQuery}\n            dispatch={dispatch}\n            getMails={getMails}\n            selectMail={selectMail}\n            updateMails={updateMails}\n            composeOpen={composeOpen}\n            paginateMail={paginateMail}\n            selectAllMail={selectAllMail}\n            toggleCompose={toggleCompose}\n            setSidebarOpen={setSidebarOpen}\n            updateMailLabel={updateMailLabel}\n            selectCurrentMail={selectCurrentMail}\n            resetSelectedMail={resetSelectedMail}\n          />\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default EmailApp\n"],"sourceRoot":""}