{"version":3,"sources":["views/tables/data-tables/basic/AdminComponent/RealTimeCommisionRule/EditRealTimeCommisionRule.js"],"names":["withReactContent","Swal","EditRealTimeCommisionRule","_ref","setModal","editModal","seteditModal","commisionInfo","setReset","resetData","useHistory","pointRuleloading","setPointRuleloading","useState","cashbackFlexibleData","setCashbackFlexibleData","startRange","isPercentage","voucherFlexibleData","setVoucherFlexibleData","datapackFlexibleData","setDatapackFlexibleData","pointFlexibleData","setPointFlexibleData","userInput","setUserInput","_jsxs","Fragment","children","_jsx","Button","Ripple","className","color","onClick","ChevronLeft","size","style","marginRight","Card","CardHeader","CardTitle","tag","Form","width","onSubmit","e","preventDefault","flexibleData","finalRequestData","RuleDataReFormat","commission_id","created_by","create_date","useJwt2","commissionruleEdit","then","res","Success","catch","error","Error","autoComplete","Row","Col","md","RealTimeCommisionRuleLogic","onlyView","sm","disabled","marginTop","Spinner","type"],"mappings":"iHAAA,sOAgBeA,IAAiBC,KA0NjBC,UAxNmBC,IAO3B,IAP4B,SAC/BC,EAAQ,UACRC,EAAS,aACTC,EAAY,cACZC,EAAa,SACbC,EAAQ,UACRC,GACHN,EAEmBO,cAAhB,MACOC,EAAkBC,GAAuBC,oBAAS,IAElDC,EAAsBC,GAA2BF,mBAAS,CAAC,CAAEG,WAAY,EAAGC,cAAc,MAC1FC,EAAqBC,GAA0BN,mBAAS,CAAC,CAAEG,WAAY,MACvEI,EAAsBC,GAA2BR,mBAAS,CAAC,CAAEG,WAAY,MACzEM,EAAmBC,GAAwBV,mBAAS,CAAC,CAAEG,WAAY,MACnEQ,EAAWC,GAAgBZ,mBAASN,GAiJ3C,OACImB,eAACC,WAAQ,CAAAC,SAAA,CACLC,cAACC,IAAOC,OAAM,CAACC,UAAU,OAAOC,MAAM,UAAUC,QAASA,KACrD5B,GAAa,GACbF,GAAS,EAAM,EACjBwB,SACEF,eAAA,OAAKM,UAAU,4BAA2BJ,SAAA,CACtCC,cAACM,IAAW,CAACC,KAAM,GAAIC,MAAO,CAAEC,YAAa,SAC7CT,cAAA,QAAAD,SAAO,cAGfC,cAACU,IAAI,CAAAX,SACDC,cAACW,IAAU,CAACR,UAAU,gBAAeJ,SACjCC,cAACY,IAAS,CAACC,IAAI,KAAId,SAAC,oCAI5BF,eAACiB,IAAI,CAAEN,MAAO,CAAEO,MAAO,QAAUC,SA5CvBC,IACdA,EAAEC,iBAEF,MAAMC,EAAe,CACjBlC,uBACAI,sBACAE,uBACAE,qBAEE2B,EAAmBC,YAAiB1B,EAAWwB,IAC/C,cAACG,EAAa,WAAEC,EAAU,YAAEC,GAAgB7B,EAElDZ,GAAoB,GACpB0C,IAAQC,mBAAmB,IAAIN,EAAkBE,gBAAeC,aAAYC,gBAAeG,MAAKC,IACxFC,YAAQD,GACRjD,GAAUC,GACVL,GAAS,GACTE,GAAa,GACbM,GAAoB,EAAM,IAC/B+C,OAAOC,IACFhD,GAAoB,GACpBiD,YAAMD,EAAM,GACd,EAsBmDE,aAAa,MAAKlC,SAAA,CAEnEC,cAACkC,IAAG,CAAAnC,SACAC,cAACmC,IAAG,CAACC,GAAG,KAAIrC,SACVC,cAACqC,IAA0B,CACrB1C,UAAWA,EACXC,aAAcA,EACdX,qBAAsBA,EACtBC,wBAAyBA,EACzBG,oBAAqBA,EACrBC,uBAAwBA,EAExBC,qBAAsBA,EACtBC,wBAAyBA,EACzBC,kBAAmBA,EACnBC,qBAAsBA,EACtB4C,UAAU,QAKtBtC,cAACkC,IAAG,CAAAnC,SACAC,cAACmC,IAAG,CAACI,GAAG,KAAKpC,UAAU,cAAaJ,SAE5BjB,EAAmBe,eAACI,IAAOC,OAAM,CAACE,MAAM,UAAUD,UAAU,OAAOqC,UAAQ,EAAChC,MAAO,CAAEiC,UAAW,QAAS1C,SAAA,CACrGC,cAAC0C,IAAO,CAACtC,MAAM,QAAQG,KAAK,OAC5BP,cAAA,QAAMG,UAAU,QAAOJ,SAAC,kBACTC,cAACC,IAAOC,OAAM,CAACC,UAAU,OAAOC,MAAM,UAAUuC,KAAK,SAASnC,MAAO,CAAEiC,UAAW,QAAS1C,SAC1GC,cAAA,QAAAD,SAAO,sBAMpB,C","file":"static/js/370.e92eb93d.chunk.js","sourcesContent":["import useJwt from '@src/auth/jwt/useJwt'\nimport useJwt2 from '@src/auth/jwt/useJwt2'\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport { selectThemeColors } from '@utils'\nimport React, { Fragment, useEffect, useMemo, useRef, useState } from 'react'\nimport { ChevronLeft, Minus, Plus } from 'react-feather'\nimport { Link, useHistory } from 'react-router-dom'\nimport Select from 'react-select'\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, CustomInput, Form, FormGroup, Input, Label, Row, Spinner } from 'reactstrap'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport { Error, Success } from '../../../../../viewhelper'\nimport CommonDataTable from '../DataTable'\nimport RealTimeCommisionRuleLogic from './RealTimeCommisionRuleLogic'\nimport './rStyle.css'\nimport { RuleDataReFormat } from './RuleDataReFormat'\nconst MySwal = withReactContent(Swal)\n\nconst EditRealTimeCommisionRule = ({\n    setModal,\n    editModal,\n    seteditModal,\n    commisionInfo,\n    setReset,\n    resetData\n}) => {\n\n    const history = useHistory()\n    const [pointRuleloading, setPointRuleloading] = useState(false)\n\n    const [cashbackFlexibleData, setCashbackFlexibleData] = useState([{ startRange: 0, isPercentage: false }])\n    const [voucherFlexibleData, setVoucherFlexibleData] = useState([{ startRange: 0 }])\n    const [datapackFlexibleData, setDatapackFlexibleData] = useState([{ startRange: 0 }])\n    const [pointFlexibleData, setPointFlexibleData] = useState([{ startRange: 0 }])\n    const [userInput, setUserInput] = useState(commisionInfo)\n\n    // const [userInput, setUserInput] = useState({\n\n    //     commissionRuleName: '333',\n    //     reward_type: 3,\n    //     pointExpireDays: 365,\n\n    //     isFinBasedOffer: true,\n    //     offer_type: 4,\n    //     offerCount: 10,\n    //     offerAmount: 0,\n\n    //     target: true,\n    //     target_type: 3,\n    //     target_count: 10,\n    //     target_amount: 30,\n\n    //     isQuota: true,\n    //     quotaType: 2,\n    //     quotaCount: 10,\n    //     quotaAmount: 40,\n\n    //     isRxQuota: true,\n    //     rxQuotaType: 3,\n    //     rxQuotaCount: 220,\n    //     rxQuotaAmount: 440,\n\n    //     isCertainTimeline: true,\n    //     returnCertainTimelineId: 4,\n    //     timelineType: 'm',\n    //     isTimelineRange: false,\n    //     staticTimeline: 5,\n    //     startTimeline: 2,\n    //     endTimeline: 5,\n\n    //     isTime: true,\n    //     outsideHourCommissionId: 4,\n    //     startHour: '01:20',\n    //     endHour: '19:50',\n\n    //     commissionType: 'flexible',\n    //     isPercentage: false,\n    //     snAmount: 10,\n    //     rxAmount: 10,\n    //     min: 220,\n    //     max: 330,\n        \n    //     snreward_datapack_groupid: 17,\n    //     rxreward_datapack_groupid: 12,\n\n    //     snreward_voucherid : \"PD0044\",\n    //     rxreward_voucherid : \"PD0044\",\n      \n    //     flexibleRules: [\n    //          {\n    //                 startRange: '90', \n    //                 snAmount: '7', \n    //                 rxAmount: '8', \n    //                 endRange: '999'\n    //             },  {\n    //                 startRange: '90', \n    //                 snAmount: '7', \n    //                 rxAmount: '8', \n    //                 endRange: '999'\n    //             }\n    //     ]\n    // })\n\n    /**\n     * Cash-back flexiable rule \n     *     flexibleRules: [\n                {\n                isPercentage: false,\n                max: 0,\n                min: 0,\n                rxAmount: \"10\",\n                snAmount: \"11\",\n                startRange: \"01\",\n                endRange: \"100\"\n            }, {\n                isPercentage: true,\n                max: 10,\n                min: 30,\n                rxAmount: \"10\",\n                snAmount: \"11\",\n                startRange: \"200\",\n                endRange: \"500\"\n            }\n        ]\n\n        Point....\n           flexibleRules: [\n                {\n                    startRange: '90', \n                    snAmount: '7', \n                    rxAmount: '8', \n                    endRange: '999'\n                },  {\n                    startRange: '90', \n                    snAmount: '7', \n                    rxAmount: '8', \n                    endRange: '999'\n                }\n        ]\n        data-pack\n        flexibleRules: [\n            {startRange: '1', snreward_datapack_groupid: '17', rxreward_datapack_groupid: '12', endRange: '32'},\n            {startRange: '1', snreward_datapack_groupid: '17', rxreward_datapack_groupid: '12', endRange: '32'}\n        ]\n\n        voucher..\n         flexibleRules: [\n            {startRange: '10', snreward_voucherid: 'PD0044', rxreward_voucherid: 'PD0044', endRange: '20'},\n            {startRange: '10', snreward_voucherid: 'PD0044', rxreward_voucherid: 'PD0044', endRange: '20'}\n        ]\n     */\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        const flexibleData = {\n            cashbackFlexibleData,\n            voucherFlexibleData,\n            datapackFlexibleData,\n            pointFlexibleData\n        }\n        const finalRequestData = RuleDataReFormat(userInput, flexibleData)\n        const {commission_id, created_by, create_date } = userInput\n\n        setPointRuleloading(true)\n        useJwt2.commissionruleEdit({...finalRequestData, commission_id, created_by, create_date }).then(res => {\n                Success(res)\n                setReset(!resetData)\n                setModal(false)\n                seteditModal(false)\n                setPointRuleloading(false)\n        }).catch((error) => {\n                setPointRuleloading(false)\n                Error(error)\n            })\n\n    }\n\n\n    return (\n        <Fragment>\n            <Button.Ripple className='mb-1' color='primary' onClick={() => {\n                seteditModal(false)\n                setModal(false)\n            }} >\n                <div className='d-flex align-items-center'>\n                    <ChevronLeft size={17} style={{ marginRight: '5px' }} />\n                    <span >Back</span>\n                </div>\n            </Button.Ripple>\n            <Card>\n                <CardHeader className='border-bottom'>\n                    <CardTitle tag='h4'>Update Online Campaign Rule</CardTitle>\n                </CardHeader>\n            </Card>\n\n            <Form  style={{ width: '100%' }} onSubmit={onSubmit} autoComplete=\"off\">\n\n                <Row>\n                    <Col md=\"12\">\n                      <RealTimeCommisionRuleLogic \n                            userInput={userInput}\n                            setUserInput={setUserInput}\n                            cashbackFlexibleData={cashbackFlexibleData}\n                            setCashbackFlexibleData={setCashbackFlexibleData}\n                            voucherFlexibleData={voucherFlexibleData}\n                            setVoucherFlexibleData={setVoucherFlexibleData}\n\n                            datapackFlexibleData={datapackFlexibleData}\n                            setDatapackFlexibleData={setDatapackFlexibleData}\n                            pointFlexibleData={pointFlexibleData}\n                            setPointFlexibleData={setPointFlexibleData}\n                            onlyView={false}\n                        />\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col sm=\"12\" className='text-center'>\n                        {\n                            pointRuleloading ? <Button.Ripple color='primary' className='mr-1' disabled style={{ marginTop: '25px' }}>\n                                <Spinner color='white' size='sm' />\n                                <span className='ml-50'>Loading...</span>\n                            </Button.Ripple> : <Button.Ripple className='ml-2' color='primary' type=\"submit\" style={{ marginTop: '25px' }}>\n                                <span >Update</span>\n                            </Button.Ripple>\n                        }\n                    </Col>\n                </Row>\n            </Form>\n        </Fragment>\n    )\n}\n\nexport default EditRealTimeCommisionRule"],"sourceRoot":""}