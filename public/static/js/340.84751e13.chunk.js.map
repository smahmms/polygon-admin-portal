{"version":3,"sources":["views/tables/data-tables/basic/AdminComponent/DatapackManagement/DatapackGrouping/GroupList.js","views/tables/data-tables/basic/AdminComponent/DatapackManagement/DatapackGrouping/MyPendingGroupList.js","views/tables/data-tables/basic/AdminComponent/DatapackManagement/DatapackGrouping/ViewDetails.js","views/tables/data-tables/basic/AdminComponent/DatapackManagement/DatapackGrouping/NeedApproveGroupList.js","views/tables/data-tables/basic/AdminComponent/DatapackManagement/DatapackGrouping/DatapackGroup.js","views/viewhelper.js","views/helper.js","views/tables/data-tables/basic/AdminComponent/ClientSideDataTable.js","views/statusdb.js"],"names":["MySwal","withReactContent","Swal","GroupList","_ref","datapackGroupList","rule_type","TableDataLoading","setrefresh","refresh","setgroupEditData","history","useHistory","searchValue","setSearchValue","useState","filteredData","setFilteredData","column","name","minWidth","sortable","selector","wrap","row","_row$group_items","group_items","map","e","_jsx","style","padding","borderBottom","width","children","keyword","_row$group_items2","pack_code","_row$group_items3","concat","number_of_time_api_hit","cell","item","modified_by","created_by","sortType","a","b","Date","modified_at","formatReadableDate","created_at","_jsxs","_Fragment","title","Edit","size","color","cursor","onClick","editDetails","localStorage","setItem","JSON","stringify","push","Trash","deleteDetails","preventDefault","fire","text","icon","allowOutsideClick","allowEscapeKey","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","showLoaderOnConfirm","preConfirm","useJwt","datapackGroupDelete","id","then","res","console","log","Success","data","message","catch","err","Error","response","buttonsStyling","isLoading","result","isConfirmed","Fragment","Row","className","Col","sm","Label","for","Input","type","bsSize","value","onChange","target","updatedData","length","filter","_item$id","_item$group_title","_item$id2","_item$group_title2","startsWith","toLowerCase","group_title","includes","md","CommonDataTable","TableData","MyPendingGroupList","setgroupIdForView","setref_id","_row$group_item","group_item","_row$group_item2","_row$group_item3","ViewDetailsModal","modal","toggleModal","datapackInfo","setRefresh","action","roleWiseApprovedList","setRoleWiseApprovedList","addUserloading","setaddUserloading","useEffect","datapackGroupApprovalById","itemArr","payload","module_data","roles","approvedby","approved","find","i","role_id","role_name","approved_by","approved_at","Modal","isOpen","toggle","border","ModalHeader","ModalBody","Card","CardHeader","CardTitle","CardBody","Table","index","Spinner","Button","Ripple","disabled","marginTop","handleApproveRejectActions","datapackGroupApprove","action_id","NeedApproveGroupList","setAction","setDatapackInfo","setModal","CheckSquare","XSquare","DetailsModal","DatapackGroup","getItem","setDatapackGroupList","myPendingList","setMyPendingList","approvepending","setapprovepending","setTableDataLoading","groupEditData","groupIdForView","ref_id","activeTab","setActiveTab","tab","Promise","all","useJwt2","datapackGroupMyPendingList","datapackGroupOtherPendingList","SKURuleEditPage","ViewTempDetails","Nav","tabs","NavItem","NavLink","active","subMenuIDs","TabContent","TabPane","tabId","tag","Link","to","Plus","marginRight","status","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","errors","Object","keys","success","options","year","month","day","hour","minute","date","toLocaleDateString","getHumanReadableDate","datetime","endsWith","slice","plusIndex","indexOf","moment","format","validateEmail","email","String","match","thousandSeparator","x","toString","replace","handle401","async","window","location","href","clear","ExportCSV","array","CSVname","link","document","createElement","csv","join","forEach","ctr","key","convertArrayOfObjectsToCSV","userData","parse","filename","toISOString","replaceAll","setAttribute","encodeURI","click","currentPage","setCurrentPage","DataTable","noHeader","pagination","columns","paginationPerPage","sortIcon","ChevronDown","paginationDefaultPage","paginationComponent","CustomPagination","ReactPaginate","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","progressPending","progressComponent","responsive","pointerOnHover","highlightOnHover","striped","voucherstatus","operationstatus","Insert","Update","Delete","INSERT","UPDATE","DELETE","StatusSet","statusid","VoucherStatusSet","OperationStatusSet"],"mappings":"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","file":"static/js/340.84751e13.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState, useRef } from 'react'\nimport { Eye, Edit, Trash} from 'react-feather'\n// import CommonDataTable from '../../../../tables/data-tables/basic/AdminComponent/ClientSideDataTable'\nimport { subMenuIDs } from '../../../../../../../utility/Utils'\nimport { formatReadableDate } from '../../../../../../helper'\nimport { Badge, Row, Col, Label, Input } from 'reactstrap'\nimport { Error, Success, ErrorMessage } from '../../../../../../viewhelper'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport CommonDataTable from '../../ClientSideDataTable'\nimport { useHistory } from 'react-router-dom'\nconst MySwal = withReactContent(Swal)\n\nconst GroupList = ({datapackGroupList, rule_type, TableDataLoading, setrefresh, refresh, setgroupEditData}) => {\n    const history = useHistory()\n    const [searchValue, setSearchValue] = useState('')\n    const [filteredData, setFilteredData] = useState([])\n\n    const editDetails = (e, item) => {\n        localStorage.setItem('datapackInfo', JSON.stringify(item))\n        history.push('/editDatapack')\n    }\n\n    const deleteDetails = (e, item) => {\n        e.preventDefault()\n        return MySwal.fire({\n            title: 'Do you want to Delete',\n            text: `Information will be delete when another user will approve this operation.`,\n            icon: 'warning',\n            allowOutsideClick: false,\n            allowEscapeKey: false,\n            showCancelButton: true,\n            confirmButtonText: 'Yes',\n            customClass: {\n                confirmButton: 'btn btn-primary',\n                cancelButton: 'btn btn-danger ml-1'\n            },\n            showLoaderOnConfirm: true,\n            preConfirm: () => {\n                return useJwt.datapackGroupDelete({ id: item.id }).then(res => {\n                  \n                    console.log(res)\n                    Success({data: {message : res.data.message}})\n                    setrefresh(refresh + 1)\n                    \n                }).catch(err => {\n                    Error(err)\n                    console.log(err.response)\n                })\n            },\n            buttonsStyling: false,\n            allowOutsideClick: () => !Swal.isLoading()\n        }).then(function (result) {\n            if (result.isConfirmed) {\n    \n            }\n        })\n    }\n    // ** Function to handle filter\n    const handleFilter = e => {\n            const value = e.target.value\n            let updatedData = []\n            setSearchValue(value)\n    \n            if (value.length) {\n            updatedData = datapackGroupList.filter(item => {\n                const startsWith =\n                item.id?.toLowerCase().startsWith(value.toLowerCase()) ||\n                item.group_title?.toLowerCase().startsWith(value.toLowerCase())\n    \n                const includes =\n                item.id?.toLowerCase().includes(value.toLowerCase()) ||\n                item.group_title?.toLowerCase().includes(value.toLowerCase())\n    \n                if (startsWith) {\n                  return startsWith\n                } else if (!startsWith && includes) {\n                return includes\n                } else return null\n\n            })\n            setFilteredData(updatedData)\n           // setSearchValue(value)\n            }\n    }\n\n    const column = [\n        {\n            name: 'Group ID',\n            minWidth: '50px',\n            sortable: true,\n            selector: 'id',\n            wrap: true\n        },\n        {\n            name: 'Group Title',\n            minWidth: '150px',\n            sortable: true,\n            selector: 'group_title',\n            wrap: true\n        },\n        {\n            name: 'Operator',\n            minWidth: '50px',\n            sortable: true,\n            selector: row => {\n                return row?.group_items?.map(e => <div style={{padding:'5px 0', borderBottom:'1px solid #E0E0E0', width:'100px'}}>{e?.keyword}</div>)\n            }\n        },\n        {\n            name: 'Pack Code',\n            minWidth: '50px',\n            sortable: true,\n            wrap: true,\n            selector: row => {\n                return row?.group_items?.map(e => <div style={{padding:'5px 0', borderBottom:'1px solid #E0E0E0', width:'100px'}}>{e.pack_code || '--'}</div>)\n            }\n        },\n        {\n            name: 'Disburse-Unit',\n            minWidth: '50px',\n            sortable: true,\n            selector: row => {\n                return row?.group_items?.map(e => <div style={{padding:'5px 0', borderBottom:'1px solid #E0E0E0', width:'100px'}}>{`${e.number_of_time_api_hit} X` || '--'}</div>)\n            }\n        },\n        {\n            name: 'Modified By',\n            minWidth: '150px',\n            sortable: true,\n            selector: 'modified_by',\n            cell: (item) => {\n                return item.modified_by ? item.modified_by : item.created_by\n            },\n            wrap: true\n        },\n        {\n            name: 'Modified At',\n            minWidth: '170px',\n            sortable: true,\n            wrap: true,\n            sortType: (a, b) => {\n                return new Date(b.modified_at) - new Date(a.modified_at)\n              },\n            selector: 'modified_at',\n            cell: (item) => {\n                if (item.modified_at) {\n                    return  formatReadableDate(item.modified_at)\n                } else if (item.created_at) {\n                    return  formatReadableDate(item.created_at)\n\n                } else {\n                    return '--'\n                }\n            }\n        },\n        // {\n        //     name: 'Status',\n        //     minWidth: '60px',\n        //     sortable: true,\n        //     wrap: true,\n        //     selector: (item) => {\n        //         if (item.status === 1) {\n        //             return <Badge color= 'light-success'>Active</Badge>\n        //         }\n        //        return <Badge color= 'light-danger'>Pending</Badge>\n        //     }\n        // },\n        {\n            name: 'Action',\n            minWidth: '150px',\n            // sortable: true,\n            selector: row => {\n                return <>\n                    <span title=\"Edit\">\n                        <Edit size={15}\n                            color='#3b3acb'\n                            style={{ cursor: 'pointer' }}\n                            onClick={(e) => editDetails(e, row) }\n                        />\n                    </span> &nbsp;&nbsp;\n                    <span title=\"Delete\">\n                        <Trash size={15}\n                            color='red'\n                            style={{ cursor: 'pointer' }}\n                            onClick={(e) => deleteDetails(e, row) }\n                        />\n                    </span>\n                </>\n            }\n        }\n    ]\n\n    return (\n        <Fragment>\n\n            <Row className='justify-content-end mx-0'>\n                <Col className='d-flex align-items-center justify-content-end mt-1' sm='3'>\n                    <Label className='mr-1' for='search-input'>\n                    Search\n                    </Label>\n                    <Input\n                    className='dataTable-filter mb-50'\n                    type='text'\n                    bsSize='sm'\n                    id='search-input'\n                    value={searchValue}\n                    onChange={handleFilter}\n                    />\n                </Col>\n            </Row>\n            <Row>\n                <Col md='12'>\n                  <CommonDataTable column={column} TableData={ searchValue.length ? filteredData : datapackGroupList} TableDataLoading={TableDataLoading} />\n                </Col>\n            </Row>\n\n\n        </Fragment>\n    )\n}\n\nexport default GroupList","import React, { Fragment, useEffect, useState, useRef } from 'react'\nimport { Eye, Edit, Trash} from 'react-feather'\nimport CommonDataTable from '../../../../../../tables/data-tables/basic/AdminComponent/ClientSideDataTable'\nimport { subMenuIDs } from '../../../../../../../utility/Utils'\nimport { formatReadableDate } from '../../../../../../helper'\nimport { Badge } from 'reactstrap'\nimport { Error, Success, ErrorMessage } from '../../../../../../viewhelper'\nimport useJwt2 from '@src/auth/jwt/useJwt2'\nimport { OperationStatusSet } from '../../../../../../statusdb'\n\n\nconst MyPendingGroupList = ({datapackGroupList, rule_type, TableDataLoading, setgroupIdForView, setref_id}) => {\n    console.log(datapackGroupList)\n    const viewDetails = (e, item) => {\n\n        setref_id(item.ref_id)\n        setgroupIdForView(item.id)\n    }\n\n    const column = [\n\n        {\n            name: 'Group Title',\n            minWidth: '200px',\n            sortable: true,\n            selector: 'group_title',\n            wrap: true\n        },\n        {\n            name: 'Operator',\n            minWidth: '50px',\n            sortable: true,\n            selector: row => {\n                return row?.group_item?.map(e => <div style={{padding:'5px 0', borderBottom:'1px solid #E0E0E0', width:'100px'}}>{e?.keyword}</div>)\n            }\n        },\n        {\n            name: 'Pack Code',\n            minWidth: '50px',\n            sortable: true,\n            wrap: true,\n            selector: row => {\n                return row?.group_item?.map(e => <div style={{padding:'5px 0', borderBottom:'1px solid #E0E0E0', width:'100px'}}>{e.pack_code || '--'}</div>)\n            }\n        },\n        {\n            name: 'Disburse-Unit',\n            minWidth: '50px',\n            sortable: true,\n            selector: row => {\n                return row?.group_item?.map(e => <div style={{padding:'5px 0', borderBottom:'1px solid #E0E0E0', width:'100px'}}>{`${e.number_of_time_api_hit} X` || '--'}</div>)\n            }\n        },\n        {\n            name: 'Operation',\n            minWidth: '50px',\n            sortable: true,\n            selector: 'action'\n        },\n        // {\n        //     name: 'Created By',\n        //     minWidth: '150px',\n        //     sortable: true,\n        //     wrap: true,\n        //     selector: 'modified_by'\n        // },\n        {\n            name: 'Created At',\n            minWidth: '170px',\n            sortable: true,\n            wrap: true,\n            sortType: (a, b) => {\n                return new Date(b.modified_at) - new Date(a.modified_at)\n              },\n            selector: 'modified_at',\n            cell: (item) => {\n                return item.modified_at ? formatReadableDate(item.modified_at) : null\n            }\n        }\n    ]\n\n    return (\n        <Fragment>\n\n           <CommonDataTable column={column} TableData={ datapackGroupList} TableDataLoading={TableDataLoading} />\n\n        </Fragment>\n    )\n}\n\nexport default MyPendingGroupList","import useJwt from '@src/auth/jwt/useJwt'\nimport { useEffect, useState } from 'react'\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Modal, ModalBody, ModalHeader, Row, Spinner, Table } from 'reactstrap'\nimport { formatReadableDate } from '../../../../../../helper'\nimport { Error, Success } from '../../../../../../viewhelper'\n\nconst ViewDetailsModal = ({ modal, toggleModal, datapackInfo, setRefresh, refresh, action }) => {\n\nconst [roleWiseApprovedList, setRoleWiseApprovedList] = useState([])\nconst [addUserloading, setaddUserloading] = useState(false)\nconsole.log(datapackInfo)\n\nuseEffect(() => {\n    if (datapackInfo.id) {\n        useJwt.datapackGroupApprovalById(datapackInfo.id).then(res => {\n            console.log(res)\n            const itemArr = []\n            for (const item of res.data.payload.module_data.roles) {\n                const approvedby = res.data.payload.approved.find(i => i.role_id === item.role_id)\n                if (approvedby) {\n                    itemArr.push({role_id: item.role_name, approved_by: approvedby.approved_by, approved_at: approvedby.approved_at})\n                } else {\n                    itemArr.push({role_id: item.role_name, approved_by: '--', approved_at: ''})\n                }\n            }\n            setRoleWiseApprovedList(itemArr)\n        }).catch(err => {\n            console.log(err)\n            Error(err)\n        })\n    }\n}, [datapackInfo.id])\n\nconst handleApproveRejectActions = () => {\n    setaddUserloading(true)\n    useJwt.datapackGroupApprove({ id:datapackInfo.id, action_id: action }).then(res => {\n                setRefresh(!refresh)\n                Success(res)\n                setaddUserloading(false)\n                toggleModal()\n                console.log(res)\n            }).catch(err => {\n                // handle401(err.response.status)\n                console.log(err.response)\n                setaddUserloading(false)\n                toggleModal()\n                Error(err)\n            })\n}\n    return (\n        <Modal size=\"xl\" isOpen={modal} toggle={toggleModal} style={action === 1 ? {border:'2px solid green'} : action === 2 ? {border:'2px solid red'} : {}} >\n             <ModalHeader toggle={toggleModal}>{action === 1 ? 'Approve Datapack' : action === 2 ? 'Reject Datapack' : 'Datapack Details'}</ModalHeader>\n            <ModalBody>\n                <Row>\n                    <Col sm='12'>\n                            <Card>\n                                <CardHeader>\n                                    <CardTitle>Approval Entry</CardTitle>\n                                </CardHeader>\n                                <CardBody>\n                                    <Row>\n                                        <Col sm=\"12\" >\n                                            <Table>\n                                                <tr>\n                                                    <th>Role Name</th>\n                                                    <th>Approved By</th>\n                                                    <th>Approved At</th>\n                                                </tr>\n                                                {\n                                                    roleWiseApprovedList?.length !== 0 ? roleWiseApprovedList?.map((item, index) => <tr key={index}>\n                                                        <td>{item.role_id}</td>\n                                                        <td>{item.approved_by}</td>\n                                                        <td>{item.approved_at ? formatReadableDate(item.approved_at || '') : '--'}</td>\n                                                    </tr>) : <Spinner className='text-center'/>\n                                                }\n                                            </Table>\n                                        </Col>\n                                    </Row>\n                                </CardBody>\n                            </Card>`\n                        </Col>\n                </Row>\n\n                <Row>\n                    <Col sm=\"12\" className='text-center'>\n                        {\n                            addUserloading ? <Button.Ripple color='primary' className='mr-1' disabled style={{ marginTop: '25px' }}>\n                                <Spinner color='white' size='sm' />\n                                <span className='ml-50'>Loading...</span>\n                            </Button.Ripple> : <Button.Ripple className='ml-2' color='primary' onClick={handleApproveRejectActions} type=\"button\" style={{ marginTop: '25px' }}>\n                            <span >Confirm</span>\n                        </Button.Ripple>\n                        }\n                    </Col>\n                </Row>\n\n            </ModalBody>\n        </Modal>\n    )\n}\nexport default ViewDetailsModal","import React, { Fragment, useEffect, useState, useRef } from 'react'\nimport { Eye, Edit, Trash, CheckSquare, XSquare} from 'react-feather'\nimport { subMenuIDs } from '../../../../../../../utility/Utils'\nimport { formatReadableDate } from '../../../../../../helper'\nimport { Badge } from 'reactstrap'\nimport { Error, Success, ErrorMessage } from '../../../../../../viewhelper'\nimport useJwt2 from '@src/auth/jwt/useJwt2'\nimport { OperationStatusSet } from '../../../../../../statusdb'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nconst MySwal = withReactContent(Swal)\nimport DetailsModal from './ViewDetails'\nimport CommonDataTable from '../../ClientSideDataTable'\n\nconst NeedApproveGroupList = ({datapackGroupList, rule_type, TableDataLoading, refresh, setrefresh, setref_id}) => {\n    console.log(datapackGroupList)\n    const viewDetails = (e, item) => {\n\n        setref_id(item.ref_id)\n        datapackGroupList(item.id)\n    }\n\n    const [action, setAction] = useState(0)\n    const [datapackInfo, setDatapackInfo] = useState({})\n    const [modal, setModal] = useState(false)\n    const toggleModal = () => setModal(!modal)\n\n    const column = [\n        {\n            name: 'Group Title',\n            minWidth: '200px',\n            sortable: true,\n            selector: 'group_title',\n            wrap: true\n        },\n        {\n            name: 'Operator',\n            minWidth: '50px',\n            sortable: true,\n            selector: row => {\n                return row?.group_item?.map(e => <div style={{padding:'5px 0', borderBottom:'1px solid #E0E0E0', width:'100px'}}>{e?.keyword}</div>)\n            }\n        },\n        {\n            name: 'Pack Code',\n            minWidth: '50px',\n            sortable: true,\n            selector: row => {\n                return row?.group_item?.map(e => <div style={{padding:'5px 0', borderBottom:'1px solid #E0E0E0', width:'100px'}}>{e.pack_code || '--'}</div>)\n            }\n        },\n        {\n            name: 'Disburse-Unit',\n            minWidth: '50px',\n            sortable: true,\n            selector: row => {\n                return row?.group_item?.map(e => <div style={{padding:'5px 0', borderBottom:'1px solid #E0E0E0', width:'100px'}}>{`${e.number_of_time_api_hit} X` || '--'}</div>)\n            }\n        },\n        {\n            name: 'Operation',\n            minWidth: '50px',\n            sortable: true,\n            selector: 'action'\n        },\n        {\n            name: 'Modified By',\n            minWidth: '150px',\n            sortable: true,\n            selector: 'modified_by',\n            wrap: true\n        },\n        {\n            name: 'Modified At',\n            minWidth: '170px',\n            sortable: true,\n            wrap: true,\n            sortType: (a, b) => {\n                return new Date(b.modified_at) - new Date(a.modified_at)\n              },\n            selector: 'modified_at',\n            cell: (item) => {\n                return item.modified_at ? formatReadableDate(item.modified_at) : null\n            }\n        },\n        {\n            name: 'Action',\n            minWidth: '150px',\n            // sortable: true,\n            selector: row => {\n                return <>\n                        <span title=\"Approve\">\n                        <CheckSquare size={15}\n                            color='teal'\n                            style={{ cursor: 'pointer' }}\n                            // onClick={(e) => handlePoPupActions(row.id, 'Do you want to approve?', 1)}\n                            onClick={() => {\n                                setDatapackInfo(row)\n                                setModal(true)\n                                setAction(1)\n                            }}\n                        />\n                    </span>&nbsp;&nbsp;\n                    <span title=\"Reject\">\n                        <XSquare size={15}\n                            color='red'\n                            style={{ cursor: 'pointer' }}\n                            // onClick={(e) => handlePoPupActions(row.id, 'Do you want to reject?', 2)}\n                            onClick={(e) => {\n                                setDatapackInfo(row)\n                                setModal(true)\n                                setAction(2)\n                            }}\n                        />\n                    </span>\n                </>\n            }\n        }\n    ]\n\n    return (\n        <Fragment>\n\n           <CommonDataTable column={column} TableData={ datapackGroupList} TableDataLoading={TableDataLoading} />\n           <DetailsModal \n                modal={modal}\n                toggleModal={toggleModal}\n                datapackInfo={datapackInfo} \n                refresh={refresh}\n                setRefresh={setrefresh}\n                action={action}  \n            /> \n        </Fragment>\n    )\n}\n\nexport default NeedApproveGroupList","import React, { Fragment, useEffect, useState } from 'react'\nimport {ChevronDown, Share, Printer, FileText, File, Grid, CheckCircle, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft, RefreshCw} from 'react-feather'\nimport {Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink, InputGroup, InputGroupAddon, InputGroupText, CustomInput} from 'reactstrap'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport useJwt2 from '@src/auth/jwt/useJwt2'\nimport { Link, useHistory } from 'react-router-dom'\nimport { subMenuIDs } from '../../../../../../../utility/Utils'\nimport GroupList from './GroupList'\nimport MyPendingGroupList from './MyPendingGroupList'\nimport NeedApproveGroupList from './NeedApproveGroupList'\n// import SKURuleEditPage from './EditSkuRule'\n// import ViewTempDetails from './ViewTempDetails'\nimport { Error, Success, ErrorMessage } from '../../../../../../viewhelper'\nconst DatapackGroup = () => {\n    const userName = localStorage.getItem('username')\n    const [datapackGroupList, setDatapackGroupList] = useState([])\n    const [myPendingList, setMyPendingList] = useState([])\n    const [approvepending, setapprovepending] = useState([])\n    const [TableDataLoading, setTableDataLoading] = useState(true)\n    const [groupEditData, setgroupEditData] = useState(null)\n    const [groupIdForView, setgroupIdForView] = useState(null)\n    const [ref_id, setref_id] = useState(null)\n\n    const [refresh, setrefresh] = useState(false)\n    const [activeTab, setActiveTab] = useState('1')\n    // ** Function to toggle tabs\n    const toggle = tab => setActiveTab(tab)\n\n    // is_sku_rule = true then rule_type = 1\n    // is_global_rule = true then rule_type = 2\n    // is_service_rule = true then rule_type = 3\n\n    useEffect(() => {\n\n        Promise.all([\n            useJwt.datapackGroupList().then(res => {\n                console.log('datapack', res)\n                setTableDataLoading(false)\n                setDatapackGroupList(res.data.payload)\n            }).catch(err => {\n                Error(err)\n                console.log(err)\n                setTableDataLoading(false)\n            }),\n    \n            useJwt2.datapackGroupMyPendingList().then(res => {\n                setMyPendingList(res.data.payload)\n            }).catch(err => {\n                Error(err)\n                console.log(err)\n                setTableDataLoading(false)\n            }),\n            useJwt2.datapackGroupOtherPendingList().then(res => {\n                setapprovepending(res.data.payload)\n            }).catch(err => {\n                Error(err)\n                console.log(err)\n                setTableDataLoading(false)\n            })\n        ])\n  \n\n        // useJwt.datapackGroupPendingList().then(res => {\n        //     const myPending = []\n        //     const othersPending = []\n        //     for (const item of res.data.payload) {\n        //         if (item.modified_by === userName) {\n        //             myPending.push(item)\n        //         } else {\n        //             othersPending.push(item)\n        //         }\n        //     }\n        //     setTableDataLoading(false)\n        //     setMyPendingList([...myPending])\n        //     setapprovepending([...othersPending])\n        // }).catch(err => {\n        //     Error(err)\n        //     console.log(err)\n        //     setTableDataLoading(false)\n        // })\n\n    }, [refresh])\n\n  \n    return (\n        <Fragment>\n            {\n                groupEditData ? <SKURuleEditPage refresh={refresh} setrefresh={setrefresh}  groupEditData={groupEditData} setgroupEditData={setgroupEditData} /> : groupIdForView ? < ViewTempDetails setgroupIdForView={setgroupIdForView} groupIdForView={groupIdForView} ref_id={ref_id}/> : <Fragment>\n                <Card>\n               <CardHeader>\n                   <Nav tabs>\n                   <NavItem>\n                       <NavLink active={activeTab === '1'} onClick={() => toggle('1')}>\n                       <span className='align-middle d-none d-sm-block'>Datapack Group List</span>\n                       </NavLink>\n                   </NavItem>\n                   {subMenuIDs.includes(34) && <NavItem>\n                       <NavLink active={activeTab === '2'} onClick={() => toggle('2')}>\n                       <span className='align-middle d-none d-sm-block'>My Pending</span>\n                       </NavLink>\n                   </NavItem>}\n                   {subMenuIDs.includes(34) && <NavItem>\n                       <NavLink active={activeTab === '3'} onClick={() => toggle('3')}>\n                       <span className='align-middle d-none d-sm-block'>Approve</span>\n                       </NavLink>\n                   </NavItem>}\n                   </Nav>\n               </CardHeader>\n               </Card>\n               <Card>\n               <TabContent activeTab={activeTab}>\n                 <TabPane tabId='1'>\n                   <Card>\n                       <CardHeader className='border-bottom'>\n                           <CardTitle tag='h4'>Datapack-Group</CardTitle>\n                           <div>\n                           {subMenuIDs.includes(16) && <Button.Ripple className='ml-2' color='primary' tag={Link} to='/createDatapack' >\n                               <div className='d-flex align-items-center'>\n                                   <Plus size={17} style={{ marginRight: '5px' }} />\n                                   <span >Create Datapack Group</span>\n                               </div>\n                           </Button.Ripple>}\n                   \n                           </div>\n                       </CardHeader>\n   \n                           <GroupList datapackGroupList={datapackGroupList} TableDataLoading={TableDataLoading} refresh={refresh} setrefresh={setrefresh} setgroupEditData={setgroupEditData}/>\n                   </Card>\n                 </TabPane>\n                 <TabPane tabId='2'>\n   \n                      <MyPendingGroupList datapackGroupList={myPendingList} TableDataLoading={TableDataLoading} setgroupIdForView={setgroupIdForView} setref_id={setref_id}/>\n                \n                 </TabPane>\n   \n                 <TabPane tabId='3'>\n   \n                   <NeedApproveGroupList datapackGroupList={approvepending} TableDataLoading={TableDataLoading} refresh={refresh} setrefresh={setrefresh} setgroupIdForView={setgroupIdForView} setref_id={setref_id}/>\n   \n                 </TabPane>\n               </TabContent>\n           </Card>\n           </Fragment>\n            }\n        </Fragment>\n        \n    )\n}\n\nexport default DatapackGroup","import { Fragment, useState } from 'react'\nimport { toast, Slide } from 'react-toastify'\n\n    export const Error = (err) => {\n        try {\n            const e = err.response\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500 || e.status === 409) {\n                toast.error(e.data.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n            } else  {\n                toast.error('The server is under maintenance', {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                    }) \n            }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        }\n \n    }\n\n    export const ErrorMessage = (err) => {\n        try {\n        const e = err.response\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n         }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        } \n    }\n    export const Success = (response) => {\n        const message = response.data.message || 'success'\n        toast.success(message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n    }\n\n","import moment from 'moment'\n\n//Ex-> '1234567891' to '1234 567 891'\nexport const FormatePhoneNo = (phone) => {\n    const phonenoinstring = String(phone)\n    return phonenoinstring.replace(/^(.{4})(.*)(.{3})$/, '$1 $2 $3')\n}\n\nconst options = { year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' }\n\nexport const formatReadableDate = (date) => { return (new Date(date)).toLocaleDateString(undefined, options) }\n\nexport const getHumanReadableDate = (datetime) => { \n    // let datetime = '2024-06-18T23:25:06.754Z'\n    // let datetime = '2024-07-25 00:05:57.358246+06'\n\n    // Remove the 'Z' at the end if it exists\n    if (datetime.endsWith('Z')) {\n        datetime = datetime.slice(0, -1)\n    }\n    // Find the position of the '+' sign\n    const plusIndex = datetime.indexOf('+')\n\n    // Remove the time zone offset if it exists\n    if (plusIndex !== -1) {\n        datetime = datetime.slice(0, plusIndex)\n    }\n\n    return moment(datetime).format('MMMM D, YYYY [at] h:mm A')\n }\n\nexport const validateEmail = (email) => {\n    return String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)\n}\n\nexport const thousandSeparator = (x) => { return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") }\n\nexport const handle401 = async (status) => {\n    if (status === 401) {\n        window.location.href = '/Adminlogin'\n        await localStorage.clear()\n    }\n}\n\nexport const ExportCSV = (array, keys, CSVname) => {\n    // ** Downloads CSV\n    // const keys = ['name', 'email', 'mobile']\n    // ** Converts table to CSV\n    function convertArrayOfObjectsToCSV(array) {\n        let result\n        const columnDelimiter = ','\n        const lineDelimiter = '\\n'\n        result = ''\n        result += keys.join(columnDelimiter)\n        result += lineDelimiter\n\n        array.forEach(item => {\n            let ctr = 0\n            keys.forEach(key => {\n                if (ctr > 0) result += columnDelimiter\n                result += item[key]\n                ctr++\n            })\n            result += lineDelimiter\n        })\n        return result\n    }\n    const link = document.createElement('a')\n    let csv = convertArrayOfObjectsToCSV(array)\n    if (csv === null) return\n    const userData = JSON.parse(localStorage.getItem('userData'))\n    const filename = `${CSVname}_${new Date().toISOString()}_${userData['fullname'].replaceAll(/\\s/g, '')}.csv`\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n        csv = `data:text/csv;charset=utf-8,${csv}`\n    }\n\n    link.setAttribute('href', encodeURI(csv))\n    link.setAttribute('download', filename)\n    link.click()\n}","import React, { Fragment, useState, useEffect } from 'react'\nimport {\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft\n} from 'react-feather'\nimport {\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink\n} from 'reactstrap'\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\n\nconst CommonDataTable = ({ column, TableData, TableDataLoading }) => {\n    const [currentPage, setCurrentPage] = useState(0)\n\n    // ** Function to handle Pagination\n    const handlePagination = page => {\n        setCurrentPage(page.selected)\n    }\n    // ** Custom Pagination\n    const CustomPagination = () => (\n        <ReactPaginate\n            previousLabel=''\n            nextLabel=''\n            forcePage={currentPage}\n            onPageChange={page => handlePagination(page)}\n            pageCount={TableData.length ? TableData.length / 10 : 1}\n            breakLabel='...'\n            pageRangeDisplayed={2}\n            marginPagesDisplayed={2}\n            activeClassName='active'\n            pageClassName='page-item'\n            breakClassName='page-item'\n            breakLinkClassName='page-link'\n            nextLinkClassName='page-link'\n            nextClassName='page-item next'\n            previousClassName='page-item prev'\n            previousLinkClassName='page-link'\n            pageLinkClassName='page-link'\n            containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n        />\n    )\n    return (\n        <Fragment>\n\n            <DataTable\n                noHeader\n                pagination\n                columns={column}\n                paginationPerPage={10}\n                className='react-dataTable'\n                sortIcon={<ChevronDown size={10} />}\n                paginationDefaultPage={currentPage + 1}\n                paginationComponent={CustomPagination}\n                data={TableData}\n                progressPending={TableDataLoading}\n                progressComponent={<Spinner color='primary' />}\n                responsive={true}\n                pointerOnHover\n                highlightOnHover\n                striped\n            />\n             \n        </Fragment>\n    )\n}\n\nexport default CommonDataTable","\nconst status = {\n  1: { title: 'Active', color: 'light-success ' },\n  0: { title: 'Pending', color: 'light-primary' },\n  5: { title: 'Stopped', color: 'light-danger' },\n  11: { title: 'Unpaid', color: 'light-primary' }\n}\n\nconst voucherstatus = {\n  1: { title: 'Active', color: 'light-success ' },\n  0: { title: 'In-Active', color: 'light-primary' }\n}\n\nconst operationstatus = {\n  Insert: { title: 'Insert', color: 'light-success ' },\n  Update: { title: 'Update', color: 'light-primary' },\n  Delete: { title: 'Delete', color: 'light-danger' },\n\n  INSERT: { title: 'INSERT', color: 'light-success ' },\n  UPDATE: { title: 'UPDATE', color: 'light-primary' },\n  DELETE: { title: 'DELETE', color: 'light-danger' }\n}\nexport const StatusSet = (statusid) => {\n   return status[statusid] || { title: 'N/A', color: 'light-danger' }\n}\n\nexport const VoucherStatusSet = (statusid) => {\n  return voucherstatus[statusid] || { title: 'N/A', color: 'light-danger' }\n}\n\nexport const OperationStatusSet = (statusid) => {\n  return operationstatus[statusid] || { title: 'N/A', color: 'light-danger' }\n}"],"sourceRoot":""}