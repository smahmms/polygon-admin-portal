{"version":3,"sources":["views/extensions/drag-and-drop/DndClone.js","views/extensions/drag-and-drop/DndCards.js","views/extensions/drag-and-drop/DndHandle.js","views/extensions/drag-and-drop/DndMultiple.js","views/extensions/drag-and-drop/DndMultiDrag.js","views/extensions/drag-and-drop/DndListGroup.js","views/extensions/drag-and-drop/index.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Col.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardText.js","@core/components/extensions-header/index.js"],"names":["DndClone","list","setList","useState","text","color","list2","setList2","_jsxs","Card","children","_jsx","CardHeader","CardTitle","tag","CardBody","CardText","Row","Col","md","sm","className","ReactSortable","group","name","pull","map","item","Badge","pill","dragItems","id","title","content","DndCards","cardsArr","setCardsArr","xl","concat","array","DndMultiple","listArr1","setListArr1","listArr2","setListArr2","handle","ListGroupItem","list1","img","img1","img2","img3","img4","img5","img6","img7","img8","img9","img10","Media","left","object","src","alt","height","width","body","DndMultiDrag","multiDrag","listItems","DndListGroup","listArr","setListArr","DragAndDrop","Fragment","ExtensionsHeader","subTitle","link","DndHandle","propTypes","tagPropType","PropTypes","string","cssModule","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","innerRef","oneOfType","func","ref","rowColsPropType","number","noGutters","bool","form","xs","lg","widths","colClasses","forEach","colWidth","i","colSize","isXs","push","stringOrNumberProp","columnProps","shape","size","order","offset","getColumnSizeClass","columnProp","isObject","_classNames","colSizeInterfix","colClass","_colClass","length","inverse","outline","href","target","rel"],"mappings":"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","file":"static/js/245.c8f4d416.chunk.js","sourcesContent":["import { useState } from 'react'\nimport { ReactSortable } from 'react-sortablejs'\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, Badge } from 'reactstrap'\n\nconst DndClone = () => {\n  const source1 = [\n    {\n      text: 'Youtube',\n      color: 'light-secondary'\n    },\n    {\n      text: 'Facebook',\n      color: 'light-primary'\n    },\n    {\n      text: 'Google',\n      color: 'light-success'\n    },\n    {\n      text: 'Instagram',\n      color: 'light-danger'\n    },\n    {\n      text: 'Twitter',\n      color: 'light-info'\n    },\n    {\n      text: 'Discord',\n      color: 'light-warning'\n    }\n  ]\n  const source2 = [\n    {\n      text: 'Github',\n      color: 'light-secondary'\n    },\n    {\n      text: 'Gitlab',\n      color: 'light-primary'\n    },\n    {\n      text: 'Slack',\n      color: 'light-success'\n    },\n    {\n      text: 'Pinterest',\n      color: 'light-danger'\n    },\n    {\n      text: 'Tinder',\n      color: 'light-info'\n    },\n    {\n      text: 'Amazon',\n      color: 'light-warning'\n    }\n  ]\n\n  const [list, setList] = useState(source1)\n  const [list2, setList2] = useState(source2)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Clone List</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <CardText>\n          Add <code>pull:clone</code> with your group prop to clone items.\n        </CardText>\n        <Row>\n          <Col md='6' sm='12'>\n            <h4 className='my-1'>Badge Source 1</h4>\n            <ReactSortable\n              className='demo-inline-spacing sortable'\n              group={{ name: 'shared-badge-group', pull: 'clone' }}\n              list={list}\n              setList={setList}\n            >\n              {list.map(item => {\n                return (\n                  <Badge className='draggable' key={item.text} color={item.color} pill>\n                    {item.text}\n                  </Badge>\n                )\n              })}\n            </ReactSortable>\n          </Col>\n          <Col md='6' sm='12'>\n            <h4 className='my-1'>Badge Source 2</h4>\n            <ReactSortable\n              className='demo-inline-spacing sortable'\n              group={{ name: 'shared-badge-group', pull: 'clone' }}\n              list={list2}\n              setList={setList2}\n            >\n              {list2.map(item => {\n                return (\n                  <Badge className='draggable' key={item.text} color={item.color} pill>\n                    {item.text}\n                  </Badge>\n                )\n              })}\n            </ReactSortable>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default DndClone\n","import { useState } from 'react'\nimport { ReactSortable } from 'react-sortablejs'\nimport { Card, CardHeader, CardBody, CardTitle, CardText, Col } from 'reactstrap'\n\nconst dragItems = [\n  {\n    id: '1',\n    title: 'Draggable Card 1',\n    content:\n      'Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.'\n  },\n  {\n    id: '2',\n    title: 'Draggable Card 2',\n    content:\n      'Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.'\n  },\n  {\n    id: '3',\n    title: 'Draggable Card 3',\n    content:\n      'Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.'\n  },\n  {\n    id: '4',\n    title: 'Draggable Card 4',\n    content:\n      'Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.'\n  }\n]\n\nconst DndCards = () => {\n  const [cardsArr, setCardsArr] = useState(dragItems)\n\n  return (\n    <ReactSortable className='row sortable-row' list={cardsArr} setList={setCardsArr}>\n      {cardsArr.map(item => (\n        <Col className='draggable' xl='3' md='6' sm='12' key={item.id}>\n          <Card className={`draggable-cards ${item.id !== 4 ? 'mr-1' : null}`}>\n            <CardHeader>\n              <CardTitle tag='h4'>{item.title}</CardTitle>\n            </CardHeader>\n            <CardBody>\n              <CardText>{item.content}</CardText>\n            </CardBody>\n          </Card>\n        </Col>\n      ))}\n    </ReactSortable>\n  )\n}\n\nexport default DndCards\n","import { useState } from 'react'\nimport { ReactSortable } from 'react-sortablejs'\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, ListGroupItem } from 'reactstrap'\n\nconst array = {\n  list1: [\n    {\n      id: '1',\n      content: 'Cras justo odio'\n    },\n    {\n      id: '2',\n      content: 'Dapibus ac facilisis in'\n    },\n    {\n      id: '3',\n      content: 'Morbi leo risus'\n    },\n    {\n      id: '4',\n      content: 'Porta ac consectetur ac'\n    },\n    {\n      id: '5',\n      content: 'Vestibulum at eros'\n    }\n  ],\n  list2: [\n    {\n      id: '6',\n      content: 'Cras justo odio'\n    },\n    {\n      id: '7',\n      content: 'Dapibus ac facilisis in'\n    },\n    {\n      id: '8',\n      content: 'Morbi leo risus'\n    },\n    {\n      id: '9',\n      content: 'Porta ac consectetur ac'\n    },\n    {\n      id: '10',\n      content: 'Vestibulum at eros'\n    }\n  ]\n}\n\nconst DndMultiple = () => {\n  const [listArr1, setListArr1] = useState(array.list1)\n  const [listArr2, setListArr2] = useState(array.list2)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Drag And Drop With Handle</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <CardText>\n          Add handle to your items using <code>handle</code> prop.\n        </CardText>\n        <Row id='dd-with-handle'>\n          <Col md='6' sm='12'>\n            <h4 className='my-1'>List One</h4>\n            <ReactSortable\n              tag='ul'\n              className='list-group sortable'\n              group='shared-handle-group'\n              handle='.handle'\n              list={listArr1}\n              setList={setListArr1}\n            >\n              {listArr1.map(item => {\n                return (\n                  <ListGroupItem className='draggable' key={item.id}>\n                    <span className='handle'>+</span>\n                    {item.content}\n                  </ListGroupItem>\n                )\n              })}\n            </ReactSortable>\n          </Col>\n          <Col md='6' sm='12'>\n            <h4 className='my-1'>People Group 2</h4>\n            <ReactSortable\n              tag='ul'\n              className='list-group sortable'\n              group='shared-handle-group'\n              handle='.handle'\n              list={listArr2}\n              setList={setListArr2}\n            >\n              {listArr2.map(item => {\n                return (\n                  <ListGroupItem className='draggable' key={item.id}>\n                    <span className='handle'>+</span>\n                    {item.content}\n                  </ListGroupItem>\n                )\n              })}\n            </ReactSortable>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default DndMultiple\n","import { useState } from 'react'\nimport { ReactSortable } from 'react-sortablejs'\nimport img1 from '@src/assets/images/portrait/small/avatar-s-12.jpg'\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\nimport img3 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\nimport img4 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\nimport img5 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\nimport img6 from '@src/assets/images/portrait/small/avatar-s-5.jpg'\nimport img7 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\nimport img8 from '@src/assets/images/portrait/small/avatar-s-7.jpg'\nimport img9 from '@src/assets/images/portrait/small/avatar-s-8.jpg'\nimport img10 from '@src/assets/images/portrait/small/avatar-s-9.jpg'\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, ListGroupItem, Media } from 'reactstrap'\n\nconst array = {\n  list1: [\n    {\n      id: '1',\n      img: img1,\n      name: 'Mary S. Navarre',\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\n    },\n    {\n      id: '2',\n      img: img2,\n      name: 'Samuel M. Ellis',\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\n    },\n    {\n      id: '3',\n      img: img3,\n      name: 'Sandra C. Toney',\n      content: 'Sugar plum fruitcake gummies marzipan liquorice tiramisu. Pastry liquorice chupa.'\n    },\n    {\n      id: '4',\n      img: img4,\n      name: 'Cleveland C. Goins',\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\n    },\n    {\n      id: '5',\n      img: img5,\n      name: 'Linda M. English',\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\n    }\n  ],\n  list2: [\n    {\n      id: '6',\n      img: img6,\n      name: 'Alexandria I. Smelser',\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\n    },\n    {\n      id: '7',\n      img: img7,\n      name: 'Oscar N. Pool',\n      content: 'Sugar plum fruitcake gummies marzipan liquorice tiramisu. Pastry liquorice chupsake.'\n    },\n    {\n      id: '8',\n      img: img8,\n      name: 'Kathy A. Alvarado',\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\n    },\n    {\n      id: '9',\n      img: img9,\n      name: 'James E. White',\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\n    },\n    {\n      id: '10',\n      img: img10,\n      name: 'Roberta R. Babin',\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\n    }\n  ]\n}\n\nconst DndMultiple = () => {\n  const [listArr1, setListArr1] = useState(array.list1)\n  const [listArr2, setListArr2] = useState(array.list2)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Multiple Lists</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <CardText>\n          Use <code>group</code> prop to create a multiple list Drag & Drop.\n        </CardText>\n        <Row>\n          <Col md='6' sm='12'>\n            <h4 className='my-1'>People Group 1</h4>\n            <ReactSortable\n              tag='ul'\n              className='list-group list-group-flush sortable'\n              group='shared-group'\n              list={listArr1}\n              setList={setListArr1}\n            >\n              {listArr1.map(item => {\n                return (\n                  <ListGroupItem className='draggable' key={item.id}>\n                    <Media>\n                      <Media left tag='div'>\n                        <Media\n                          object\n                          src={item.img}\n                          className='rounded-circle mr-2'\n                          alt='Generic placeholder image'\n                          height='50'\n                          width='50'\n                        />\n                      </Media>\n                      <Media body>\n                        <h5 className='mt-0'>{item.name}</h5>\n                        {item.content}\n                      </Media>\n                    </Media>\n                  </ListGroupItem>\n                )\n              })}\n            </ReactSortable>\n          </Col>\n          <Col md='6' sm='12'>\n            <h4 className='my-1'>People Group 2</h4>\n            <ReactSortable\n              tag='ul'\n              className='list-group list-group-flush sortable'\n              group='shared-group'\n              list={listArr2}\n              setList={setListArr2}\n            >\n              {listArr2.map(item => {\n                return (\n                  <ListGroupItem className='draggable' key={item.id}>\n                    <Media>\n                      <Media left tag='div'>\n                        <Media\n                          object\n                          src={item.img}\n                          className='rounded-circle mr-2'\n                          alt='Generic placeholder image'\n                          height='50'\n                          width='50'\n                        />\n                      </Media>\n                      <Media body>\n                        <h5 className='mt-0'>{item.name}</h5>\n                        {item.content}\n                      </Media>\n                    </Media>\n                  </ListGroupItem>\n                )\n              })}\n            </ReactSortable>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default DndMultiple\n","import { useState } from 'react'\nimport img1 from '@src/assets/images/portrait/small/avatar-s-12.jpg'\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\nimport img3 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\nimport img4 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\nimport img5 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\nimport img6 from '@src/assets/images/portrait/small/avatar-s-5.jpg'\nimport img7 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\nimport img8 from '@src/assets/images/portrait/small/avatar-s-7.jpg'\nimport img9 from '@src/assets/images/portrait/small/avatar-s-8.jpg'\nimport img10 from '@src/assets/images/portrait/small/avatar-s-9.jpg'\nimport { ReactSortable, Sortable, MultiDrag } from 'react-sortablejs'\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, ListGroupItem, Media } from 'reactstrap'\n\nconst array = {\n  list1: [\n    {\n      id: '1',\n      img: img1,\n      name: 'Mary S. Navarre',\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\n    },\n    {\n      id: '2',\n      img: img2,\n      name: 'Samuel M. Ellis',\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\n    },\n    {\n      id: '3',\n      img: img3,\n      name: 'Sandra C. Toney',\n      content: 'Sugar plum fruitcake gummies marzipan liquorice tiramisu. Pastry liquorice chupa.'\n    },\n    {\n      id: '4',\n      img: img4,\n      name: 'Cleveland C. Goins',\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\n    },\n    {\n      id: '5',\n      img: img5,\n      name: 'Linda M. English',\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\n    }\n  ],\n  list2: [\n    {\n      id: '6',\n      img: img6,\n      name: 'Alexandria I. Smelser',\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\n    },\n    {\n      id: '7',\n      img: img7,\n      name: 'Oscar N. Pool',\n      content: 'Sugar plum fruitcake gummies marzipan liquorice tiramisu. Pastry liquorice chupsake.'\n    },\n    {\n      id: '8',\n      img: img8,\n      name: 'Kathy A. Alvarado',\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\n    },\n    {\n      id: '9',\n      img: img9,\n      name: 'James E. White',\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\n    },\n    {\n      id: '10',\n      img: img10,\n      name: 'Roberta R. Babin',\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\n    }\n  ]\n}\n\n// Sortable.mount(new MultiDrag())\nconst DndMultiDrag = () => {\n  const [listArr1, setListArr1] = useState(array.list1)\n  const [listArr2, setListArr2] = useState(array.list2)\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Multiple Drag</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <CardText>\n          Use <code>MultiDrag</code> prop to create a multiple drag list.\n        </CardText>\n        <CardText>\n          Use <code>CTRL</code> key to select multiple items.\n        </CardText>\n        <Row>\n          <Col md='6' sm='12'>\n            <h4 className='my-1'>People Group 1</h4>\n            <ReactSortable\n              tag='ul'\n              multiDrag\n              className='list-group list-group-flush sortable'\n              group='shared-multi-drag-group'\n              list={listArr1}\n              setList={setListArr1}\n            >\n              {listArr1.map(item => {\n                return (\n                  <ListGroupItem className='draggable' key={item.id}>\n                    <Media>\n                      <Media left tag='div'>\n                        <Media\n                          object\n                          src={item.img}\n                          className='rounded-circle mr-2'\n                          alt='Generic placeholder image'\n                          height='50'\n                          width='50'\n                        />\n                      </Media>\n                      <Media body>\n                        <h5 className='mt-0'>{item.name}</h5>\n                        {item.content}\n                      </Media>\n                    </Media>\n                  </ListGroupItem>\n                )\n              })}\n            </ReactSortable>\n          </Col>\n          <Col md='6' sm='12'>\n            <h4 className='my-1'>People Group 2</h4>\n            <ReactSortable\n              tag='ul'\n              className='list-group list-group-flush sortable'\n              group='shared-multi-drag-group'\n              list={listArr2}\n              setList={setListArr2}\n            >\n              {listArr2.map(item => {\n                return (\n                  <ListGroupItem className='draggable' key={item.id}>\n                    <Media>\n                      <Media left tag='div'>\n                        <Media\n                          object\n                          src={item.img}\n                          className='rounded-circle mr-2'\n                          alt='Generic placeholder image'\n                          height='50'\n                          width='50'\n                        />\n                      </Media>\n                      <Media body>\n                        <h5 className='mt-0'>{item.name}</h5>\n                        {item.content}\n                      </Media>\n                    </Media>\n                  </ListGroupItem>\n                )\n              })}\n            </ReactSortable>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default DndMultiDrag\n","import { useState } from 'react'\nimport { ReactSortable } from 'react-sortablejs'\nimport img1 from '@src/assets/images/portrait/small/avatar-s-12.jpg'\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\nimport img3 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\nimport img4 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\nimport img5 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\nimport { Card, CardHeader, CardTitle, CardBody, CardText, ListGroupItem, Media } from 'reactstrap'\n\nconst listItems = [\n  {\n    id: '1',\n    img: img1,\n    name: 'Mary S. Navarre',\n    content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\n  },\n  {\n    id: '2',\n    img: img2,\n    name: 'Samuel M. Ellis',\n    content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\n  },\n  {\n    id: '3',\n    img: img3,\n    name: 'Sandra C. Toney',\n    content: 'Sugar plum fruitcake gummies marzipan liquorice tiramisu. Pastry liquorice chupa chupsake.'\n  },\n  {\n    id: '4',\n    img: img4,\n    name: 'Cleveland C. Goins',\n    content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\n  },\n  {\n    id: '5',\n    img: img5,\n    name: 'Linda M. English',\n    content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\n  }\n]\n\nconst DndListGroup = () => {\n  const [listArr, setListArr] = useState(listItems)\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Basic List Group Sortable</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <CardText>\n          The most basic list group is simply an unordered list with list items, and the proper classes.\n        </CardText>\n        <ReactSortable tag='ul' className='list-group' list={listArr} setList={setListArr}>\n          {listArr.map(item => {\n            return (\n              <ListGroupItem key={item.name}>\n                <Media>\n                  <Media left tag='div'>\n                    <Media\n                      object\n                      src={item.img}\n                      className='rounded-circle mr-2'\n                      alt='Generic placeholder image'\n                      height='50'\n                      width='50'\n                    />\n                  </Media>\n                  <Media body>\n                    <h5 className='mt-0'>{item.name}</h5>\n                    {item.content}\n                  </Media>\n                </Media>\n              </ListGroupItem>\n            )\n          })}\n        </ReactSortable>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default DndListGroup\n","import { Fragment } from 'react'\nimport DndClone from './DndClone'\nimport DndCards from './DndCards'\nimport DndHandle from './DndHandle'\nimport { Row, Col } from 'reactstrap'\nimport DndMultiple from './DndMultiple'\nimport DndMultiDrag from './DndMultiDrag'\nimport DndListGroup from './DndListGroup'\nimport ExtensionsHeader from '@components/extensions-header'\n\nimport '@styles/react/libs/drag-and-drop/drag-and-drop.scss'\n\nconst DragAndDrop = () => {\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='React Sortablejs'\n        subTitle='Sortablejs wrapper for React'\n        link='https://github.com/SortableJS/react-sortablejs'\n      />\n      <Row>\n        <Col sm='12'>\n          <DndCards />\n        </Col>\n        <Col sm='12'>\n          <DndListGroup />\n        </Col>\n        <Col sm='12'>\n          <DndMultiple />\n        </Col>\n        <Col sm='12'>\n          <DndClone />\n        </Col>\n        <Col sm='12'>\n          <DndHandle />\n        </Col>\n        <Col sm='12'>\n          <DndMultiDrag />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default DragAndDrop\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.propTypes = propTypes;\nCardText.defaultProps = defaultProps;\nexport default CardText;","// ** React Imports\nimport Proptypes from 'prop-types'\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ml-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired,\n  link: Proptypes.string\n}\n"],"sourceRoot":""}