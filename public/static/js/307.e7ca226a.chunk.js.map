{"version":3,"sources":["views/pages/authentication/MerchentSetPassword.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Col.js","../node_modules/reactstrap/es/Spinner.js","../node_modules/reactstrap/es/CardText.js","@core/components/input-password-toggle/index.js"],"names":["MerchantLogin","skin","setSkin","useSkin","history","useContext","AbilityContext","useDispatch","useHistory","password","setPassword","useState","conPassword","setConfromPassword","loading","setloading","servererrors","seterrors","register","errors","handleSubmit","useForm","illustration","source","require","concat","default","_jsx","className","children","_jsxs","Row","Link","to","onClick","e","preventDefault","src","dpaylogo","Col","lg","sm","alt","md","CardTitle","tag","CardText","Form","onSubmit","data","mobileNumber","localStorage","getItem","useJwt","merchentsetpassword","mobile","isforgetpassword","then","res","console","log","issuccess","push","catch","err","response","status","toast","error","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","FormGroup","Label","for","InputPasswordToggle","id","name","minLength","onChange","target","value","classnames","innerRef","required","validate","length","style","color","Button","Ripple","block","disabled","Spinner","size","type","propTypes","tagPropType","PropTypes","string","cssModule","object","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","rowColsPropType","oneOfType","number","noGutters","bool","form","xs","xl","widths","colClasses","forEach","colWidth","i","colSize","isXs","stringOrNumberProp","columnProps","shape","order","offset","array","getColumnSizeClass","columnProp","isObject","_classNames","colSizeInterfix","colClass","_colClass","role","label","hideIcon","showIcon","visible","htmlFor","placeholder","iconSize","inputClassName","rest","inputVisibility","setInputVisibility","Fragment","InputGroup","Input","InputGroupAddon","addonType","InputGroupText","renderIcon","Eye","EyeOff"],"mappings":"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","file":"static/js/307.e7ca226a.chunk.js","sourcesContent":["import Avatar from \"@components/avatar\"\nimport InputPasswordToggle from \"@components/input-password-toggle\"\nimport { useSkin } from \"@hooks/useSkin\"\nimport useJwt from \"@src/auth/jwt/useJwt\"\nimport { AbilityContext } from \"@src/utility/context/Can\"\nimport \"@styles/base/pages/page-auth.scss\"\nimport classnames from \"classnames\"\nimport { Fragment, useContext, useState } from \"react\"\nimport { Coffee } from \"react-feather\"\nimport { useForm } from \"react-hook-form\"\nimport { useDispatch } from \"react-redux\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport { toast } from \"react-toastify\"\nimport {\n  Button,\n  CardText,\n  CardTitle,\n  Col,\n  Form,\n  FormGroup, Label,\n  Row,\n  Spinner\n} from \"reactstrap\"\nimport dpaylogo from '../../../assets/images/icons/RILAC-Logo.svg'\n\nconst ToastContent = ({ name, role }) => (\n  <Fragment>\n    <div className=\"toastify-header\">\n      <div className=\"title-wrapper\">\n        <Avatar size=\"sm\" color=\"success\" icon={<Coffee size={12} />} />\n        <h6 className=\"toast-title font-weight-bold\">Welcome, {name}</h6>\n      </div>\n    </div>\n    <div className=\"toastify-body\">\n      <span>\n        You have successfully logged in as an {role} user to Rilac. Now you can\n        start to explore. Enjoy!\n      </span>\n    </div>\n  </Fragment>\n)\nconst MerchantLogin = () => {\n  const [skin, setSkin] = useSkin()\n  const ability = useContext(AbilityContext)\n  const dispatch = useDispatch()\n  const history = useHistory()\n  // const [mobileNumber, setMobileNumber] = useState(\"\") \n  const [password, setPassword] = useState(\"\")\n  const [conPassword, setConfromPassword] = useState(\"\")\n  const [loading, setloading] = useState(false)\n  const [servererrors, seterrors] = useState({})\n  const { register, errors, handleSubmit } = useForm()\n\n\n  const illustration = skin === \"dark\" ? \"login-v2-dark.svg\" : \"login-v2.svg\",\n    source = require(`@src/assets/images/pages/${illustration}`).default\n\n  const onSubmit = (data) => {\n    const mobileNumber = localStorage.getItem(\"mobilenumber\")\n    // console.log(mobileNumber, password, conPassword)\n    // const email = data[\"loginemail\"]\n    // const password = data[\"login-password\"]\n\n    if (password === conPassword) {\n      setloading(true)\n      useJwt\n        .merchentsetpassword({ mobile: mobileNumber, password, isforgetpassword: false })\n        .then((res) => {\n          console.log(res, \"response\")\n          setloading(false)\n          if (res.data.issuccess) {\n            history.push(\"/Adminlogin\")\n          }\n        })\n        .catch((err) => {\n          setloading(false)\n          //  //console.log(err)\n          const e = err.response\n          if (e.status === 404 || e.status === 401) {\n            toast.error(e.data.message, {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined\n            })\n          }\n        })\n    } else {\n      toast.error('confirm password must be same as password.')\n    }\n  }\n  return (\n    <div className=\"auth-wrapper auth-v2\">\n      <Row className=\"auth-inner m-0\">\n        <Link className=\"brand-logo\" to=\"/\" onClick={(e) => e.preventDefault()}>\n          <img src={dpaylogo} />\n        </Link>\n        <Col className=\"d-none d-lg-flex align-items-center p-5\" lg=\"8\" sm=\"12\">\n          <div className=\"w-100 d-lg-flex align-items-center justify-content-center px-5\">\n            <img className=\"img-fluid\" src={source} alt=\"Login V2\" />\n          </div>\n        </Col>\n        <Col\n          className=\"d-flex align-items-center auth-bg px-2 p-lg-5\"\n          lg=\"4\"\n          sm=\"12\"\n        >\n          <Col className=\"px-xl-2 mx-auto\" sm=\"8\" md=\"6\" lg=\"12\">\n            <CardTitle tag=\"h2\" className=\"font-weight-bold mb-1\">\n              Welcome to Rilac! 👋\n            </CardTitle>\n            <CardText className=\"mb-2\">\n              Please set new password and start the adventure\n            </CardText>\n            {/*<Alert color='primary'>\n                <div className='alert-body font-small-2'>\n                  <p>\n                    <small className='mr-50'>\n                      <span className='font-weight-bold'>Admin:</span> admin@demo.com | admin\n                    </small>\n                  </p>\n                  <p>\n                    <small className='mr-50'>\n                      <span className='font-weight-bold'>Client:</span> client@demo.com | client\n                    </small>\n                  </p>\n                </div>\n                <HelpCircle\n                  id='login-tip'\n                  className='position-absolute'\n                  size={18}\n                  style={{ top: '10px', right: '10px' }}\n                />\n                <UncontrolledTooltip target='login-tip' placement='left'>\n                  This is just for ACL demo purpose.\n                </UncontrolledTooltip>\n              </Alert>*/}\n            <Form\n              className=\"auth-login-form mt-2\"\n              onSubmit={handleSubmit(onSubmit)}\n            >\n              {/* <FormGroup>\n                <Label className=\"form-label\" for=\"register-mobile\">\n                  Mobile Number\n                </Label>\n                <Input\n                  autoFocus\n                  type=\"number\"\n                  value={mobileNumber}\n                  placeholder=\"0175139****\"\n                  id=\"register-mobile\"\n                  name=\"register-mobile\"\n                  onChange={(e) => setMobileNumber(e.target.value)}\n                  className={classnames({\n                    \"is-invalid\": errors[\"register-username\"]\n                  })}\n                  innerRef={register({\n                    required: true,\n                    validate: (value) => value !== \"\"\n                  })}\n                />\n              </FormGroup> */}\n\n              <FormGroup>\n                <div className=\"d-flex justify-content-between\">\n                  <Label className=\"form-label\" for=\"login-password\">\n                    Password\n                  </Label>\n                  {/*<Link to='/forgot-password'>\n                      <small>Forgot Password?</small>\n                    </Link>*/}\n                </div>\n                <InputPasswordToggle\n                  // value={password}\n                  id=\"login-password\"\n                  name=\"login-password\"\n                  minLength=\"6\"\n                  className=\"input-group-merge\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  className={classnames({\n                    \"is-invalid\": errors[\"login-password\"]\n                  })}\n                  innerRef={register({\n                    required: true,\n                    validate: (value) => value !== \"\" && value.length > 5\n                  })}\n                />\n                <span style={{ color: \"red\" }}>\n                  {errors[\"login-password\"] &&\n                    \"Password must contain at least 6 characters, including 1 upper case,1 lower case, 1 number and a spatial character\"}\n                </span>\n                <span style={{ color: \"red\" }}>{servererrors[\"password\"]}</span>\n              </FormGroup>\n\n              <FormGroup>\n                <div className=\"d-flex justify-content-between\">\n                  <Label className=\"form-label\" for=\"confirm-password\">\n                    Confirm Password\n                  </Label>\n                  {/*<Link to='/forgot-password'>\n                      <small>Forgot Password?</small>\n                    </Link>*/}\n                </div>\n                <InputPasswordToggle\n                  // value={password}\n                  id=\"confirm-password\"\n                  name=\"confirm-password\"\n                  minLength=\"6\"\n                  className=\"input-group-merge\"\n                  onChange={(e) => setConfromPassword(e.target.value)}\n                  className={classnames({\n                    \"is-invalid\": errors[\"login-password\"]\n                  })}\n                  innerRef={register({\n                    required: true,\n                    validate: (value) => value !== \"\" && value.length > 5\n                  })}\n                />\n                <span style={{ color: \"red\" }}>\n                  {errors[\"login-password\"] &&\n                    \"Password must contain at least 6 characters, including 1 upper case,1 lower case, 1 number and a spatial character\"}\n                </span>\n                <span style={{ color: \"red\" }}>{servererrors[\"password\"]}</span>\n              </FormGroup>\n\n              {/*<FormGroup>\n                  <CustomInput type='checkbox' className='custom-control-Primary' id='remember-me' label='Remember Me' />\n                </FormGroup>*/}\n\n              {loading ? (\n                <Button.Ripple color=\"primary\" block disabled>\n                  <Spinner color=\"white\" size=\"sm\" />\n                  <span className=\"ml-50\">Loading...</span>\n                </Button.Ripple>\n              ) : (\n                <Button.Ripple type=\"submit\" color=\"primary\" block>\n                  Submit\n                </Button.Ripple>\n              )}\n            </Form>\n            {/*<p className='text-center mt-2'>\n                <span className='mr-25'>New on our platform?</span>\n                <Link to='/register'>\n                  <span>Create an account</span>\n                </Link>\n              </p>\n              <div className='divider my-2'>\n                <div className='divider-text'>or</div>\n              </div>\n              <div className='auth-footer-btn d-flex justify-content-center'>\n                <Button.Ripple color='facebook'>\n                  <Facebook size={14} />\n                </Button.Ripple>\n                <Button.Ripple color='twitter'>\n                  <Twitter size={14} />\n                </Button.Ripple>\n                <Button.Ripple color='google'>\n                  <Mail size={14} />\n                </Button.Ripple>\n                <Button.Ripple className='mr-0' color='github'>\n                  <GitHub size={14} />\n                </Button.Ripple>\n              </div>*/}\n          </Col>\n        </Col>\n      </Row>\n    </div>\n  )\n}\nexport default MerchantLogin\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.propTypes = propTypes;\nCardText.defaultProps = defaultProps;\nexport default CardText;","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label, inputClassName } from 'reactstrap'\n\nconst InputPasswordToggle = props => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\n      <InputGroup\n        className={classnames({\n          [className]: className\n        })}\n      >\n        <Input\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\n          <InputGroupText className='cursor-pointer'>{renderIcon()}</InputGroupText>\n        </InputGroupAddon>\n      </InputGroup>\n    </Fragment>\n  )\n}\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName, componentName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName, componentName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n"],"sourceRoot":""}