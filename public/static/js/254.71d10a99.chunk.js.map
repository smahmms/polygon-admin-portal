{"version":3,"sources":["views/custom/viewbusinessinfo.js","views/viewhelper.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/rc-util/es/omit.js","../node_modules/reactstrap/es/Label.js","../node_modules/reactstrap/es/Form.js","../node_modules/antd/es/skeleton/Element.js","../node_modules/antd/es/skeleton/Avatar.js","../node_modules/antd/es/skeleton/Button.js","../node_modules/@ant-design/icons-svg/es/asn/DotChartOutlined.js","../node_modules/@ant-design/icons/es/icons/DotChartOutlined.js","../node_modules/antd/es/skeleton/Node.js","../node_modules/antd/es/skeleton/Image.js","../node_modules/antd/es/skeleton/Input.js","../node_modules/antd/es/skeleton/Paragraph.js","../node_modules/antd/es/skeleton/Title.js","../node_modules/antd/es/skeleton/Skeleton.js","../node_modules/antd/es/skeleton/index.js"],"names":["ViewBusiness","props","businessid","useParams","viewinput","setviewinput","useHistory","useState","loading","setloading","businessmarketingpref","setbusinessmarketingpref","businesstagmap","setbusinesstagmap","customercomment","setcustomercomment","customerbusinesstypemap","setcustomerbusinesstypemap","fileuploadinformaton","setfileuploadinformaton","symblegroup","setsymblegroup","currency","setCurrency","storeinfo","setstoreinfo","storename","storesizeinfo","setstoresizeinfo","statusdesc","getTimeStampToDateTime","str","date","Date","concat","toDateString","toLocaleTimeString","useEffect","async","business_id","match","params","useJwt","customerBusinessDetails","then","console","log","res","data","payload","payload1","fileinfo","i","campaign_config","EOIDDOC","eoiddoc_uploadedby","eoiddoc_uploadedtime","FIDDOC","fiddoc_uploadedby","fiddoc_uploadedtime","companyregdoc","companyregdoc_uploadedby","companyregdoc_uploadedtime","personaliddoc","personaliddoc_uploadedby","personaliddoc_uploadedtime","vatdoc","vatdoc_uploadedby","vatdoc_uploadedtime","others_doc","othersdoc_uploadedby","othersdoc_uploadedtime","customerinfo","memberofsymbolgroup","ad_account_id","app_id","app_secret","email_address","email_config_type","email_host","email_password","email_port","email_service","fcm_server_ring","google_customer_id","google_managers_client_id","instagram_actor_id","keyword","page_id","user_token","useSymbolGroup","every","x","id","filenameaplitarr","split","file","name","length","uploadby","uploaddatetime","perview","catch","err","Error","currencyList","onchange","_jsx","Fragment","children","_jsxs","Skeleton","active","Form","autoComplete","className","Row","Col","md","sm","Button","Ripple","color","tag","Link","to","ChevronLeft","size","onClick","sessionStorage","setItem","idx","User","style","marginTop","Card","CardHeader","CardTitle","width","float","fontSize","CardBody","FormGroup","Label","for","Input","type","value","onChange","disabled","CustomInput","defaultChecked","inline","label","checked","web_login","allow_subtype","Select","theme","selectThemeColors","classNamePrefix","businesscategoryid","service_type","group_select","campaign_select","selected_receiver_group_name","selected_campaign_name","paddingTop","placeholder","pageId","adAccountId","rows","maxMenuHeight","isDisabled","currency_code","options","time_zone","map","item","index","e","response","status","toast","error","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","errors","Object","keys","Success","success","propTypes","tagPropType","PropTypes","string","cssModule","object","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","innerRef","oneOfType","func","ref","omit","obj","fields","clone","assign","Array","isArray","forEach","key","stringOrNumberProp","number","columnProps","bool","shape","order","offset","node","hidden","check","xs","lg","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","htmlFor","colClasses","columnProp","colClass","isObject","_classNames","colSizeInterfix","push","_Component","_this","call","this","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","render","_this$props","Component","Element","prefixCls","sizeCls","_defineProperty","shapeCls","sizeStyle","height","lineHeight","SkeletonAvatar","customizePrefixCls","_props$shape","_props$size","getPrefixCls","ConfigContext","otherProps","cls","SkeletonButton","_props$block","block","DotChartOutlined","AntdIcon","_objectSpread","icon","DotChartOutlinedSvg","RefIcon","SkeletonNode","content","SkeletonImage","viewBox","xmlns","d","SkeletonInput","Paragraph","getWidth","_props$rows","rowList","_toConsumableArray","_","Title","_ref","getComponentProps","prop","_typeof","_props$avatar","avatar","_props$title","title","_props$paragraph","paragraph","round","_React$useContext","direction","avatarNode","contentNode","hasAvatar","hasTitle","hasParagraph","avatarProps","getAvatarBasicProps","$title","paragraphNode","titleProps","getTitleBasicProps","paragraphProps","basicProps","getParagraphBasicProps","Avatar","Image","Node"],"mappings":"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","file":"static/js/254.71d10a99.chunk.js","sourcesContent":["import { selectThemeColors } from '@utils'\nimport { Fragment, useEffect, useState } from 'react'\nimport { ChevronLeft, User } from 'react-feather'\nimport { Link, useHistory, useParams } from 'react-router-dom'\nimport Select from 'react-select'\nimport {\n    Button, Card, CardBody, CardHeader,\n    CardTitle, Col, CustomInput, Form,\n    FormGroup, Input,\n    Label,\n    Row\n} from 'reactstrap'\n\n\nimport '@styles/react/libs/file-uploader/file-uploader.scss'\nimport '@uppy/status-bar/dist/style.css'\nimport 'antd/dist/antd.css'\nimport 'uppy/dist/uppy.css'\n\nimport { Skeleton } from 'antd'\n\nimport useJwt from '@src/auth/jwt/useJwt'\nimport { Error } from '../viewhelper'\n\n\nconst ViewBusiness = (props) => {\n    const { businessid } = useParams()\n    const history = useHistory()\n    const [viewinput, setviewinput] = useState({})\n    const [loading, setloading] = useState(true)\n    const [businessmarketingpref, setbusinessmarketingpref] = useState([])\n    const [businesstagmap, setbusinesstagmap] = useState([])\n    const [customercomment, setcustomercomment] = useState([])\n    const [customerbusinesstypemap, setcustomerbusinesstypemap] = useState([])\n    const [fileuploadinformaton, setfileuploadinformaton] = useState([])\n    const [symblegroup, setsymblegroup] = useState('')\n    const [currency, setCurrency] = useState([])\n    const [storeinfo, setstoreinfo] = useState({\n        storename: ''\n    })\n    const [storesizeinfo, setstoresizeinfo] = useState({\n        statusdesc: ''\n    })\n\n    const getTimeStampToDateTime = str => {\n        const date = new Date(str)\n        return `${date.toDateString()} ${date.toLocaleTimeString()}`\n    }\n    //api fetching start..\n    useEffect(async () => {\n\n        const business_id = props.match.params.businessid\n        //store list..\n        useJwt.customerBusinessDetails({ businessid: business_id }).then(async res => {\n            console.log(res.data.payload)\n            const payload1 = res.data.payload, fileinfo = []\n            let i = 0\n            const { customerbusinesstypemap = [],\n                businessmarketingpref = [],\n                businesstagmap = [],\n                customercomment = [],\n                campaign_config = {},\n\n                EOIDDOC,\n                eoiddoc_uploadedby,\n                eoiddoc_uploadedtime,\n\n                FIDDOC,\n                fiddoc_uploadedby,\n                fiddoc_uploadedtime,\n\n                companyregdoc,\n                companyregdoc_uploadedby,\n                companyregdoc_uploadedtime,\n\n                personaliddoc,\n                personaliddoc_uploadedby,\n                personaliddoc_uploadedtime,\n\n                vatdoc,\n                vatdoc_uploadedby,\n                vatdoc_uploadedtime,\n\n                others_doc,\n                othersdoc_uploadedby,\n                othersdoc_uploadedtime,\n\n                storeinfo,\n                storesizeinfo,\n                customerinfo,\n                memberofsymbolgroup\n\n            } = await payload1\n           \n            const {ad_account_id = null, app_id = null, app_secret = null, business_id = null, email_address = null, email_config_type = null, email_host = null, email_password = null, email_port = null, email_service = null, fcm_server_ring = null, google_customer_id = null, google_managers_client_id = null, instagram_actor_id = null, keyword = null, page_id = null, user_token = null} = campaign_config || {}\n\n            // console.log(payload1)\n            // symbol list setvatexempt \n            await useJwt.useSymbolGroup().then(res => {\n\n                res.data.payload.every(x => {\n                    if (x.id === memberofsymbolgroup) {\n                        setsymblegroup(x.statusdesc)\n                        return false\n                    }\n                    return true\n                })\n            })\n            setloading(false)\n            setviewinput({ ...payload1, ...customerinfo, ad_account_id, app_id, app_secret, business_id, email_address, email_config_type, email_host, email_password, email_port, email_service, fcm_server_ring, google_customer_id, google_managers_client_id, instagram_actor_id, keyword, page_id, user_token})\n            setbusinesstagmap(businesstagmap)\n            setcustomercomment(customercomment)\n            setcustomerbusinesstypemap(customerbusinesstypemap)\n            setbusinessmarketingpref(businessmarketingpref)\n            setstoreinfo(storeinfo)\n            setstoresizeinfo(storesizeinfo)\n            if (EOIDDOC) {\n                const filenameaplitarr = EOIDDOC.split('/')\n                fileinfo[i++] = {\n                    file: 'Economic Operator ID',\n                    name: filenameaplitarr[filenameaplitarr.length - 1],\n                    uploadby: eoiddoc_uploadedby,\n                    uploaddatetime: eoiddoc_uploadedtime ? getTimeStampToDateTime(eoiddoc_uploadedtime) : null,\n                    perview: EOIDDOC\n                }\n            }\n\n            if (FIDDOC) {\n                const filenameaplitarr = FIDDOC.split('/')\n                fileinfo[i++] = {\n                    file: 'Facility ID',\n                    name: filenameaplitarr[filenameaplitarr.length - 1],\n                    uploadby: fiddoc_uploadedby,\n                    uploaddatetime: fiddoc_uploadedtime ? getTimeStampToDateTime(fiddoc_uploadedtime) : null,\n                    perview: FIDDOC\n                }\n            }\n\n            if (companyregdoc) {\n                const filenameaplitarr = companyregdoc.split('/')\n                fileinfo[i++] = {\n                    file: 'Company Documents',\n                    name: filenameaplitarr[filenameaplitarr.length - 1],\n                    uploadby: companyregdoc_uploadedby,\n                    uploaddatetime: companyregdoc_uploadedtime ? getTimeStampToDateTime(companyregdoc_uploadedtime) : null,\n                    perview: companyregdoc\n                }\n            }\n\n            if (personaliddoc) {\n                const filenameaplitarr = personaliddoc.split('/')\n                fileinfo[i++] = {\n                    file: 'Personal ID',\n                    name: filenameaplitarr[filenameaplitarr.length - 1],\n                    uploadby: personaliddoc_uploadedby,\n                    uploaddatetime: personaliddoc_uploadedtime ? getTimeStampToDateTime(personaliddoc_uploadedtime) : null,\n                    perview: personaliddoc\n                }\n            }\n\n            if (vatdoc) {\n                const filenameaplitarr = vatdoc.split('/')\n                fileinfo[i++] = {\n                    file: 'Vat ID',\n                    name: filenameaplitarr[filenameaplitarr.length - 1],\n                    uploadby: vatdoc_uploadedby,\n                    uploaddatetime: vatdoc_uploadedtime ? getTimeStampToDateTime(vatdoc_uploadedtime) : null,\n                    perview: vatdoc\n                }\n            }\n\n            if (others_doc) {\n                const filenameaplitarr = others_doc.split('/')\n                fileinfo[i++] = {\n                    file: 'Others',\n                    name: filenameaplitarr[filenameaplitarr.length - 1],\n                    uploadby: othersdoc_uploadedby,\n                    uploaddatetime: othersdoc_uploadedtime ? getTimeStampToDateTime(vatdoc_uploadedtime) : null,\n                    perview: others_doc\n                }\n            }\n\n            setfileuploadinformaton(fileinfo)\n\n        }).catch(err => {\n            //console.log(err)\n            Error(err)\n        })\n        useJwt.currencyList().then(res => {\n            // console.log('currencyList', res)\n            setCurrency(res.data.payload)\n        }).catch(err => {\n            Error(err)\n            //console.log(err)\n        })\n    }, [])\n    /* {\n                   file:'Economic Operator ID',\n                   name:file.name,\n                   uploadby:username,\n                   uploaddatetime:  new Date().toLocaleString(),\n                   perview:preview\n               }\n        */\n    const onchange = () => {\n\n    }\n\n\n    return (\n        <Fragment>\n            {\n                loading ? <Fragment>\n                    <Skeleton active />\n                    <Skeleton active />\n                    <Skeleton active />\n                </Fragment> : <Form autoComplete=\"off\" className=\"businessview\">\n                    <Row>\n                        <Col md='2' sm='2'>\n                            <h4>Business Details</h4>\n                        </Col>\n                        <Col sm=\"5\" >\n                            <Button.Ripple className='ml-2' color='primary' tag={Link} to='/business'>\n                                <ChevronLeft size={10} />\n                                <span className='align-middle ml-50'>Back to List</span>\n                            </Button.Ripple>\n                            <Button.Ripple onClick={() => sessionStorage.setItem(\"customer_idx\", viewinput.customerinfo.idx)} className='ml-2' color='primary' tag={Link} to={`/AppUserAccess/${businessid}`}>\n                                <User size={10} />\n                                <span className='align-middle ml-50'>App User Access</span>\n                            </Button.Ripple>\n\n                        </Col>\n\n                    </Row>\n\n                    <Row style={{ marginTop: '10px' }}>\n                        <Col sm='12'>\n                            {/*about business start*/}\n                            <Card>\n\n                                <CardHeader>\n                                    <CardTitle style={{ width: '100%' }} >\n                                        <h4 style={{ float: 'left' }}>About Business</h4>\n                                        <div style={{ float: 'right', fontSize: '12px' }}>\n                                            <p>\n                                                Created by : {viewinput['createdby']}, {viewinput['createddate'] ? getTimeStampToDateTime(viewinput['createddate']) : null} <br />\n                                                {\n                                                    viewinput['updatedby'] ? `Updated by : ${viewinput['updatedby']}, ${viewinput['updateddate'] ? getTimeStampToDateTime(viewinput['updateddate']) : null}` : null\n                                                }\n                                            </p>\n                                        </div>\n                                    </CardTitle>\n                                </CardHeader>\n\n                                <CardBody>\n\n                                    <Row>\n                                        <Col md='6' sm='12'>\n                                            <FormGroup>\n                                                <Label for='bname'>Business Name </Label>\n                                                <Input type='text'\n                                                    name='businessname'\n                                                    id='bname'\n                                                    value={viewinput['businessname'] || ''}\n                                                    onChange={onchange}\n                                                    disabled\n                                                />\n                                            </FormGroup>\n                                        </Col>\n                                        {/* <Col md='3' sm='12'>\n                                            <FormGroup>\n                                                <Label for='firstname'>First Name </Label>\n                                                <Input type='text'\n                                                    name='firstname'\n                                                    id='firstname'\n                                                    onChange={onchange}\n                                                    disabled\n                                                    value={viewinput['customerinfo'] ? viewinput['customerinfo']['firstname'] : ''}\n                                                />\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md='3' sm='12'>\n                                            <FormGroup>\n                                                <Label for='lastname'>Last Name </Label>\n                                                <Input type='text'\n                                                    name='lastname'\n                                                    id='lastname'\n                                                    onChange={onchange}\n                                                    disabled\n                                                    value={viewinput['customerinfo'] ? viewinput['customerinfo']['lastname'] : ''}\n                                                />\n\n                                            </FormGroup>\n                                        </Col> */}\n\n                                        <Col md='6' sm='12'>\n                                            <FormGroup>\n                                                <Label for='status'>Status</Label>\n                                                <div>\n                                                    {\n                                                        viewinput['status'] === 1 ? <CustomInput defaultChecked type='radio' id='exampleCustomRadio' disabled name='status' value=\"1\" inline label='Active' /> : null\n\n                                                    }\n                                                    {\n                                                        viewinput['status'] === 0 ? <CustomInput defaultChecked type='radio' id='exampleCustomRadio2' disabled name='status' value=\"0\" inline label='Pending' /> : null\n\n                                                    }\n                                                    {\n                                                        viewinput['status'] === 5 ? <CustomInput defaultChecked type='radio' id='exampleCustomRadio3' disabled name='status' value=\"5\" inline label='Stopped' /> : null\n\n                                                    }\n                                                </div>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md='3' sm='12'>\n                                            <FormGroup>\n                                                <Label for='mobile'>Mobile </Label>\n                                                <Input\n                                                    type='number'\n                                                    name='mobile'\n                                                    id='mobile'\n                                                    value={viewinput['mobile'] || ''}\n                                                    onChange={onchange}\n                                                    disabled\n                                                />\n\n                                            </FormGroup>\n                                        </Col>\n                                        {/* <Col md='3' sm='12'>\n                                            <FormGroup>\n                                                <Label for='telephone'>Telephone </Label>\n                                                <Input type='text'\n                                                    name='landline'\n                                                    id='telephone'\n                                                    value={viewinput['landline'] || ''}\n                                                    onChange={onchange}\n                                                    disabled\n                                                />\n\n                                            </FormGroup>\n                                        </Col>\n\n                                        <Col md='6' sm='12'>\n                                            <FormGroup>\n                                                <Label for='postcode'>Post code </Label>\n\n                                                <Input type='text'\n                                                    name='postcode'\n                                                    id='postcode'\n                                                    value={viewinput['postcode'] || ''}\n                                                    onChange={onchange}\n                                                    disabled\n                                                />\n\n                                            </FormGroup>\n                                        </Col> */}\n                                        <Col md='3' sm='12'>\n                                            <FormGroup>\n                                                <Label for='email'>Email </Label>\n                                                <Input type='text'\n                                                    name='email'\n                                                    id='email'\n                                                    value={viewinput['email'] || ''}\n                                                    onChange={onchange}\n                                                    disabled\n                                                />\n\n                                            </FormGroup>\n                                        </Col>\n                                        {/* <Col md='3' sm='12'>\n                                            <FormGroup>\n                                                <Label for='primarydepot'>Primary Depot</Label>\n                                                <Input type='text'\n                                                    name='depot_id'\n                                                    id='depot_id'\n                                                    value={storeinfo?.storename}\n                                                    disabled\n                                                />\n\n                                            </FormGroup>\n                                        </Col>\n\n                                        <Col md='6' sm='12'>\n\n                                            <FormGroup>\n                                                <Label for='baddress'>Business Address</Label>\n                                                <Input type='text'\n                                                    name='address'\n                                                    id='address'\n                                                    value={viewinput['address'] || ''}\n                                                    onChange={onchange}\n                                                    disabled\n                                                />\n                                            </FormGroup>\n                                        </Col>\n\n                                        <Col md='3' sm='12'>\n                                            <FormGroup>\n                                                <Label for='companyregisterno'>Company Register No.</Label>\n                                                <Input\n                                                    type='text'\n                                                    name='companyregno'\n                                                    id='companyregisterno'\n                                                    value={viewinput['companyregno'] || ''}\n                                                    onChange={onchange}\n                                                    disabled\n                                                />\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md='3' sm='12'>\n                                            <FormGroup>\n                                                <Label for='vatno'>VAT No.</Label>\n                                                <Input\n                                                    type='text'\n                                                    name='vatno'\n                                                    id='vatno'\n                                                    value={viewinput['vatno'] || ''}\n                                                    onChange={onchange}\n                                                    disabled\n                                                />\n                                            </FormGroup>\n                                        </Col>\n\n                                        <Col md='6' sm='12'>\n                                            <FormGroup>\n                                                <Label for='country'>Country</Label>\n                                                <Input\n                                                    type='text'\n                                                    name='country'\n                                                    id='country'\n                                                    value={viewinput['country'] || ''}\n                                                    onChange={onchange}\n                                                    disabled\n                                                />\n                                            </FormGroup>\n                                        </Col>\n\n                                        <Col md='3' sm='12'>\n                                            <FormGroup>\n                                                <Label for='copid'>Economic Operator ID</Label>\n                                                <Input\n                                                    type='text'\n                                                    name='EOID'\n                                                    id='copid'\n                                                    value={viewinput['EOID'] || ''}\n                                                    onChange={onchange}\n                                                    disabled\n                                                />\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md='3' sm='12'>\n                                            <FormGroup>\n                                                <Label for='fid'>Facility ID</Label>\n                                                <Input\n                                                    type='text'\n                                                    name='FID'\n                                                    id='fid'\n                                                    value={viewinput['FID'] || ''}\n                                                    onChange={onchange}\n                                                    disabled\n                                                />\n                                            </FormGroup>\n                                        </Col>\n\n                                        <Col md='6' sm='12'>\n                                            <FormGroup>\n                                                <Label for='premise'>Premise</Label>\n                                                {\n                                                    viewinput['premise'] ? <div className=\"customradiocheck\">\n                                                        <CustomInput type='radio' id='premise' defaultChecked disabled name='premise' value={viewinput['premise']} inline label={viewinput['premise']} />\n                                                    </div> : null\n                                                }\n\n                                            </FormGroup>\n                                        </Col>\n\n                                        <Col md='3' sm='12'>\n                                            <FormGroup>\n                                                <Label for='sizeofstore'>Size of Store</Label>\n                                                <Input\n                                                    type='text'\n                                                    name='sizeofstoreid'\n                                                    id='sizeofstoreid'\n                                                    value={storesizeinfo?.statusdesc}\n                                                    onChange={onchange}\n                                                    disabled\n                                                />\n                                            </FormGroup>\n                                        </Col>\n\n                                        <Col md='3' sm='12'>\n                                            <FormGroup>\n                                                <Label for='memberofsymbolgroup'>Member of Symbol Group</Label>\n                                                <Input\n                                                    type='text'\n                                                    name='memberofsymbolgroup'\n                                                    id='memberofsymbolgroup'\n                                                    value={symblegroup}\n                                                    onChange={onchange}\n                                                    disabled\n                                                />\n\n                                            </FormGroup>\n                                        </Col> */}\n                                        <Col md='3' sm='12' className='mt-2'>\n                                        <FormGroup>\n                                            <CustomInput\n                                            type='switch'\n                                            id='web_login'\n                                            name='web_login'\n                                            label='Allow Web Login?'\n                                            disabled\n                                            checked={viewinput.web_login}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                    <Col md='3' sm='12' className='mt-2'>\n                                        <FormGroup>\n                                            <CustomInput\n                                            type='switch'\n                                            id='allow_subtype'\n                                            name='allow_subtype'\n                                            label='Allow Subtype?'\n                                            disabled\n                                            checked={viewinput.allow_subtype}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                    <Col md='6' sm='6'>\n                                        <FormGroup>\n                                            <Label for='businesscategories'>Business Category</Label>\n                                            <Select\n                                                theme={selectThemeColors}\n                                                className='basic-multi-select'\n                                                classNamePrefix='select'\n                                                name=\"businesscategories\"\n                                                disabled\n                                                value={{value: viewinput.businesscategoryid, label: viewinput.businesscategoryid}}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                    <Col md='4' sm='6'>\n                                        <FormGroup>\n                                            <Label for='service'>Service</Label>\n                                            <Select\n                                                theme={selectThemeColors}\n                                                className='basic-multi-select'\n                                                classNamePrefix='select'\n                                                name=\"service\"\n                                                disabled\n                                                value={{value: viewinput.service_type, label: viewinput.service_type}}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n\n                                </CardBody>\n                            </Card>\n                            {/*about business end*/}\n\n                            {/*business category start*/}\n                            <Card>\n                                {/* <CardHeader>\n                                    <CardTitle tag='h4'>Business Category</CardTitle>\n                                </CardHeader> */}\n\n                                <CardBody>\n                                    <Row>\n                                        {/* <Col sm='6' md='6'>\n                                            <FormGroup>\n                                                {\n                                                    viewinput['businesstype'] ? <div>\n                                                        <Label for='copid'>Business Type</Label>\n                                                        <Input type='text' id='businesstype' disabled name='businesstype' value={viewinput['businesstype']} />\n                                                    </div> : null\n                                                }\n                                            </FormGroup>\n                                        </Col> */}\n                                        <Col sm='6' md='4'>\n                                            <FormGroup>\n                                                {\n                                                    viewinput['city'] ? <div>\n                                                        <Label for='copid'>Division</Label>\n                                                        <Input type='text' id='city' disabled name='city' value={viewinput['city']} />\n                                                    </div> : null\n                                                }\n                                            </FormGroup>\n                                        </Col>\n                                        <Col sm='6' md='4'>\n                                            <FormGroup>\n                                                {\n                                                    viewinput['district'] ? <div>\n                                                        <Label for='copid'>District</Label>\n                                                        <Input type='text' id='district' disabled name='district' value={viewinput['district']} />\n                                                    </div> : null\n                                                }\n                                            </FormGroup>\n                                        </Col>\n                                        <Col sm='6' md='4'>\n                                            <FormGroup>\n                                                {\n                                                    viewinput['thana'] ? <div>\n                                                        <Label for='copid'>Thana</Label>\n                                                        <Input type='text' id='thana' disabled name='thana' value={viewinput['thana']} />\n                                                    </div> : null\n                                                }\n                                            </FormGroup>\n                                        </Col>\n                                    </Row>\n                                </CardBody>\n                            </Card>\n                            {/*business category end*/}\n\n                            {/*business type start*/}\n                            {/* <Card>\n                                <CardHeader>\n                                    <CardTitle tag='h4'>Business Type</CardTitle>\n                                </CardHeader>\n\n                                <CardBody>\n\n                                    <Row>\n                                        <Col sm='12' md='12'>\n                                            <FormGroup>\n                                                {\n                                                    viewinput['businesstype'] ? <div>\n                                                        <Input type='text' id='businesstype' disabled name='businesstype' value={viewinput['businesstype']} />\n                                                    </div> : null\n                                                }\n\n\n                                            </FormGroup>\n                                        </Col>\n\n                                    </Row>\n\n                                </CardBody>\n                            </Card> */}\n                            {/*business type end*/}\n\n                            {/*document up start*/}\n                            {/* <Card>\n                                <CardHeader>\n                                    <CardTitle tag='h4'>Documents</CardTitle>\n                                </CardHeader>\n                                <CardBody>\n                                    <Row>\n                                        <Col sm='12' md='12'>\n                                            {fileuploadinformaton.length ? <Table borderless>\n                                                <thead>\n                                                    <tr>\n                                                        <th>File</th>\n                                                        <th>Name</th>\n                                                        <th>Upload By</th>\n                                                        <th>Add time</th>\n                                                        <th>Action</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {\n                                                        fileuploadinformaton.map((item, index) => <tr key={index}>\n                                                            <th>{item.file}</th>\n                                                            <th>\n                                                                {item.name}<br />\n                                                            </th>\n                                                            <th>{item.uploadby}</th>\n                                                            <th>{item.uploaddatetime}</th>\n                                                            <th><Fragment>\n                                                                <a href={item.perview} target=\"_blank\" ><Eye size={15} /></a>\n                                                            </Fragment></th>\n                                                        </tr>)\n                                                    }\n                                                </tbody>\n                                            </Table> : null\n                                            }\n                                        </Col>\n                                    </Row>\n\n                                </CardBody>\n                            </Card> */}\n                            {/*document up end*/}\n\n                            <Card>\n                                <CardBody>\n                                    <Row>\n                                        <Col md='6' sm='12' className='mt-2'>\n                                            <FormGroup>\n                                                <CustomInput\n                                                type='switch'\n                                                id='group_select'\n                                                name='group_select'\n                                                label='Group Select Allow?'\n                                                disabled\n                                                checked= {viewinput.group_select}\n                                                />\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md='6' sm='6'>\n                                        {\n                                            (viewinput.group_select && !viewinput.campaign_select) &&  <FormGroup>\n                                            <Label for='city'>Groups</Label>\n                                            <Select\n                                                theme={selectThemeColors}\n                                                className='basic-multi-select'\n                                                classNamePrefix='select'\n                                                name=\"group\"\n                                                disabled\n                                                value={ { value: viewinput.selected_receiver_group_name, label: viewinput.selected_receiver_group_name } }\n                                            />\n                                        </FormGroup>\n                                        }\n                                        </Col>\n                                        <Col md='6' sm='12' className='mt-2'>\n                                            <FormGroup>\n                                                <CustomInput\n                                                type='switch'\n                                                id='campaign_select'\n                                                name='campaign_select'\n                                                label='Campaign Select Allow?'\n                                                disabled\n                                                checked= {viewinput.campaign_select}\n                                                />\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md='6' sm='6'>\n                                        {\n                                            (!viewinput.group_select && viewinput.campaign_select) &&  <FormGroup>\n                                            <Label for='campaigns'>Campaign</Label>\n                                            <Select\n                                                theme={selectThemeColors}\n                                                className='basic-multi-select'\n                                                classNamePrefix='select'\n                                                name=\"campaigns\"\n                                                disabled\n                                                value={ { value: viewinput.selected_campaign_name, label: viewinput.selected_campaign_name } }\n                                            />\n                                        </FormGroup>\n                                        }\n                                        </Col>\n                                    </Row>\n                                </CardBody>\n                            </Card>\n\n                            <Card>\n                            <CardHeader>\n                                <CardTitle>Credential Configurations For Social Media AD</CardTitle>\n                            </CardHeader>\n                            <CardBody>\n                                <Card>\n                                    <CardHeader className='border-bottom'>\n                                        <CardTitle tag='h4'>Facebook</CardTitle>\n                                    </CardHeader>\n                                    <CardBody style={{ paddingTop: '15px' }}>\n                                        <Row>\n                                            <Col sm=\"6\" >\n                                                <FormGroup>\n                                                    <Label for=\"app_id\">App ID<span style={{color:'red'}}>*</span></Label>\n                                                    <Input type=\"text\"\n                                                        name=\"app_id\"\n                                                        id='app_id'\n                                                        value={viewinput?.app_id}\n                                                        disabled\n                                                        placeholder=\"app id\"\n                                                    />\n                                                </FormGroup>\n                                                </Col>\n                                                <Col sm=\"6\" >\n                                                    <FormGroup>\n                                                        <Label for=\"app_secret\">App Secret<span style={{color:'red'}}>*</span></Label>\n                                                        <Input type=\"text\"\n                                                            name=\"app_secret\"\n                                                            id='app_secret'\n                                                            value={viewinput?.app_secret}\n                                                            disabled\n                                                            placeholder=\"app secret\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col sm=\"6\" >\n                                                    <FormGroup>\n                                                        <Label for=\"pageId\">Page ID<span style={{color:'red'}}>*</span></Label>\n                                                        <Input type=\"text\"\n                                                            name=\"pageId\"\n                                                            id='pageId'\n                                                            value={viewinput?.pageId}\n                                                            disabled\n                                                            placeholder=\"Page id\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col sm=\"6\" >\n                                                    <FormGroup>\n                                                        <Label for=\"adAccountId\">Ad Account ID (required for facebook advertisement.)<span style={{color:'red'}}>*</span></Label>\n                                                        <Input type=\"text\"\n                                                            name=\"adAccountId\"\n                                                            id='adAccountId'\n                                                            value={viewinput?.adAccountId}\n                                                            disabled\n                                                            placeholder=\"ad account id\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col sm=\"6\" >\n                                                    <FormGroup>\n                                                        <Label for=\"instagram_actor_id\">Instagram Actor ID<span className='text-danger'>*</span></Label>\n                                                        <Input type=\"text\"\n                                                            name=\"instagram_actor_id\"\n                                                            id='instagram_actor_id'\n                                                            value={viewinput.instagram_actor_id}\n                                                            disabled\n                                                            placeholder=\"instagram actor id\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col sm=\"6\" >\n                                                    <FormGroup>\n                                                        <Label for=\"user_token\">User Token<span style={{color:'red'}}>*</span></Label>\n                                                        <Input type=\"textarea\"\n                                                            rows = \"6\"\n                                                            name=\"user_token\"\n                                                            id='user_token'\n                                                            value={viewinput?.user_token}\n                                                            disabled\n                                                            placeholder=\"user token\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                        </CardBody>\n                                </Card>\n                                <Card>\n                                    <CardHeader className='border-bottom'>\n                                        <CardTitle tag='h4'>Google</CardTitle>\n                                    </CardHeader>\n                                    <CardBody style={{ paddingTop: '15px' }}>\n                                        <Row>\n                                            <Col sm=\"4\" >\n                                                <FormGroup>\n                                                    <Label for=\"currency_code\">Currency<span style={{ color: 'red' }}>*</span></Label>\n                                                    <Select\n                                                        theme={selectThemeColors}\n                                                        maxMenuHeight={200}\n                                                        className='react-select'\n                                                        classNamePrefix='select'\n                                                        isDisabled\n                                                        value={{value:'', label: viewinput?.currency_code}}\n                                                        options={[]}\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col sm=\"4\" >\n                                                <FormGroup>\n                                                    <Label for=\"time_zone\">Time Zone<span style={{ color: 'red' }}>*</span></Label>\n                                                    <Select\n                                                        theme={selectThemeColors}\n                                                        maxMenuHeight={200}\n                                                        className='react-select'\n                                                        classNamePrefix='select'\n                                                        isDisabled\n                                                        value={{value:'', label: viewinput?.time_zone}}\n                                                        options={[]}\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col sm=\"4\" >\n                                                <FormGroup>\n                                                    <Label for=\"google_customer_id\">Google Customer Id<span style={{color:'red'}}>*</span></Label>\n                                                    <Input type=\"text\"\n                                                        name=\"google_customer_id\"\n                                                        id='google_customer_id'\n                                                        value={viewinput?.google_customer_id}\n                                                        disabled\n                                                        placeholder=\"google_customer_id\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col sm=\"4\" >\n                                                <FormGroup>\n                                                    <Label for=\"google_managers_client_id\">Google Managers Client Id<span style={{color:'red'}}>*</span></Label>\n                                                    <Input type=\"text\"\n                                                        name=\"google_managers_client_id\"\n                                                        id='google_managers_client_id'\n                                                        value={viewinput?.google_managers_client_id}\n                                                        disabled\n                                                        placeholder=\"google_managers_client_id\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                                <Card>\n                                    <CardHeader className='border-bottom'>\n                                        <CardTitle tag='h4'>Email</CardTitle>\n                                    </CardHeader>\n                                    <CardBody style={{ paddingTop: '15px' }}>\n                                        <Row>\n                                            <Col sm=\"6\" >\n                                                <FormGroup>\n                                                    <Label for=\"email_address\">Email Address<span style={{color:'red'}}>*</span></Label>\n                                                    <Input type=\"text\"\n                                                        name=\"email_address\"\n                                                        id='email_address'\n                                                        value={viewinput?.email_address}\n                                                        disabled\n                                                        placeholder=\"email_address\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col sm=\"6\" >\n                                                <FormGroup>\n                                                    <Label for=\"email_password\">Email Password<span style={{color:'red'}}>*</span></Label>\n                                                    <Input type=\"text\"\n                                                        name=\"email_password\"\n                                                        id='email_password'\n                                                        value={viewinput?.email_password}\n                                                        disabled\n                                                        placeholder=\"email_password\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col sm=\"4\" >\n                                                <FormGroup>\n                                                    <Label for=\"email_port\">Email Port<span style={{color:'red'}}>*</span></Label>\n                                                    <Input type=\"text\"\n                                                        name=\"email_port\"\n                                                        id='email_port'\n                                                        value={viewinput?.email_port}\n                                                        disabled\n                                                        placeholder=\"email_port\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col sm=\"4\" >\n                                                <FormGroup>\n                                                    <Label for=\"email_config_type\">Email Configure Type<span style={{ color: 'red' }}>*</span></Label>\n                                                    <Select\n                                                        theme={selectThemeColors}\n                                                        maxMenuHeight={200}\n                                                        className='react-select'\n                                                        classNamePrefix='select'\n                                                        isDisabled\n                                                        value={{ value: 0, label: viewinput?.email_config_type }}\n                                                        options={[{ value: 1, label: 'Service' }, { value: 2, label: 'Host'}]}\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            { viewinput.email_config_type === 1 && <Col sm=\"4\" >\n                                                <FormGroup>\n                                                    <Label for=\"email_service\">Email Service<span style={{color:'red'}}>*</span></Label>\n                                                    <Input type=\"text\"\n                                                        name=\"email_service\"\n                                                        id='email_service'\n                                                        value={viewinput?.email_service}\n                                                        disabled\n                                                        placeholder=\"email_service\"\n                                                    />\n                                                </FormGroup>\n                                            </Col> }\n                                            { viewinput.email_config_type === 2 && <Col sm=\"4\" >\n                                                <FormGroup>\n                                                    <Label for=\"email_host\">Email Host<span style={{color:'red'}}>*</span></Label>\n                                                    <Input type=\"text\"\n                                                        name=\"email_host\"\n                                                        id='email_host'\n                                                        value={viewinput?.email_host}\n                                                        disabled\n                                                        placeholder=\"email_host\"\n                                                    />\n                                                </FormGroup>\n                                            </Col> }\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                                <Card>\n                                    <CardHeader className='border-bottom'>\n                                        <CardTitle tag='h4'>Push Notification</CardTitle>\n                                    </CardHeader>\n                                   <CardBody style={{ paddingTop: '15px' }}>\n                                        <Row>\n                                            <Col sm=\"6\" >\n                                                    <FormGroup>\n                                                        <Label for=\"fcm_server_ring\">FCM Server Key<span style={{color:'red'}}>*</span></Label>\n                                                        <Input type=\"text\"\n                                                            name=\"fcm_server_ring\"\n                                                            id='fcm_server_ring'\n                                                            value={viewinput?.fcm_server_ring}\n                                                            disabled\n                                                            placeholder=\"fcm server key\"\n                                                        />\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n                                        </CardBody>\n                                </Card>\n                            </CardBody>\n                        </Card>\n\n                            {/*marketing preferance start*/}\n                            <Card>\n                                <CardHeader>\n                                    <CardTitle tag='h4'>Marketing Preference</CardTitle>\n                                </CardHeader>\n\n                                <CardBody>\n\n                                    <Row>\n                                        {\n                                            businessmarketingpref.length ? businessmarketingpref.map((item, index) => <Col sm='12' md='2' key={index}>\n                                                <CustomInput inline type='checkbox' disabled defaultChecked id={`marketingpreference${index}`} value={index} label={item['marketingpref'] ? item['marketingpref']['statusdesc'] : null} />\n                                            </Col>) : null\n                                        }\n\n                                    </Row>\n\n                                </CardBody>\n                            </Card>\n                            {/*marketing preferance end*/}\n\n                            {/*customer tag start*/}\n                            {/* <Card>\n                                <CardHeader>\n                                    <CardTitle tag='h4'>Customer Tags</CardTitle>\n                                </CardHeader>\n\n                                <CardBody>\n\n                                    {\n                                        businesstagmap.length ? <Fragment>\n\n                                            <Row className=\"customanttag\">\n                                                <Col sm='12' md='12'>\n                                                    {\n                                                        businesstagmap.map((tag, index) => <Tag\n                                                            key={index}\n                                                        >\n                                                            <span>\n                                                                {tag['businesstag']['statusdesc'].length > 20 ? `${tag['businesstag']['statusdesc'].slice(0, 20)}...` : tag['businesstag']['statusdesc']}\n                                                            </span>\n                                                        </Tag>\n\n                                                        )\n                                                    }\n\n                                                </Col>\n\n                                            </Row>\n                                        </Fragment> : null\n                                    }\n\n\n                                </CardBody>\n                            </Card> */}\n                            {/*customer tag end*/}\n\n                            {/*comment start*/}\n                            {/* <Card>\n                                <CardHeader>\n                                    <CardTitle tag='h4'>Comment</CardTitle>\n                                </CardHeader>\n\n                                <CardBody>\n\n                                    <Row className=\"customanttag\">\n                                        {\n                                            customercomment.map((comment, index) => <Col sm='12' md='12' key={index} >\n                                                <Card >\n                                                    <CardBody>\n                                                        <span>\n                                                            {comment['username']} &nbsp; &nbsp; {getTimeStampToDateTime(comment['createdat'])} <br />\n                                                        </span>\n                                                        <span>\n                                                            {comment['comment']}\n                                                        </span>\n                                                    </CardBody>\n                                                </Card>\n                                            </Col>)\n                                        }\n\n                                    </Row>\n\n                                </CardBody>\n                            </Card> */}\n                            {/*comment end*/}\n\n                        </Col>\n\n                    </Row>\n                </Form>\n            }\n\n\n        </Fragment>\n    )\n}\nexport default ViewBusiness\n","import { Fragment, useState } from 'react'\nimport { toast, Slide } from 'react-toastify'\n\n    export const Error = (err) => {\n        try {\n            const e = err.response\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500 || e.status === 409) {\n                toast.error(e.data.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n            } else  {\n                toast.error('The server is under maintenance', {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined\n                    }) \n            }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        }\n \n    }\n\n    export const ErrorMessage = (err) => {\n        try {\n        const e = err.response\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n         }\n        } catch (e) {\n            toast.error('Please check your connection', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n                })  \n        } \n    }\n    export const Success = (response) => {\n        const message = response.data.message || 'success'\n        toast.success(message, {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n            })  \n    }\n\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","export default function omit(obj, fields) {\n  var clone = Object.assign({}, obj);\n  if (Array.isArray(fields)) {\n    fields.forEach(function (key) {\n      delete clone[key];\n    });\n  }\n  return clone;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nvar Element = function Element(props) {\n  var prefixCls = props.prefixCls,\n    className = props.className,\n    style = props.style,\n    size = props.size,\n    shape = props.shape;\n  var sizeCls = classNames(_defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-lg\"), size === 'large'), \"\".concat(prefixCls, \"-sm\"), size === 'small'));\n  var shapeCls = classNames(_defineProperty(_defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-circle\"), shape === 'circle'), \"\".concat(prefixCls, \"-square\"), shape === 'square'), \"\".concat(prefixCls, \"-round\"), shape === 'round'));\n  var sizeStyle = React.useMemo(function () {\n    return typeof size === 'number' ? {\n      width: size,\n      height: size,\n      lineHeight: \"\".concat(size, \"px\")\n    } : {};\n  }, [size]);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(prefixCls, sizeCls, shapeCls, className),\n    style: _extends(_extends({}, sizeStyle), style)\n  });\n};\nexport default Element;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nvar SkeletonAvatar = function SkeletonAvatar(props) {\n  var customizePrefixCls = props.prefixCls,\n    className = props.className,\n    active = props.active,\n    _props$shape = props.shape,\n    shape = _props$shape === void 0 ? 'circle' : _props$shape,\n    _props$size = props.size,\n    size = _props$size === void 0 ? 'default' : _props$size;\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  var otherProps = omit(props, ['prefixCls', 'className']);\n  var cls = classNames(prefixCls, \"\".concat(prefixCls, \"-element\"), _defineProperty({}, \"\".concat(prefixCls, \"-active\"), active), className);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(Element, _extends({\n    prefixCls: \"\".concat(prefixCls, \"-avatar\"),\n    shape: shape,\n    size: size\n  }, otherProps)));\n};\nexport default SkeletonAvatar;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nvar SkeletonButton = function SkeletonButton(props) {\n  var customizePrefixCls = props.prefixCls,\n    className = props.className,\n    active = props.active,\n    _props$block = props.block,\n    block = _props$block === void 0 ? false : _props$block,\n    _props$size = props.size,\n    size = _props$size === void 0 ? 'default' : _props$size;\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  var otherProps = omit(props, ['prefixCls']);\n  var cls = classNames(prefixCls, \"\".concat(prefixCls, \"-element\"), _defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-active\"), active), \"\".concat(prefixCls, \"-block\"), block), className);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(Element, _extends({\n    prefixCls: \"\".concat(prefixCls, \"-button\"),\n    size: size\n  }, otherProps)));\n};\nexport default SkeletonButton;","// This icon file is generated automatically.\nvar DotChartOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M888 792H200V168c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v688c0 4.4 3.6 8 8 8h752c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM288 604a64 64 0 10128 0 64 64 0 10-128 0zm118-224a48 48 0 1096 0 48 48 0 10-96 0zm158 228a96 96 0 10192 0 96 96 0 10-192 0zm148-314a56 56 0 10112 0 56 56 0 10-112 0z\" } }] }, \"name\": \"dot-chart\", \"theme\": \"outlined\" };\nexport default DotChartOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DotChartOutlinedSvg from \"@ant-design/icons-svg/es/asn/DotChartOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar DotChartOutlined = function DotChartOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DotChartOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(DotChartOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'DotChartOutlined';\n}\nexport default RefIcon;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport DotChartOutlined from \"@ant-design/icons/es/icons/DotChartOutlined\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nvar SkeletonNode = function SkeletonNode(props) {\n  var customizePrefixCls = props.prefixCls,\n    className = props.className,\n    style = props.style,\n    active = props.active,\n    children = props.children;\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  var cls = classNames(prefixCls, \"\".concat(prefixCls, \"-element\"), _defineProperty({}, \"\".concat(prefixCls, \"-active\"), active), className);\n  var content = children !== null && children !== void 0 ? children : /*#__PURE__*/React.createElement(DotChartOutlined, null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"\".concat(prefixCls, \"-image\"), className),\n    style: style\n  }, content));\n};\nexport default SkeletonNode;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nvar path = 'M365.714286 329.142857q0 45.714286-32.036571 77.677714t-77.677714 32.036571-77.677714-32.036571-32.036571-77.677714 32.036571-77.677714 77.677714-32.036571 77.677714 32.036571 32.036571 77.677714zM950.857143 548.571429l0 256-804.571429 0 0-109.714286 182.857143-182.857143 91.428571 91.428571 292.571429-292.571429zM1005.714286 146.285714l-914.285714 0q-7.460571 0-12.873143 5.412571t-5.412571 12.873143l0 694.857143q0 7.460571 5.412571 12.873143t12.873143 5.412571l914.285714 0q7.460571 0 12.873143-5.412571t5.412571-12.873143l0-694.857143q0-7.460571-5.412571-12.873143t-12.873143-5.412571zM1097.142857 164.571429l0 694.857143q0 37.741714-26.843429 64.585143t-64.585143 26.843429l-914.285714 0q-37.741714 0-64.585143-26.843429t-26.843429-64.585143l0-694.857143q0-37.741714 26.843429-64.585143t64.585143-26.843429l914.285714 0q37.741714 0 64.585143 26.843429t26.843429 64.585143z';\nvar SkeletonImage = function SkeletonImage(props) {\n  var customizePrefixCls = props.prefixCls,\n    className = props.className,\n    style = props.style,\n    active = props.active;\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  var cls = classNames(prefixCls, \"\".concat(prefixCls, \"-element\"), _defineProperty({}, \"\".concat(prefixCls, \"-active\"), active), className);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"\".concat(prefixCls, \"-image\"), className),\n    style: style\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    viewBox: \"0 0 1098 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"\".concat(prefixCls, \"-image-svg\")\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: path,\n    className: \"\".concat(prefixCls, \"-image-path\")\n  }))));\n};\nexport default SkeletonImage;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Element from './Element';\nvar SkeletonInput = function SkeletonInput(props) {\n  var customizePrefixCls = props.prefixCls,\n    className = props.className,\n    active = props.active,\n    block = props.block,\n    _props$size = props.size,\n    size = _props$size === void 0 ? 'default' : _props$size;\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  var otherProps = omit(props, ['prefixCls']);\n  var cls = classNames(prefixCls, \"\".concat(prefixCls, \"-element\"), _defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-active\"), active), \"\".concat(prefixCls, \"-block\"), block), className);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cls\n  }, /*#__PURE__*/React.createElement(Element, _extends({\n    prefixCls: \"\".concat(prefixCls, \"-input\"),\n    size: size\n  }, otherProps)));\n};\nexport default SkeletonInput;","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nvar Paragraph = function Paragraph(props) {\n  var getWidth = function getWidth(index) {\n    var width = props.width,\n      _props$rows = props.rows,\n      rows = _props$rows === void 0 ? 2 : _props$rows;\n    if (Array.isArray(width)) {\n      return width[index];\n    }\n    // last paragraph\n    if (rows - 1 === index) {\n      return width;\n    }\n    return undefined;\n  };\n  var prefixCls = props.prefixCls,\n    className = props.className,\n    style = props.style,\n    rows = props.rows;\n  var rowList = _toConsumableArray(Array(rows)).map(function (_, index) {\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/no-array-index-key\n      React.createElement(\"li\", {\n        key: index,\n        style: {\n          width: getWidth(index)\n        }\n      })\n    );\n  });\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: classNames(prefixCls, className),\n    style: style\n  }, rowList);\n};\nexport default Paragraph;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable jsx-a11y/heading-has-content */\nimport classNames from 'classnames';\nimport * as React from 'react';\nvar Title = function Title(_ref) {\n  var prefixCls = _ref.prefixCls,\n    className = _ref.className,\n    width = _ref.width,\n    style = _ref.style;\n  return /*#__PURE__*/React.createElement(\"h3\", {\n    className: classNames(prefixCls, className),\n    style: _extends({\n      width: width\n    }, style)\n  });\n};\nexport default Title;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport SkeletonAvatar from './Avatar';\nimport SkeletonButton from './Button';\nimport SkeletonNode from './Node';\nimport Element from './Element';\nimport SkeletonImage from './Image';\nimport SkeletonInput from './Input';\nimport Paragraph from './Paragraph';\nimport Title from './Title';\nfunction getComponentProps(prop) {\n  if (prop && _typeof(prop) === 'object') {\n    return prop;\n  }\n  return {};\n}\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    // Square avatar\n    return {\n      size: 'large',\n      shape: 'square'\n    };\n  }\n  return {\n    size: 'large',\n    shape: 'circle'\n  };\n}\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n  return {};\n}\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  var basicProps = {};\n  // Width\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  }\n  // Rows\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n  return basicProps;\n}\nvar Skeleton = function Skeleton(props) {\n  var customizePrefixCls = props.prefixCls,\n    loading = props.loading,\n    className = props.className,\n    style = props.style,\n    children = props.children,\n    _props$avatar = props.avatar,\n    avatar = _props$avatar === void 0 ? false : _props$avatar,\n    _props$title = props.title,\n    title = _props$title === void 0 ? true : _props$title,\n    _props$paragraph = props.paragraph,\n    paragraph = _props$paragraph === void 0 ? true : _props$paragraph,\n    active = props.active,\n    round = props.round;\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  if (loading || !('loading' in props)) {\n    var hasAvatar = !!avatar;\n    var hasTitle = !!title;\n    var hasParagraph = !!paragraph;\n    // Avatar\n    var avatarNode;\n    if (hasAvatar) {\n      var avatarProps = _extends(_extends({\n        prefixCls: \"\".concat(prefixCls, \"-avatar\")\n      }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar));\n      // We direct use SkeletonElement as avatar in skeleton internal.\n      avatarNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-header\")\n      }, /*#__PURE__*/React.createElement(Element, _extends({}, avatarProps)));\n    }\n    var contentNode;\n    if (hasTitle || hasParagraph) {\n      // Title\n      var $title;\n      if (hasTitle) {\n        var titleProps = _extends(_extends({\n          prefixCls: \"\".concat(prefixCls, \"-title\")\n        }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n        $title = /*#__PURE__*/React.createElement(Title, _extends({}, titleProps));\n      }\n      // Paragraph\n      var paragraphNode;\n      if (hasParagraph) {\n        var paragraphProps = _extends(_extends({\n          prefixCls: \"\".concat(prefixCls, \"-paragraph\")\n        }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n        paragraphNode = /*#__PURE__*/React.createElement(Paragraph, _extends({}, paragraphProps));\n      }\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-content\")\n      }, $title, paragraphNode);\n    }\n    var cls = classNames(prefixCls, _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-with-avatar\"), hasAvatar), \"\".concat(prefixCls, \"-active\"), active), \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), \"\".concat(prefixCls, \"-round\"), round), className);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: style\n    }, avatarNode, contentNode);\n  }\n  return typeof children !== 'undefined' ? children : null;\n};\nSkeleton.Button = SkeletonButton;\nSkeleton.Avatar = SkeletonAvatar;\nSkeleton.Input = SkeletonInput;\nSkeleton.Image = SkeletonImage;\nSkeleton.Node = SkeletonNode;\nexport default Skeleton;","import Skeleton from './Skeleton';\nexport default Skeleton;"],"sourceRoot":""}